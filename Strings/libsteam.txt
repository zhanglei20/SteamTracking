__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
operator delete(void*)
std::string::_Rep::_S_empty_rep_storage
std::exception::~exception()
std::string::_Rep::_M_destroy(std::allocator<char> const&)
operator new(unsigned int)
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::string const&)
__gxx_personality_v0
__cxa_allocate_exception
__cxa_throw
std::terminate()
memmove
pthread_mutex_unlock
pthread_mutex_lock
__cxa_begin_catch
__cxa_end_catch
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutex_destroy
__cxa_pure_virtual
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__class_type_info
typeinfo for std::exception
pthread_cancel
__cxa_call_unexpected
std::__throw_bad_alloc()
ftime
ctime
strlen
strcmp
fwrite
rewind
fileno
ftruncate64
std::cout
std::basic_ostream<char, std::char_traits<char>>& std::__ostream_insert<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, char const*, int)
fflush
std::basic_ios<char, std::char_traits<char>>::clear(std::_Ios_Iostate)
fclose
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(char const*, std::allocator<char> const&)
std::string::reserve(unsigned int)
std::string::append(char const*, unsigned int)
std::string::append(std::string const&)
__cxa_free_exception
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string()
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
__cxa_atexit
__dynamic_cast
__cxa_rethrow
memcpy
memset
operator delete[](void*)
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(char const*, unsigned int, std::allocator<char> const&)
malloc
std::string::assign(char const*, unsigned int)
free
std::string::assign(std::string const&)
std::_Rb_tree_increment(std::_Rb_tree_node_base*)
__cxa_guard_acquire
__cxa_guard_release
__cxa_guard_abort
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
std::string::find(char, unsigned int) const
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::string const&, unsigned int, unsigned int)
std::__throw_out_of_range(char const*)
std::_List_node_base::_M_unhook()
std::_List_node_base::_M_hook(std::_List_node_base*)
std::string::_M_leak_hard()
tolower
vtable for __cxxabiv1::__vmi_class_type_info
socket
bind
select
recvfrom
sendto
std::string::compare(char const*) const
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_streambuf<char, std::char_traits<char>>
std::locale::~locale()
std::ios_base::ios_base()
VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_ios<char, std::char_traits<char>>
std::basic_ios<char, std::char_traits<char>>::init(std::basic_streambuf<char, std::char_traits<char>>*)
vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>
std::locale::locale()
std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)
std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
std::ios_base::~ios_base()
std::__throw_logic_error(char const*)
std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_stringstream()
VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::_M_sync(char*, unsigned int, unsigned int)
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream()
getenv
getcwd
std::string::_M_mutate(unsigned int, unsigned int, unsigned int)
std::ostream::operator<<(int)
strerror
__errno_location
std::__throw_length_error(char const*)
std::string::rfind(char, unsigned int) const
remove
dlopen
dlsym
dlclose
std::cerr
std::ostream::put(char)
std::ostream::flush()
std::ctype<char>::_M_widen_init() const
std::__throw_bad_cast()
strrchr
strspn
strpbrk
strstr
fread
vtable for std::bad_alloc
std::bad_alloc::~bad_alloc()
typeinfo for std::bad_alloc
feof
stderr
strncpy
realloc
operator new[](unsigned int)
memcmp
std::string::compare(unsigned int, unsigned int, char const*, unsigned int) const
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
__strtol_internal
strcspn
std::istream::getline(char*, int, char)
std::string::resize(unsigned int, char)
std::string::swap(std::string&)
strcat
vsnprintf
srand
__strtoul_internal
isalnum
mbstowcs
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::basic_string(wchar_t const*, std::allocator<wchar_t> const&)
std::string::copy(char*, unsigned int, unsigned int) const
gethostname
gethostbyname
inet_addr
writev
readv
shutdown
ioctl
connect
setsockopt
std::string::compare(unsigned int, unsigned int, char const*) const
strcasecmp
getuid
getpwuid
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(unsigned int, char, std::allocator<char> const&)
getsockname
std::basic_ostream<char, std::char_traits<char>>& std::operator<< <std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, char const*)
std::ostream& std::ostream::_M_insert<bool>(bool)
std::string::find(char const*, unsigned int, unsigned int) const
strcpy
toupper
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::str() const
std::ostream& std::ostream::_M_insert<unsigned long long>(unsigned long long)
setenv
strncasecmp
sscanf
SteamFindServersGetErrorString
SteamFindServersIterateServer
SteamFindServersNumServers
SteamEncryptDataForThisMachine
SteamDecryptDataForThisMachine
SteamWeakVerifyNewValveCDKey
SteamGetEncryptedNewValveCDKey
VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream()
std::string::append(char const*)
strchr
fseeko64
ftello64
fseek
std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
std::string::find_last_of(char const*, unsigned int, unsigned int) const
ferror
clearerr
ftell
std::runtime_error::runtime_error(std::string const&)
std::runtime_error::~runtime_error()
typeinfo for std::runtime_error
__cxa_bad_cast
InternalSteamNumClientsConnectedToEngine
SteamClearError
fputs
std::string::replace(unsigned int, unsigned int, char const*, unsigned int)
std::istream& std::istream::_M_extract<unsigned int>(unsigned int&)
std::string::append(unsigned int, char)
tmpfile64
setvbuf
std::string::compare(std::string const&) const
std::string::insert(unsigned int, char const*, unsigned int)
std::string::find_first_not_of(char const*, unsigned int, unsigned int) const
kill
SteamShutdownEngine
SteamGetVersion
SteamCreateLogContext
SteamLog
SteamLogResourceLoadStarted
SteamLogResourceLoadFinished
SteamChangeAccountName
SteamIsUsingSdkContentServer
SteamUnsubscribe
SteamDeleteAccount
SteamCheckAppOwnership
SteamGetAppDLCStatus
SteamForceCellId
SteamWasBlobRegistryDeleted
SteamGetLocalClientVersion
SteamGetTotalUpdateStats
SteamGetAppUpdateStats
SteamUpdateSubscriptionBillingInfo
SteamUpdateAccountBillingInfo
SteamRequestEmailAddressVerificationEmail
SteamVerifyEmailAddress
SteamChangeEmailAddress
SteamGetCurrentEmailAddress
SteamGetContentServerInfo
SteamGetSponsorUrl
SteamChangePersonalQA
SteamChangePassword
SteamGetNumAccountsWithEmailAddress
SteamRequestAccountsByCdKeyEmail
SteamRequestAccountsByEmailAddressEmail
SteamRequestForgottenPasswordEmail
SteamChangeForgottenPassword
SteamSetNotificationCallback
SteamUninstall
SteamSetAppVersion
SteamReleaseCacheFiles
SteamSetAppCacheSize
SteamGetAppCacheSize
SteamMoveApp
SteamGetAppDir
SteamSetCacheDefaultDirectory
SteamGetCacheDefaultDirectory
SteamRefreshMinimumFootprintFiles
SteamGetCacheDecryptionKey
SteamLoadFileToApp
SteamLoadFileToCache
SteamIsFileNeededByApp
SteamIsFileNeededByCache
SteamLoadCacheFromDir
SteamDefragCaches
SteamGetCachePercentFragmentation
SteamRepairOrDecryptCaches
SteamFlushCache
SteamStopLoadingCache
SteamStartLoadingCache
SteamGetCurrentCellID
SteamIsCacheLoadingEnabled
SteamGetCacheFilePath
SteamCreateCachePreloaders
SteamLaunchApp
SteamWaitForAppReadyToLaunch
SteamGetAppUserDefinedRecord
SteamGetAppUserDefinedInfo
SteamGetAppDependencies
SteamFindApp
SteamRemoveAppDependency
SteamInsertAppDependency
SteamEnumerateAppDependency
SteamEnumerateAppIcon
SteamEnumerateAppLaunchOption
SteamEnumerateAppVersion
SteamGetSubscriptionPurchaseCountry
SteamGetAppPurchaseCountry
SteamGetDepotParent
SteamEnumerateApp
SteamGetAppIds
SteamGetAppStats
SteamGetSubscriptionExtendedInfo
SteamEnumerateSubscriptionDiscountQualifier
SteamEnumerateSubscriptionDiscount
SteamEnumerateSubscription
SteamGetSubscriptionIds
SteamGetSubscriptionStats
SteamIsAppSubscribed
SteamIsSubscribed
SteamAckSubscriptionReceipt
SteamGetSubscriptionReceipt
SteamSubscribe
SteamRefreshAccountInfo2
SteamRefreshAccountInfoEx
SteamRefreshAccountInfo
SteamVerifyPassword
SteamGetAccountStatus
SteamGetUserType
SteamRefreshLogin
SteamIsSecureComputer
SteamLogout
SteamLogin
SteamGetUser
SteamSetUser2
SteamSetUser
SteamIsLoggedIn
SteamGenerateSuggestedAccountNames
SteamIsAccountNameInUse
SteamCreateAccount
SteamSetMaxStallCount
SteamBlockingCall
SteamAbortCall
SteamProcessCall
SteamGetEncryptedUserIDTicket
SteamWaitForAppResources
SteamWaitForResources
SteamResumeCachePreloading
SteamPauseCachePreloading
SteamForgetAllHints
SteamHintResourceNeed
SteamIsFileImmediatelyAvailable
SteamFindClose
SteamFindNext64
SteamFindNext
SteamFindFirst64
SteamFindFirst
SteamGetLocalFileCopy
SteamSizeFile64
SteamSizeFile
SteamTellFile64
SteamTellFile
SteamSeekFile64
SteamSeekFile
SteamSetvBuf
SteamPrintFile
vfprintf
SteamPutc
fputc
SteamGetc
fgetc
SteamWriteFile
SteamReadFile
SteamCloseFile
SteamOpenTmpFile
SteamOpenFile64
SteamOpenFile
SteamFlushFile
SteamGetFileAttributeFlags
SteamStat64
SteamStat
SteamUnmountFilesystem
SteamUnmountAppFilesystem
SteamMountFilesystem
SteamMountAppFilesystem
SteamChangeOfflineStatus
SteamGetOfflineStatus
SteamNumAppsRunning
SteamOpenFileEx
SteamCleanup
SteamStartEngine
SteamStartup
SteamStartEngineEx
CreateInterface
SteamMiniDumpInit
InternalSteamShouldShutdownEngine2
std::string::_M_leak()
std::string::end()
SteamShutdownSteamBridgeInterface
std::_List_node_base::_M_transfer(std::_List_node_base*, std::_List_node_base*)
vtable for std::basic_ifstream<char, std::char_traits<char>>
vtable for std::basic_filebuf<char, std::char_traits<char>>
std::basic_filebuf<char, std::char_traits<char>>::close()
std::__basic_file<char>::~__basic_file()
VTT for std::basic_ifstream<char, std::char_traits<char>>
SteamShutdownUserIDTicketValidator
SteamGetEncryptionKeyToSendToNewClient
SteamAbortOngoingUserIDTicketValidation
SteamOptionalCleanUpAfterClientHasDisconnected
SteamStartValidatingNewValveCDKey
SteamStartValidatingUserIDTicket
SteamProcessOngoingUserIDTicketValidation
recv
send
getsockopt
std::string::clear()
SteamInitializeUserIDTicketValidator
__fxstat64
chdir
strdup
putenv
fchmod
fchown
fgets
strcasestr
munmap
msync
getpid
CleanupSemaphores
semget
semctl
semop
usleep
CleanupFIFOs
readdir64
strncmp
closedir
clock_gettime
nanosleep
getrlimit64
setrlimit64
pthread_setschedparam
sendfile64
lseek64
fsync
fcntl
mmap64
pthread_cond_destroy
pthread_cond_broadcast
pthread_cond_signal
gettimeofday
pthread_cond_timedwait
pthread_cond_wait
pthread_mutexattr_destroy
pthread_cond_init
pthread_mutex_trylock
pthread_self
pthread_attr_init
pthread_attr_setstacksize
pthread_attr_setdetachstate
pthread_create
pthread_setspecific
alphasort64
scandir64
pthread_key_create
pthread_getspecific
realpath
access
opendir
SteamRealPath
freopen
fopen
fopen64
scandir
__xstat
__lxstat
__xstat64
__lxstat64
lchown
symlink
mount
unlink
mkfifo
rename
utime
utimes
mkdir
rmdir
std::string::size() const
std::string::operator[](unsigned int) const
std::string::operator=(std::string const&)
std::string::c_str() const
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::_Ios_Openmode)
std::ostream::operator<<(unsigned int)
std::allocator<char>::allocator()
std::allocator<char>::~allocator()
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string()
std::string::operator[](unsigned int)
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::basic_istringstream(std::string const&, std::_Ios_Openmode)
std::istream::operator>>(unsigned int&)
std::string::replace(unsigned int, unsigned int, std::string const&)
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str() const
vtable for std::exception
std::basic_ios<char, std::char_traits<char>>::fill(char)
std::basic_ostream<char, std::char_traits<char>>& std::operator<< <char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, std::_Setbase)
std::ostream::operator<<(unsigned long)
std::string::resize(unsigned int)
std::string::begin()
gmtime
std::istream::seekg(long long, std::_Ios_Seekdir)
std::istream::peek()
std::istream::tellg()
VTT for std::basic_ofstream<char, std::char_traits<char>>
vtable for std::basic_ofstream<char, std::char_traits<char>>
std::basic_filebuf<char, std::char_traits<char>>::basic_filebuf()
std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf()
std::basic_ios<char, std::char_traits<char>>::~basic_ios()
std::basic_ifstream<char, std::char_traits<char>>::~basic_ifstream()
std::istream::read(char*, int)
std::basic_filebuf<char, std::char_traits<char>>::open(char const*, std::_Ios_Openmode)
std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream()
std::ostream::write(char const*, int)
std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf()
std::basic_istream<char, std::char_traits<char>>& std::ws<char, std::char_traits<char>>(std::basic_istream<char, std::char_traits<char>>&)
std::istream::putback(char)
calloc
libdl.so.2
libpthread.so.0
librt.so.1
libstdc++.so.6
libm.so.6
pthread_once
dl_iterate_phdr
libc.so.6
__environ
__xmknod
_edata
__bss_start
_end
GLIBC_2.0
GLIBC_2.2
GLIBC_2.1
GLIBC_2.2.4
GLIBC_2.3
GLIBC_2.1.3
GLIBCXX_3.4.11
GLIBCXX_3.4.14
GLIBCXX_3.4.9
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.3.2
ShippedAssert
DebugAssert
AssertPostCondition
AssertPreCondition
AssertPostcondition
AssertClassInvariant
Precondition
N6common19CErrorCodeExceptionE
N6common15IAssertObserverE
N6common19ICloneableExceptionE
%.7s
%.4s
%.8s.%.3hu
%.3lf
[%u]
strlen(szBuffer) < EBufSize
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Logging/Src/Log.cpp
N6common9CLogGroupE
N6common11CLogContextE
15ScopeGuardImpl1IPFiPvES0_E
18ScopeGuardImplBase
N6common4CLogE
MbP?
Failed to open logfile 
N6common8CLogFileE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/BlobRegistry.cpp
CMultiFieldBlob: Failed to flush changes to memory mapped file
The registry is in use by another process, timeout expired
Cannot open blob archive file: 
Can only rename immediate subkeys
(CloseHandle(m_hFileMutex)) != 0
(CloseHandle(m_hFileSignal)) != 0
Failed to create file access mutex
m_pKey
pOtherBlobSubkKeyIterator
(SetEvent(m_hFileMutex)) != 0
NonNullValueName
NonNullCallerDataPtr
PositiveLength
string
binary
Type mismatch on value "
", expected 
 but got 
String: 
Number: 0x%8.8x
szFmtBuf
%2.2x
Value "
" does not exist
Failed to query key 
 for value info
unsigned number
unknown
CallerBufSizeNonZero
NonNullCallerBytesPtr
NonNullCallersNumberPtr
File does not exist: 
TopKey
!m_bWatchdogThreadRunning
: unknown error
NonNullSubKeyName
NonNullNewSubKeyName
key is in use
Failed to rename key 
NoTrailingSlash
NoDoubleSlashes
basic_string::at
Failed to delete key 
key has subkeys
key is already open
subkey already exists
Cannot delete root key
Failed to open key 
Failed to create key 
\n Details: 
BlobRegistry Watchdog
dwRet != 0
dwRet <= 4096
BlobRegistryMutex_
BlobRegistrySignal_
N6common21CCommandStatusControlE
N6common18CBlobValueIteratorE
N6common19CBlobSubKeyIteratorE
N6common13CBlobRegistryE
N6common8CBlobKeyE
N6common14CBlobExceptionE
N6common18CRegistryExceptionE
N6common15CMultiFieldBlob14index_iteratorE
N6common15CMultiFieldBlob19index_iterator_implE
St8iteratorISt26random_access_iterator_tagSsiPSsRSsE
N6common15CMultiFieldBlob37CFlushMemoryMappedFileFailedExceptionE
N6common15CMultiFieldBlob14CBlobExceptionE
18ObjScopeGuardImpl0IN6common13CBlobRegistryEMS1_FvvEE
N8CryptoPP12IteratedHashImLb0ELj64EEE
N8CryptoPP16IteratedHashBaseImEE
N8CryptoPP18StringSinkTemplateISsEE
N8CryptoPP4SinkE
N8CryptoPP12StringSourceE
N8CryptoPP6SourceE
N6common15CInUseExceptionE
18ObjScopeGuardImpl0IN6common13CBlobRegistry5CImplEMS2_FvvEE
N6common15ObjFunctorImpl0INS_13CBlobRegistryEMS1_FvvEEE
N6common15FunctorImplBaseE
N6common8IFunctorE
N6common27CValueDoesNotExistExceptionE
N6common22CTypeMismatchExceptionE
N6common8CBlobKey10CPublicKeyE
18ObjScopeGuardImpl0IN6common8CBlobKeyEMS1_FvvEE
N6common15CMultiFieldBlob31CInvalidSerializedBlobExceptionE
N6common15CMultiFieldBlob38CFailedToOpenMemoryMappedFileExceptionE
18CBlockingUDPSocket
?N6common9CBadAllocE
N6common13CRuntimeErrorE
N6common16CExceptionHolderE
Failed to open config file %s
pResult != 0
basic_string::_S_construct NULL not valid
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/ConfigDatabase.cpp
N6common19CMainConfigDatabaseE
N6common15CConfigDatabaseE
N6common32CNamedArgsUndefinedNameExceptionE
N6common19CNamedArgsExceptionE
N6common11CConfigTreeE
NoMachineSpecificPassphraseAvailable
, errno 
Failed to create OS thread
vector::reserve
pEventLoopThread
%s (%u) Starting
wait failed
%s (%u) Told to exit
!bInPause
Unknown exception
%s (%u) BEING TERMINATED
(CloseHandle( hThread )) != 0
Failed to create Event handle
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/EventLoopThread.cpp
(m_FinishedEvent.Set()) != false
(m_apSignalResumeEvent->Set()) != false
(m_apSignalPauseEvent->Set()) != false
(ResumeThread( m_hThread )) != (static_cast<DWORD>(~0))
(m_apSignalWaitEventsModifiedEvent->Set()) != false
%s (%u) Finished called without ever being started
(pEventLoopThread->m_FinishedEvent.Set()) != false
pEventLoopThread->m_cbAllowAlertableWait
(pEventLoopThread->m_SignalFinishEvent.Set()) != false
uEventIdx < pEventLoopThread->m_vec_pair_Handle_tsrcpEventFunctor.size()
(m_SignalFinishEvent.Set()) != false
(ResumeThread( hThread )) != (static_cast<DWORD>(~0))
N6common16CEventLoopThreadE
N6common16CEventLoopThread10CExceptionE
18ObjScopeGuardImpl0IN6common16CEventLoopThreadEMS1_FvvEE
Failed to set file attributes
File does not exist: '%s'
Failed to create directory 
Failed to remove file "
GetSteamInstallDir
GetSteamExePath
SetCurrentDirectory() failed
cszDirName
%s/*.*
%s/%s
Failed to remove file 
(_findclose( hFile )) == 0
Failed to remove directory 
Cannot delete file 
Source dir does not exist
A directory named '
' already exists
MoveFileEx failed
?;*<>|:\//"
ERROR: copying 
ERROR: copied 
 but 
 doesn't exist
access(sFile.c_str(), 6) == 0
ERROR: delete of 
ERROR: deleted 
 but the file is still there
ERROR: renamed 
Cannot open output file '%s'
Cannot open file '%s'
Failed to read file '%s'
pu8Buf1
pu8Buf2
Failed to create temp file
clock$
com1
com2
com3
com4
com5
com6
com7
com8
com9
lpt1
lpt2
lpt3
lpt4
lpt5
lpt6
lpt7
lpt8
lpt9
Directory does not exist: '%s'
 expected to be a file but isn't
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/FileUtil.cpp
Cannot Remove Directory, Error is 
(::SetCurrentDirectory( sPath.c_str() )) != 0
Source and destination must be full paths including drive letter
access(sSrcFile.c_str(), 4) == 0
access(sDestFile.c_str(), 6) == 0
Failed to write output file '%s'
Missing or non-file input file: '%s'
Port TBD - FileUtil RecursiveCalcFolderSize\n
N6common9CFindFileE
N6common9CFileUtil9IFindFileE
15ScopeGuardImpl1IPFiiEiE
15ScopeGuardImpl1IPFiP8_IO_FILEES1_E
N8CryptoPP12IteratedHashImLb1ELj64EEE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/MultiFieldBlob.cpp
nTrimmedSizeOfFile <= 2147483647L
CMultiFieldBlob: Unable to grow blob
m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd >= GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader()
m_eCacheState != eCachedMallocedPlaintextVersion && m_eCacheState != eCachePtrIsCopyOnWritePlaintextVersion
( !(m_uNumRegisteredChildren) || (( m_eCacheState == eCachedMallocedPlaintextVersion || m_eCacheState == eCachePtrIsCopyOnWritePlaintextVersion ) && RecursivelyCheckAllChildrenAreCollapsed()) )
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/MultiFieldBlob.h
m_eMemoryOwnership == eChildBlobReferingToMemoryInParent
m_eMemoryOwnership == eTakeOwnershipOfMallocedSerializedBlob || m_eMemoryOwnership == eMemoryMappedFile || m_eMemoryOwnership == eFixedSizeUnowned
CMultiFieldBlob::RecursivelyEnsureSizeOfSpareCapacity(): attempt to grow eFixedSizeUnowned blob
CMultiFieldBlob::RecursivelyEnsureSizeOfSpareCapacity(): realloc() failed
m_pSerializedBlob == pReallocedBlob
CMultiFieldBlob::RecursivelyEnsureSizeOfSpareCapacity(): malloc() failed
CMultiFieldBlob: Attempt to update a field that has a registered child
uSizeOfExistingFieldData == uNewSizeOfFieldData
RecursivelyCheckAllChildrenAreCollapsed()
m_pCachedSerializedBlob && m_uSizeOfCacheIncludingUnusedAreaAtEnd >= sizeof( TBlobHeader ) && m_uSizeOfCacheIncludingUnusedAreaAtEnd == GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader() + m_uSizeOfUnusedCacheAfterEndOfBlob && reinterpret_cast<TBlobHeader *>( m_pCachedSerializedBlob )->m_u8PreprocessedFormatCode == ePlaintext && GetSizeOfSerializedBlobInBlobHeader() == GetSizeOfCachedSerializedBlobInCachedBlobHeader() && GetSizeOfSpareCapacityInBlobHeader() == GetSizeOfCachedSpareCapacityInCachedBlobHeader() && ( 0 == memcmp( m_pSerializedBlob, m_pCachedSerializedBlob, GetSizeOfSerializedBlobInBlobHeader() ) )
( !(m_eMemoryOwnership != eChildBlobReferingToMemoryInParent) || (m_pSerializedBlob && m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd == GetSizeOfSerializedBlobInBlobHeader() + GetSizeOfSpareCapacityInBlobHeader() + m_uSizeOfUnusedAreaAfterEndOfBlob) )
CMultiFieldBlob(pSerialized): Failed to malloc plaintext version of encrypted blob
CMultiFieldBlob(pSerialized): No decryption key supplied for encrypted blob
CMultiFieldBlob(pSerialized): Bad EncryptedBlob header
CMultiFieldBlob(pSerialized): Bad AES128 encryption header
CMultiFieldBlob(pSerialized): Bad encryption header
m_eAutoPreprocessCode == eAES128
CMultiFieldBlob(pSerialized): decrypted blob failed MAC
uSizeOfWrapperBlob >= u32SizeOfPlaintext
CMultiFieldBlob::UnpreprocessBlob(): realloc() failed
CMultiFieldBlob(pSerialized): Corrupt decrypted BlobHeader
CMultiFieldBlob(pSerialized): Bad CompressedBlob header #1
CMultiFieldBlob(pSerialized): Bad CompressedBlob header #2
CMultiFieldBlob(pSerialized): Bad CompressedBlob header #3
uSizeOfWrapperBlob < u32SizeOfPlaintext
CMultiFieldBlob(pSerialized): Corrupt decompressed BlobHeader
CMultiFieldBlob(pSerialized): Invalid m_u8PreprocessedFormatCode
m_eCacheState == eCachedMallocedPlaintextVersion || m_eCacheState == eCachePtrIsCopyOnWritePlaintextVersion
m_uSizeOfCacheIncludingUnusedAreaAtEnd >= sizeof( TBlobHeader ) && m_uSizeOfCacheIncludingUnusedAreaAtEnd == GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader() + m_uSizeOfUnusedCacheAfterEndOfBlob
( !(m_eCacheState == eCachePtrIsCopyOnWritePlaintextVersion) || (m_eMemoryOwnership == eTakeOwnershipOfMallocedSerializedBlob) )
( !(m_eMemoryOwnership != eChildBlobReferingToMemoryInParent) || (m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd == GetSizeOfSerializedBlobInBlobHeader() + GetSizeOfSpareCapacityInBlobHeader() + m_uSizeOfUnusedAreaAfterEndOfBlob) )
m_eCacheState == eCachedMallocedPlaintextVersion
m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd == 0
m_uSizeOfUnusedAreaAfterEndOfBlob == 0
m_uSizeOfCacheIncludingUnusedAreaAtEnd >= (std::max) ( GetSizeOfSerializedBlobInBlobHeader() + GetSizeOfSpareCapacityInBlobHeader(), GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader() )
uSizeOfCachedSerializedBlob == GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader()
uExtractedSizeOfFieldData == GetSizeOfSerializedBlobInBlobHeader() + GetSizeOfSpareCapacityInBlobHeader()
uExtractedSizeOfFieldData <= uSizeOfSwapFieldDataBuffer
uNewExtractedSizeOfFieldName == uExtractedSizeOfFieldName
uNewExtractedSizeOfFieldData == uNewSizeOfFieldData
uSizeOfPreprocessedVersion >= uSizeOfPlaintext
CMultiFieldBlob::PreprocessBlob(): realloc() failed
static_cast<size_t>( m_pCachedSerializedBlob + m_uSizeOfCacheIncludingUnusedAreaAtEnd - pData ) >= uSizeOfEncryptedData + MAC_t::DIGESTSIZE
(sDecryptedData.length() == uSizeOfPlaintext && sDecryptedData.compare ( 0, uSizeOfPlaintext, reinterpret_cast<char *>( m_pSerializedBlob ), uSizeOfPlaintext ) == 0) != false
(mac2.Verify( pData )) != false
m_u16AutoZLibCompressionLevel >= 1 && m_u16AutoZLibCompressionLevel <= 9
m_uSizeOfCacheIncludingUnusedAreaAtEnd >= GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader()
m_uSizeOfUnusedCacheAfterEndOfBlob == m_uSizeOfCacheIncludingUnusedAreaAtEnd
m_eCacheState == eCachedMallocedPreprocessedVersion || m_eCacheState == eCachePtrIsCopyOnWritePreprocessedVersion
m_uSizeOfCacheIncludingUnusedAreaAtEnd >= sizeof(TBlobHeader) && m_uSizeOfCacheIncludingUnusedAreaAtEnd == GetSizeOfCachedSerializedBlobInCachedBlobHeader() + GetSizeOfCachedSpareCapacityInCachedBlobHeader() + m_uSizeOfUnusedCacheAfterEndOfBlob
( !(m_eCacheState == eCachePtrIsCopyOnWritePreprocessedVersion) || (m_eMemoryOwnership == eTakeOwnershipOfMallocedSerializedBlob) )
m_eCacheState == eCachedMallocedPreprocessedVersion
GetSizeOfSerializedBlobInBlobHeader() == GetSizeOfCachedSerializedBlobInCachedBlobHeader() && GetSizeOfSpareCapacityInBlobHeader() == GetSizeOfCachedSpareCapacityInCachedBlobHeader() && ( 0 == memcmp( m_pSerializedBlob, m_pCachedSerializedBlob, GetSizeOfSerializedBlobInBlobHeader() ) )
GetSizeOfCachedSpareCapacityInCachedBlobHeader() == 0
m_pParentBlob->GetSizeOfSpareCapacityInBlobHeader() >= static_cast<size_t>( uSizeOfSpareCapacityCreatedByCompression )
CMultiFieldBlob(other): Failed to malloc copy of other blob
m_eMemoryOwnership == eCopyOnWrite
m_pParentBlob->m_uNumRegisteredChildren > 0
GetSizeOfSerializedBlobInBlobHeader() > sizeof( TBlobHeader )
CMultiFieldBlob::AddField(): Field already exists
CMultiFieldBlob::UpdateField(pNewChild): duplicate field name
uExtractedSizeOfFieldData == pNewChildBlob->GetSizeOfSerializedBlobInBlobHeader() + pNewChildBlob->GetSizeOfSpareCapacityInBlobHeader()
CMultiFieldBlob(pSerialized): Null pSerialized
CMultiFieldBlob(pSerialized): Invalid ExpectedSizeOfSerializedImage
CMultiFieldBlob(pSerialized): Invalid BinaryFormatCode
CMultiFieldBlob(pSerialized): BlobHeader says larger than SizeOfBlobBufferIncludingUnusedGrowthArea
CMultiFieldBlob(pSerialized): Bad BlobHeader doesn't match ExpectedSizeOfSerializedImage
CMultiFieldBlob(pSerialized): Partial field header at end of record
CMultiFieldBlob(pSerialized): Bad field - extends past end of blob
CMultiFieldBlob(pSerialized): FieldId defined twice
CMultiFieldBlob(pParent,FieldName): Field does not exist
eMemoryMappedFileAccessMode == eReadOnly
CMultiFieldBlob(mem-mapped file): Failed to open existing file
CMultiFieldBlob(mem-mapped file): Existing file too short or long to be a blob
CMultiFieldBlob(mem-mapped file): Failed to read blob header
CMultiFieldBlob(mem-mapped file): Bad blob header
m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd == m_uSizeOfExistingFile
CMultiFieldBlob(mem-mapped file): File does not exist and eReadOnly specified
CMultiFieldBlob(mem-mapped file): File does not exist and failed to create new file
CMultiFieldBlob(mem-mapped file): Failed to open file
CMultiFieldBlob(mem-mapped file): Failed to MapViewOfFile
m_uSizeOfBlobBufferIncludingUnusedAreaAtEnd - m_uSizeOfUnusedAreaAfterEndOfBlob == GetSizeOfSerializedBlobInBlobHeader() + GetSizeOfSpareCapacityInBlobHeader()
pSerializeField == m_pSerializedBlob + GetSizeOfSerializedBlobInBlobHeader() + uSizeOfNewFields
CMultiFieldBlob::AddFields(): duplicate field name
nSizeOfFieldsToMove >= 0
! m_pParentBlob
m_eCacheState == eCacheEmpty
m_uNumRegisteredChildren == 0
ZLib decompression failed
m_pCachedSerializedBlob
ZLib compression failed
! m_pSerializedBlob
! iterCurr->m_pChildBlob
m_pParentBlob == pParentBlob
N6common15CMultiFieldBlobE
N6common15CMultiFieldBlob31CRequiresDecryptionKeyExceptionE
N6common15CMultiFieldBlob29CPreprocessingFailedExceptionE
N8CryptoPP4HMACINS_3SHAEEE
N8CryptoPP17VariableKeyLengthILj16ELj0ELj4294967295ELj1EEE
N8CryptoPP9ArraySinkE
N8CryptoPP8RijndaelE
N8CryptoPP14FixedBlockSizeILj16EEE
N8CryptoPP17VariableKeyLengthILj16ELj16ELj32ELj8EEE
N8CryptoPP19BlockTransformationE
N6common15CMultiFieldBlob26CUnableToGrowBlobExceptionE
18ObjScopeGuardImpl0IN6common15CMultiFieldBlobEMS1_FvvEE
N6common15CMultiFieldBlob28CFieldAlreadyExistsExceptionE
N6common15CMultiFieldBlob49CAttemptToUpdateFieldWithRegisteredChildExceptionE
18ObjScopeGuardImpl1IN6common15CMultiFieldBlobEMS1_FvjEjE
18ObjScopeGuardImpl1ISt6vectorIN6common15CMultiFieldBlob18TFieldHeaderOffsetESaIS3_EEMS5_FvRS5_E9RefHolderIS5_EE
N6common15CMultiFieldBlob27CFieldDoesNotExistExceptionE
N6common15CMultiFieldBlob33CInvalidMemoryMappedFileExceptionE
15ScopeGuardImpl2IPFvRbPKcE9RefHolderIbES2_E
basic_string::substr
Bad config parameter: %s %s
Bad config parameter: %s %u
! IsDefined(sName)
Failed to insert 
 - already defined to: 
Failed to store named arg 
insertResult.second
Missing end-quote in: 
 =\t\r\n
 \t\r\n
Missing value in line: 
Tried to read undefined arg name: 
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/NamedArgs.cpp
Bad HierarhicalNamedArgs namespace name: %s
Missing key/value separator ('=') in line: 
Badly formed '%' value (only one '%') in line: 
Badly formed '%' value (missing ,Default) in line: 
N6common19CGetTokensExceptionE
N6common25CNamedArgsInsertExceptionE
vector::_M_range_check
vector::_M_fill_insert
String
UnsignedNumber
Binary
N6common14CValueIteratorE
N6common18IValueIteratorImplE
N6common15CSubKeyIteratorE
N6common19ISubKeyIteratorImplE
N6common9IRegistryE
N6common4IKeyE
vector::_M_insert_aux
CSimpleBitString Appending...
Test failed
Bits:
 Actual:
 Expected:
ReversiblyObfusticateBitsFromStart(): Bad NumBits
GenerateByteChecksumFromStart(): Bad NumBits
Not enough bits in CSimpleBitString
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/SimpleBitString.cpp
Idx < m_rSimpleBitString.m_vecU8.size()
CSimpleBitString Extracting...
Bad number string: '%s' is not a unsigned number
Bad number string: '%s' is not a signed number
N6common12CStringTable5CImplE
N6common12CStringTableE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/Thread.cpp
(CloseHandle(m_hThreadExitEvent)) != 0
(SetEvent( pThis->m_hThreadExitEvent )) != 0
(CloseHandle(m_hThread)) != 0
Wait for thread error
Failed to create thread
Thread is not running
Thread is already running
<no thread description>
N6common16CThreadLocalBaseE
N6common15CThreadLocalPtrISsEE
N6common7CThread30CThreadAlreadyRunningExceptionE
N6common7CThread10CExceptionE
N6common7CThread22CThreadCreateExceptionE
18ObjScopeGuardImpl0IN6common7CThread5CImplEMS2_FvvEE
N6common40CThreadSafeAutoSeededRandomPoolSingletonE
N8CryptoPP20AutoSeededRandomPoolE
UsedAuthenticatorTimestampsCache::EntryNotFoundException
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/UsedAuthenticatorTimestampsCache.cpp
vecRecentAuthenticatorTimestamps.empty()
! vecRecentAuthenticatorTimestamps.empty()
UsedAuthenticatorTimestampsCache::LoginRateTooHighException
UsedAuthenticatorTimestampsCache::ReusedAuthenticatorException
N6common33CUsedAuthenticatorTimestampsCache56CNoAuthenticatorTimestampsRecordedForThisClientExceptionE
N6common33CUsedAuthenticatorTimestampsCache10CExceptionE
N6common33CUsedAuthenticatorTimestampsCache26CLoginRateTooHighExceptionE
N6common33CUsedAuthenticatorTimestampsCache29CReusedAuthenticatorExceptionE
0123456789abcdefN6common17CNetworkExceptionE
RemoteFileHarvestClient
N6common29CAdaptPlainToEventLoopFunctorE
N6common17IEventLoopFunctorE
server rejected too big file
Failed to open file 
TransmitFile failed for file 
GetIPAddrFromString(): gethostname() failed
GetIPAddrFromString(): No addresses returned by gethostname()
gethostname() failed with error
gethostbyname() failed with error
CMallocedBlock(): realloc failed
Append(pData,len) Not enough space in raw buffer
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Network/WinSockHelperFunctions.cpp
IP:port %s is not on this host
DoBlockingSend() : send() succeeded but transferred 0 bytes.
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Network/WinSockHelperFunctions.h
m_uNextIncompleteSendOrReceiveWSABUFIdx <= m_uCurrentOrFinalPreparedWSABUFIdx
m_vecWSABUF[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].iov_base && m_vecWSABUF[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].iov_len > 0
m_eState == ePreparingToReceiveLengthPrefixedMsg || m_eState == eDonePartialReceiveLengthPrefixedMsg
m_vecWSABUF[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].iov_base && m_vecWSABUF[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].iov_len > 0 && m_vecWSABUFInfo[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].m_pMsgCursor == reinterpret_cast<u8*>( m_vecWSABUF[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].iov_base ) && m_vecWSABUFInfo[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].m_pMsgEnd == m_vecWSABUFInfo[ m_uNextIncompleteSendOrReceiveWSABUFIdx ].m_pMsgCursor
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Network/SocketHelperFunctions.h
(((__extension__ ({ register unsigned int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 24) & 0xFF) == ((*pReceiveData >> 0) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 16) & 0xFF) == ((*pReceiveData >> 8) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 8) & 0xFF) == ((*pReceiveData >> 16) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 0) & 0xFF) == ((*pReceiveData >> 24) & 0xFF)
ProtocolError - Bad message LengthPrefix (%u > %u)
m_uSizeOfLengthPrefixedMsg != 0 && m_uSizeOfLengthPrefixedMsg <= rWSABUFInfo.m_uSizeOfMallocedDataBuffer
m_eState == eCompleteLengthPrefixedMsgAlreadyInBuffer
DoBlockingConnectionShutdown() : shutdown() failed
network send aborted by caller
network receive aborted by caller
IP:port doesn't specify an IP addr: %s
m_u32IPAddr == u32DefaultIPAddrIfNotProvided
IP:port doesn't specify a port: %s
m_u16Port == u16DefaultPortIfNotProvided
CWSABUFWrapper() failed to malloc() pMallocedDataBuffer
CWSABUFWrapper() failed to realloc() pMallocedDataBuffer
DoBlockingConnectionShutdown() : recv() failed
WSASocket() failed to create session socket
failed to bind outgoing socket to %s
Failed to set socket to non-blocking
socket() failed to create session socket
Invalid uSizeOfSerializedIPAddrPorts
INADDR_ANY
Bad sIPAddr: 
Invalid port: 
pMsgCursor == pMsgEnd
INADDR_ANY%c%u
Connection Reset
Send Failure
Receive Failure
Connection Closed by Peer
select failed:
Failed to connect
! rWSABUFInfo.m_pMsgCursor
%u.%u.%u.%u%c%u
Failed to connect to 
connect aborted
 \t\r\n,
N6common38CSocketCommandAbortedByCallerExceptionE
N6common19CConnResetExceptionE
N6common14CRecvExceptionE
N6common44CPeerGracefullyClosedConnectionCommExceptionE
N6common14CSendExceptionE
N6common17CConnectExceptionE
Software\Valve\Steam\Caches
Software\Valve\Steam\Apps\
Software\Valve\Steam\Caches\
_Apps
_Users
_Caches
Steam.dll
172.16.3.31
172.16.3.32
Universe
Public
SteamInstallPath
HOME
Unable to get home directory
%s/.steam/steam%s
%s/Steam%s
GeneralDirectoryServer_FindServerIPAddrPorts
Unable to write to the current Steam application folder.\nPlease move Steam to a folder where you have write privileges.\n
N4Grid21IManifestIteratorImplE
N4Grid17CManifestIteratorE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/Semaphore.h
(CloseHandle( m_hSemaphore )) != 0
dwWaitRet == ((DWORD) 0x000000C0)
CachedContentDescriptionRecord::Set() - new version is bit-identical to existing version
Successfully set CachedContentDescriptionRecord.
(ReleaseSemaphore( m_hSemaphore, static_cast<LONG>( uReleaseCount ), & lPreviousCount )) != 0
lPreviousCount >= 0 && lPreviousCount < static_cast<LONG>(m_uMaxCount)
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Inc/ClientAuthenticationTickets.h
ExtractNext(u16): Not enough data in raw buffer
(((__extension__ ({ register unsigned short int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 8) & 0xFF) == ((*pReceiveData >> 0) & 0xFF) && (((__extension__ ({ register unsigned short int __v, __x = (*pReceiveData); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 0) & 0xFF) == ((*pReceiveData >> 8) & 0xFF)
ExtractGap(): Not enough data in raw buffer
ExtractNext(ptr,len): Not enough data in raw buffer
ExtractNext(u32): Not enough data in raw buffer
uSizeOfFieldData == sizeof( ExtractedFieldData )
Bad ServerReadableTGTSignature
GetNumericFieldName(): not numeric
Bad eVersionNum field CClientAuthenticationTicket
GetFieldDataAsCString() zero-length or not null-terminated
Bad eUniqueAccountName field CClientAuthenticationTicket
Bad eAccountUserName field CClientAuthenticationTicket
Bad eSteamInstanceID field in CClientAuthenticationTicket
Bad eSteamLocalUserID field in CClientAuthenticationTicket
Bad eClientExternalIPAddr field in CClientAuthenticationTicket
Bad eClientLocalIPAddr field in CClientAuthenticationTicket
Bad eUserIDTicketValidationServerIPAddr1 field in CClientAuthenticationTicket
Bad eUserIDTicketValidationServerPort1 field in CClientAuthenticationTicket
Bad eUserIDTicketValidationServerIPAddr2 field in CClientAuthenticationTicket
Bad eUserIDTicketValidationServerPort2 field in CClientAuthenticationTicket
Bad eClientToServerAESSessionKey field in CClientAuthenticationTicket
Bad eTicketCreationTime field CClientAuthenticationTicket
Bad TicketValidUntilTime field in CClientAuthenticationTicket
Bad ServerReadablePart field in CClientAuthenticationTicket
Missing field in CClientAuthenticationTicket: 
Bad ContentServerId field CClientContentTicket
Bad AppId field CClientContentTicket
Bad PublicContentIPAddrPort field CClientContentTicket
Bad ClientContentIPAddrPort field in CClientContentTicket
Missing field in CClientContentTicket: 
30819d300d06092a864886f70d010101050003818b00308187028181009525173d72e87cbbcbdc86146587aebaa883ad448a6f814dd259bff97507c5e000cdc41eed27d81f476d56bd6b83a4dc186fa18002ab29717aba2441ef483af3970345618d4060392f63ae15d6838b2931c7951fc7e1a48d261301a88b0260336b8b54ab28554fb91b699cc1299ffe414bc9c1e86240aa9e16cae18b950f900f020111
pFieldData
Out of date TGT VersionNum
old TGT version
N4Grid20CClientContentTicketE
N4Grid27CClientAuthenticationTicketE
N4Grid27CClientAuthenticationTicket24CValidateFieldsExceptionE
N6common15CMultiFieldBlob33CFieldNameNotNumeriCBlobExceptionE
N8CryptoPP20RSAPublicKeyTemplateINS_16VerifierTemplateINS_22DigestVerifierTemplateINS_27PKCS_SignaturePaddingSchemeENS_11RSAFunctionEEENS_24PKCS_DecoratedHashModuleINS_3SHAEEEEENS_21RSAPrivateKeyTemplateINS_14SignerTemplateINS_20DigestSignerTemplateIS3_NS_21InvertibleRSAFunctionEEES8_EEEEEE
N8CryptoPP16VerifierTemplateINS_22DigestVerifierTemplateINS_27PKCS_SignaturePaddingSchemeENS_11RSAFunctionEEENS_24PKCS_DecoratedHashModuleINS_3SHAEEEEE
N8CryptoPP27SignatureSystemBaseTemplateINS_22DigestVerifierTemplateINS_27PKCS_SignaturePaddingSchemeENS_11RSAFunctionEEENS_24PKCS_DecoratedHashModuleINS_3SHAEEEEE
N8CryptoPP22DigestVerifierTemplateINS_27PKCS_SignaturePaddingSchemeENS_11RSAFunctionEEE
N8CryptoPP14DigestVerifierE
N8CryptoPP33DigestSignatureSystemBaseTemplateINS_27PKCS_SignaturePaddingSchemeENS_11RSAFunctionEEE
N8CryptoPP18PK_SignatureSystemE
N8CryptoPP21DigestSignatureSystemE
N8CryptoPP21PublicKeyBaseTemplateINS_11RSAFunctionEEE
N8CryptoPP24PKCS_DecoratedHashModuleINS_3SHAEEE
N8CryptoPP16TrapdoorFunctionE
N6common15CMultiFieldBlob34CStringFieldNotTerminatedExceptionE
&amp;
Minimum
 but required to be 
CurrentClientBootstrapVersion
CurrentLinuxClientVersion
BetaClientBootstrapVersion
BetaClientBootstrapPassword
BetaClientAppPackageVersion
BetaClientAppPackagePassword
CustomPackageVersionsRecord
ClientConfigRecord
<?xml version="1.0" ?>\n
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/ClientConfigDBKeyRecord.cpp
uSizeOfFieldData == sizeof( u32VersionNum )
GetFieldDataAsCString(s,p) zero-length or not null-terminated
Custom client config field not found
Bad VersionNum field in ClientConfigRecord
ClientConfigRecord is version 
Bad eCurrentClientBootstrapVersion field in CClientConfigRecord
Bad eCurrentClientAppPackageVersion field in CClientConfigRecord
CurrentClientAppPackageVersion
Bad eMinimumClientAppPackageVersion field in CClientConfigRecord
MinimumRequiredClientAppPackageVersion
Bad eCurrentLinuxClientVersion field in CClientConfigRecord
Bad eCurrentLinuxHldsUpdateToolVersion field in CClientConfigRecord
CurrentLinuxHldsUpdateToolVersion
Bad eCurrentWin32HldsUpdateToolVersion field in CClientConfigRecord
CurrentWin32HldsUpdateToolVersion
Bad eBetaClientBootstrapVersion field in CClientConfigRecord
Empty BetaClientBootstrapPassword in CClientConfigRecord
Bad eBetaClientAppPackageVersion field in CClientConfigRecord
Empty eBetaClientAppPackagePassword in CClientConfigRecord
Bad eBetaWin32HldsUpdateToolVersion field in CClientConfigRecord
BetaWin32HldsUpdateToolVersion
Empty eBetaWin32HldsUpdateToolPassword in CClientConfigRecord
BetaWin32HldsUpdateToolPassword
Bad eBetaLinuxHldsUpdateToolVersion field in CClientConfigRecord
BetaLinuxHldsUpdateToolVersion
Empty eBetaLinuxHldsUpdateToolPassword in CClientConfigRecord
BetaLinuxHldsUpdateToolPassword
Missing field in CClientConfigRecord
Compression error
Unknown compression type
Decompression error
Bad TEncryptFileCompressionHdr
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/CompressionAlgs.cpp
pHdr->m_u32UncompressedSize == *puUncompressedLen
ConfigServerIPAddrPort
Command aborted
No ConfigServers are online
SteamInstancePublicKey
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/ConfigServerClientCommands.cpp
(0 == SetSocketToAbortWhenClosed(Socket)) != false
Failed to get local IP address of SocketToServer
ProtocolError - Not enough data for ExtractNext(u8)
ProtocolError - Message not fully consumed
ConfigServer unacceptable protocol version
ProtocolError - Not enough data for ExtractNext(u32)
CMallocedBlock(): malloc failed
uBytes == mbReceiveSteamInstanceRSAPublicKey.GetSize()
ProtocolError - Not enough data for ExtractNext(u16)
ProtocolError - Not enough data for ExtractNext(ptr,len)
ProtocolError - Not enough data for ExtractGap()
SteamInstanceRSAPublicKey failed signature verifcation
No SteamConfigServers are online
N12_GLOBAL__N_127CConfigServerIPAddressCacheE
18ObjScopeGuardImpl1IN12_GLOBAL__N_127CConfigServerIPAddressCacheEMS1_FvPN6common21CCommandStatusControlEES4_E
18ObjScopeGuardImpl0IN12_GLOBAL__N_127CConfigServerIPAddressCacheEMN4Grid19IServerAddressCacheEFvvEE
basic_string::_S_create
Not a manifest only cache
LaunchOptionId
DLCForAppID
MustOwnAppToPurchase
Bad field in CAppIconsRecord
AppIconData
" >0x
NoCost
BillOnceOnly
BillMonthly
ProofOfPrepurchaseOnly
GuestPass
HardwarePromo
Gift
AutoGrant
OEMTicket
RecurringOption
Bad BillingType value
Unrecognized BillingType '%s'
SubscriptionId
AppSubscriptionIdsRecord
" >\n
AppPublicKeyData
KeyIdx
AppPrivateKeyData
Limit
PeriodInMinutes
SubRequired
IsDisqualifier
DiscountQualifierRecord
QualifierId
Empty Name in CDiscountRecord
DiscountInCents
AllDiscountQualifiersRecord
DiscountId
BillingType
CostInCents
SubscriptionAppIdsRecord
OnSubscribeRunAppId
OnSubscribeRunLaunchOptionIdx
OptionalRateLimitRecord
AllDiscountsRecord
IsPreorder
RequiresShippingAddress
DomesticShippingCost
InternationalShippingCost
RequiredKeyType
IsCyberCafe
GameCode
GameCodeDesc
IsDisabled
RequiresCD
TerritoryCode
IsSteam3Subscription
ExtendedInfoRecord
Empty CAllSubscriptionsRecord
MountName
IsOptional
ValidOSList
FilesystemRecord
FilesystemIdx
CountryList
AppUserDefinedRecord
FilesystemsRecord
AppRegionRecord
Description
bIsNotAvailable
LaunchOptionIdsRecord
DepotEncryptionKey
bIsEncryptionKeyAvailable
bIsRebased
bIsLongVersionRoll
Empty CAppVersionsRecord
AppVersionRecord
CommandLine
AppIconIdx
bNoDesktopShortcut
bNoStartMenuShortcut
bLongRunningUnattended
AppLaunchOptionRecord
Bad AppId in CAppRecord
LegacyInstallDirName
MinCacheFileSizeMB
MaxCacheFileSizeMB
AppLaunchOptionsRecord
IsBandwidthGreedy
CurrentVersionId
TrickleVersionId
BetaVersionId
BetaVersionPassword
SkipMFPOverwrite
UseFilesystemDvr
ManifestOnlyApp
AppOfManifestOnlyCache
RegionSpecificRecord
Missing field in CAppRecord: 
Empty CAllAppsRecord
basic_string::append
basic_string::resize
AllAppsPublicKeysRecord
ContentDescriptionRecord
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/ContentDescriptionDBKeyRecord.cpp
uSizeOfFieldData == sizeof( uAppId )
Bad field in CAppVersionLaunchOptionIdsRecord
Bad field in CSubscriptionAppIdsRecord
Bad field in AppSubscriptionIdsRecord
Empty IndexAppIdToSubscriptionIdsRecord
Bad field in CAllAppsPublicKeysRecord
Bad field in CAllAppsEncryptedPrivateKeysRecord
Bad Limit field in CRateLimitRecord
Bad PeriodInMinutes field in CRateLimitRecord
Missing field in CRateLimitRecord: 
Empty Name in CDiscountQualifierRecord
Bad SubscriptionId field in CDiscountQualifierRecord
Bad IsDisqualifier field in CDiscountQualifierRecord
Missing field in CDiscountQualifierRecord: 
Empty CAllDiscountQualifiersRecord
Bad DiscountInCents field in CDiscountRecord
Missing field in CDiscountRecord: 
Bad SubscriptionId field in CSubscriptionRecord
Empty Name in CSubscriptionRecord
Bad eBillingType field CSubscriptionRecord
Bad CostInCents field in CSubscriptionRecord
Bad OnSubscribeRunAppId field in CSubscriptionRecord
Bad OnSubscribeRunLaunchOption field in CSubscriptionRecord
Bad OptionalIsPreorder field in CSubscriptionRecord
Bad OptionalRequiresShippingAddress field in CSubscriptionRecord
Bad DomesticShippingCost field in CSubscriptionRecord
Bad InternationalShippingCost field in CSubscriptionRecord
Bad RequiredKeyType field in CSubscriptionRecord
Bad IsCyberCafe field in CSubscriptionRecord
Bad GameCode field in CSubscriptionRecord
Empty GameCodeDesc in CSubscriptionRecord
Bad OptionalIsDisabled field in CSubscriptionRecord
Bad OptionalRequiresCD field in CSubscriptionRecord
Bad OptionalTerritoryCode field in CSubscriptionRecord
Bad OptionalIsSteam3Subscription field in CSubscriptionRecord
Missing field in CSubscriptionRecord: 
Bad eAppId field in CAppFilesystemRecord
Bad IsOptional field in CAppFilesystemRecord
Missing field in CAppFilesystemRecord: 
Missing field in CAppRegionRecord: 
Empty description in CAppVersionInfoRecord
Bad VersionId field in CAppVersionInfoRecord
Bad bIsNotAvailable field in CAppVersionInfoRecord
Bad field size for DepotEncryptionKey in CAppVersionInfoRecord
Bad bIsEncryptionKeyAvailable field in CAppVersionInfoRecord
Bad bIsRebased field in CAppVersionInfoRecord
Bad eOptionalIsLongVersionRoll field in CAppVersionInfoRecord
Missing field in CAppVersionInfoRecord: 
Empty description in CAppLaunchOption
Empty command-line in CAppLaunchOption
Bad AppIconIdx field in CAppLaunchOption
Bad bNoDesktopShortcut field in CAppLaunchOption
Bad bStartMenuDesktopShortcut field in CAppLaunchOption
Bad bLongRunningUnattended field in CAppLaunchOption
Missing field in CAppLaunchOption: 
Empty Description in CAppRecord
Empty InstallDirName in CAppRecord
Empty LegacyInstallDirName in CAppRecord
Bad MinCacheFileSizeMB field in CAppRecord
Bad MaxCacheFileSizeMB field in CAppRecord
Bad OnFirstLaunch field in CAppRecord
Bad IsBandwidthGreedy field in CAppRecord
Bad CurrentVersionId in CAppRecord
CurrentVersionId does not reference a valid version info record
Bad TrickleVersionId in CAppRecord
Bad BetaVersionId in CAppRecord
Empty BetaVersionPassword in CAppRecord
Bad SkipMFPOverwrite field in CAppRecord
Bad UseFilesystemDvr field in CAppRecord
Bad ManifestOnlyApp field in CAppRecord
Bad AppOfManifestOnlyCache field in CAppRecord
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Inc/ContentDescriptionDBKeyRecord.h
uSizeOfFieldData == sizeof( ReturnValue )
AppRecord.GetAppId() == uAppId
vec_rcpAppSubscriptionIdsRecords.size() - 1 >= uAppId
SubscriptionRecord.GetSubscriptionId() == uSubscriptionId
SubscriptionAppId < vec_rcpAppSubscriptionIdsRecords.size()
Bad VersionNum field in CContentDescriptionRecord
ContentDescriptionRecord is version 
IndexAppIdToSubscriptionIdsRecord
Bad LastChangedExistingAppOrSubscriptionTime field in CContentDescriptionRecord
LastChangedExistingAppOrSubscriptionTime
Excess field in StrippedDown CContentDescriptionRecord
AllAppsEncryptedPrivateKeysRecord
Missing field in ContentDescriptionRecord: 
uSizeOfFieldData == sizeof( u8 )
N4Grid34CAllAppsEncryptedPrivateKeysRecord24CValidateFieldsExceptionE
N4Grid24CAllAppsPublicKeysRecord24CValidateFieldsExceptionE
N4Grid25CAppSubscriptionIdsRecord24CValidateFieldsExceptionE
N4Grid34CIndexAppIdToSubscriptionIdsRecord24CValidateFieldsExceptionE
N4Grid25CAppSubscriptionIdsRecordE
N4Grid16CRateLimitRecord24CValidateFieldsExceptionE
N4Grid25CSubscriptionAppIdsRecord24CValidateFieldsExceptionE
N4Grid24CDiscountQualifierRecord24CValidateFieldsExceptionE
N4Grid28CAllDiscountQualifiersRecord24CValidateFieldsExceptionE
N4Grid24CDiscountQualifierRecordE
N4Grid15CDiscountRecord24CValidateFieldsExceptionE
N4Grid28CAllDiscountQualifiersRecordE
N4Grid15CDiscountRecordE
N4Grid19CSubscriptionRecord24CValidateFieldsExceptionE
N4Grid25CSubscriptionAppIdsRecordE
N4Grid16CRateLimitRecordE
N4Grid19CAllDiscountsRecordE
N4Grid22CSubExtendedInfoRecordE
N4Grid23CAllSubscriptionsRecord24CValidateFieldsExceptionE
N4Grid19CSubscriptionRecordE
N4Grid15CAppIconsRecord24CValidateFieldsExceptionE
N4Grid16CAppRegionRecord24CValidateFieldsExceptionE
N4Grid21CAppUserDefinedRecordE
N4Grid21CAppFilesystemsRecordE
N4Grid16CAppRegionRecordE
N4Grid20CAppFilesystemRecord24CValidateFieldsExceptionE
N4Grid20CAppFilesystemRecordE
N4Grid32CAppVersionLaunchOptionIdsRecord24CValidateFieldsExceptionE
N4Grid21CAppVersionInfoRecord24CValidateFieldsExceptionE
N4Grid32CAppVersionLaunchOptionIdsRecordE
N4Grid18CAppVersionsRecord24CValidateFieldsExceptionE
N4Grid21CAppVersionInfoRecordE
N4Grid22CAppLaunchOptionRecord24CValidateFieldsExceptionE
N4Grid22CAppLaunchOptionRecordE
N4Grid10CAppRecordE
N4Grid24CAppRegionSpecificRecordE
N4Grid10CAppRecord24CValidateFieldsExceptionE
N4Grid23CAppLaunchOptionsRecordE
N4Grid15CAppIconsRecordE
N4Grid18CAppVersionsRecordE
N4Grid14CAllAppsRecord24CValidateFieldsExceptionE
N4Grid34CIndexAppIdToSubscriptionIdsRecordE
N4Grid14CAllAppsRecordE
N4Grid23CAllSubscriptionsRecordE
N4Grid25CContentDescriptionRecord24CValidateFieldsExceptionE
N4Grid24CAllAppsPublicKeysRecordE
N4Grid34CAllAppsEncryptedPrivateKeysRecordE
N4Grid21CManifestBinExceptionE
N4Grid17CContentExceptionE
ContentServerDirectoryServerIPAddrPort
No ContentServerDirectoryServers are online
Protocol version not support by CSDS
(((__extension__ ({ register unsigned short int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 8) & 0xFF) == ((data >> 0) & 0xFF) && (((__extension__ ({ register unsigned short int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 0) & 0xFF) == ((data >> 8) & 0xFF)
(((__extension__ ({ register unsigned int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 24) & 0xFF) == ((data >> 0) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 16) & 0xFF) == ((data >> 8) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 8) & 0xFF) == ((data >> 16) & 0xFF) && (((__extension__ ({ register unsigned int __v, __x = (data); if (__builtin_constant_p (__x)) __v = ((((__x) & 0xff000000) >> 24) | (((__x) & 0x00ff0000) >> 8) | (((__x) & 0x0000ff00) << 8) | (((__x) & 0x000000ff) << 24)); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) >> 0) & 0xFF) == ((data >> 24) & 0xFF)
Bad NumOfContentServers from CSDS
m_eState == eReset || ( m_eState == eFinishedExtractingLengthPrefixedMsg && m_pReceivedEnd && rWSABUFInfo.m_pMsgCursor == m_pReceivedEnd && rWSABUFInfo.m_pMsgEnd == rWSABUFInfo.m_pMsgCursor )
m_eState == eFinishedExtractingLengthPrefixedMsg
Invalid uSizeOfSerializedContentServerIdWithIPAddrPort %u
Zero CSs logged in
N12_GLOBAL__N_119CCSDSIPAddressCacheE
18ObjScopeGuardImpl0IN12_GLOBAL__N_119CCSDSIPAddressCacheEMN4Grid19IServerAddressCacheEFvvEE
CSERServerIPAddrPort
N4Grid23CCSERServerAddressCacheE
FileId out of range
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/FileIdChecksumTable.cpp
m_pu8Signature == (m_SerializedBlock.get() + m_SerializedBlock.GetSize() - common::cuSizeofDigitalSignature)
CMallocedBlock(): constructed with zero size block
Serialized FileIdChecksumTable is corrupt
FileId does not exist in checksum table
N4Grid20CFileIdChecksumTable34CCorruptSerializedVersionExceptionE
N4Grid20CFileIdChecksumTable10CExceptionE
Failed to find Master AuthenticationServer
Failed to connect to any GeneralDirectoryServer
Failed to find Master LogProcessingServer
Failed to find Master GlobalTransactionServer
Failed to find Master SteamConfigServer
Failed to find Master BillingBridgeServer
N4Grid48CFailedToFindMasterAuthenticationServerExceptionE
N6common32CCommandStatusControlAutoTimeoutE
Manifest format error: NULL pu8Bin!
Manifest format error: zero-length serialized manifest!
Manifest format error: u32MstVersion = %u (appid=%u, ver=%u, size=%u)
Error reading manifest header from file
Manifest format error (from file): u32MstVersion = %u (appid=%u, ver=%u, size=%u)
Failed to read manifest binary
Manifest checksum failed
Error serializing manifest
N4Grid12CManifestBinE
N4Grid22CManifestReadExceptionE
N4Grid24CManifestFormatExceptionE
N4Grid26CManifestChecksumExceptionE
Missing '-' in CD-key
Illegal character in CD-key
Bad CD-key check-digit
CD-key too long
Invalid CD-key
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/NewValveCDKeyGenerator.cpp
m_cAsciiToCodonTable[ (u8)sc_cCodonToAsciiTable[Codon] ] == 0xFF
ABCDEFGHIJKLMN2PQRST3VWXYZ456789
PublicContentServer: unacceptable protocol version
(((__extension__ ({ register unsigned short int __v, __x = (uLengthOfString); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 8) & 0xFF) == ((uLengthOfString >> 0) & 0xFF) && (((__extension__ ({ register unsigned short int __v, __x = (uLengthOfString); if (__builtin_constant_p (__x)) __v = ((((__x) >> 8) & 0xff) | (((__x) & 0xff) << 8)); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) >> 0) & 0xFF) == ((uLengthOfString >> 8) & 0xFF)
PublicContentServer: invalid file length (0)
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/PublicContentServerCommands.cpp
u32TotalFileSize == ( u32FileSizeRemainingToSend + uCubBegin )
CWSABUFWrapper::SetExternalReceiveAreaAndSize: buffer has unconsumed data
(wrappedWSABUF.ExtractGap(u32ChunkSize)) == (pu8RxLocation)
received unexpected signature length for 
 failed signature verification
PublicContentServer: Requested file does not exist
N6common41CCommandStatusControlAutoTimeoutIfStalledE
SteamServerAddressCache
_timestamp
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/ServerAddressCache.cpp
N4Grid19IServerAddressCacheE
ClientLocalIPAddress
ClientExternalIPAddress
18ObjScopeGuardImpl0IN6common16CFastThreadMutexEMS1_FvvEE
PaymentCardType
SizeOfFieldData == sizeof(u8)
%u/%u/%02u
%02u:%02u:%02u
PaymentCardInfo
PrepurchasedInfo
ExternalBillingInfo
PaymentCardReceipt
PrepurchasedReceipt
sizeof(u8) == SizeOfFieldData
ExternalAccountName
ExternalAccountPassword
TypeOfProofOfPurchase
AStoBBSTxnId
BinaryProofOfPurchaseToken
TokenRejectionReason
SubsId
AcctName
CustSupportName
CardNumber
CardHolderName
BillingAddress1
BillingAddress2
BillingCity
BillingZip
BillingState
BillingCountry
CCApprovalCode
PriceBeforeTax
TaxAmount
TransDate
TransTime
Administrator
Base
UserType
UserAppAccessRightsRecord
SteamLocalUserID
Empty AccountUsersRecord
AccountUserRecord
UserName
SaltedPassphraseDigest
PassphraseSalt
PersonalQuestion
SaltedAnswerToQuestionDigest
AnswerToQuestionSalt
AccountUserPasswordRecord
ShipName
ShipAddress1
ShipAddress2
ShipCity
ShipZip
ShipState
ShipCountry
ShipPhone
ShipCancelledFlag
ShipCanxHandledFlag
ShipCanxReason
ShipTrackingNum
ShipTrackingURL
ShipMethod
ShipTime
ShipStatus
BannedAtTime
BannedFromTime
BannedUntilTime
Empty Reason in CVACRecord
Infractions
Missing field in CVACRecord: 
CardExpYear
CardExpMonth
CardCVV2
BillingPhone
BillingEmailAddress
CCApprovalDate
CDenialDate
CCDenialCode
UseAVS
TransactionType
AuthSource
AVSResponse
PS2000Data
SettlementDate
SettlementCode
CCTSResponseCode
AuthComments
AuthStatus
SettlementBatchId
SettlementBatchSeq
SettlementApprovalCode
SettlementComments
SettlementStatus
ChargebackCaseNumber
CC1TimeChargeTxnSeq
GetCreditForceTxnSeq
ShippingInfoRecord
CVV2Response
AccountPaymentCardInfoRecord
AccountPrepurchaseInfoRecord
AccountEmptyReceiptRecord
SubscribedDate
UnsubscribedDate
SubscriptionStatus
StatusChangeFlag
PreviousSubscriptionState
BillingStatus
UserIP
UserCountryCode
AccountSubscriptionRecord
AccountSubscriptionsRecord
UniqueAccountName
AccountCreationTime
AccountEmailAddress
AccountStatus
AccountLastModifiedTime
SteamId
AccountCreationIP
CCustSupportAccountRecord
OptionalAccountCreationKey
AccountUserPasswordsRecord
DerivedSubscribedAppsRecord
SubscriberAccountRecord
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Inc/SubscriberAccountDBKeyRecord.h
Bad field in CUserAppAccessRightsRecord
Bad SubscriptionBillingInfoType value
Unrecognized SubscriptionBillingInfoType '%s'
Bad field in CDerivedSubscribedAppsRecord
Bad ExternalAccountName field in CAccountPaymentCardInfoRecord
Bad ExternalAccountPassword field in CAccountPaymentCardInfoRecord
Unknown field in CAccountExternalBillingInfoRecord
Missing field in CAccountExternalBillingInfoRecord: 
Bad TypeOfProofOfPurchase field in CAccountPrepurchaseReceiptRecord
Unknown field in CAccountPrepurchaseInfoRecord
Missing field in CAccountPrepurchaseReceiptRecord: 
Bad TypeOfProofOfPurchase field in CAccountPrepurchaseInfoRecord
Bad TokenRejectionReason field in CAccountPrepurchaseInfoRecord
Missing field in CAccountPrepurchaseInfoRecord: 
Bad PaymentCardType field in CAccountPaymentCardReceiptRecord
Bad CardNumber field in CAccountPaymentCardReceiptRecord
Bad CardHolderName field in CAccountPaymentCardReceiptRecord
Bad BillingAddress1 field in CAccountPaymentCardReceiptRecord
Bad BillingCity field in CAccountPaymentCardReceiptRecord
Bad BillingZip field in CAccountPaymentCardReceiptRecord
Bad BillingState field in CAccountPaymentCardReceiptRecord
Bad BillingCountry field in CAccountPaymentCardReceiptRecord
Bad PriceBeforeTax field CAccountPaymentCardReceiptRecord
Bad TaxAmount field CAccountPaymentCardReceiptRecord
Bad ShippingCost field CAccountPaymentCardReceiptRecord
Unknown field in CAccountPaymentCardInfoRecord
Missing field in CAccountPaymentCardReceiptRecord: 
Bad UserType field in CAccountUserRecord
Bad SteamLocalUserID field in CAccountUserRecord
Missing field in CAccountUserRecord: 
Bad SaltedPassphraseDigest field in CAccountUserPasswordRecord
Bad PassphraseSalt field in CAccountUserPasswordRecord
Bad PersonalQuestion field in CAccountUserPasswordRecord
Bad SaltedAnswerToQuestionDigest field in CAccountUserPasswordRecord
Bad AnswerToQuestionSalt field in CAccountUserPasswordRecord
Missing field in CAccountUserPasswordRecord: 
Empty AccountUserPasswordsRecord
SubscriberAccountRecord is version 
Bad ShipName field in CShippingInfoRecord
Bad ShipAddress1 field in CShippingInfoRecord
Bad ShipCity field in CShippingInfoRecord
Bad ShipZip field in CShippingInfoRecord
Bad ShipState field in CShippingInfoRecord
Bad ShipCountry field in CShippingInfoRecord
Bad ShipCancelledFlag field in CShippingInfoRecord
Bad ShipCanxHandledFlag field in CShippingInfoRecord
Bad ShipTime field in CShippingInfoRecord
Bad ShipStatus field in CShippingInfoRecord
Bad ShippingCost field CShippingInfoRecord
Unknown field in CShippingInfoRecord
Missing field in CShippingInfoRecord: 
Bad BannedAtTime field in CVACRecord
Bad BannedFromTime field in CVACRecord
Bad BannedUntilTime field in CVACRecord
Bad Infractions field in CVACRecord
Bad PaymentCardType field in CAccountPaymentCardInfoRecord
Bad CardNumber field in CAccountPaymentCardInfoRecord
Bad CardHolderName field in CAccountPaymentCardInfoRecord
Bad CardExpYear field in CAccountPaymentCardInfoRecord
Bad CardExpMonth field in CAccountPaymentCardInfoRecord
Bad CardCVV2 field in CAccountPaymentCardInfoRecord
Bad BillingAddress1 field in CAccountPaymentCardInfoRecord
Bad BillingCity field in CAccountPaymentCardInfoRecord
Bad BillingZip field in CAccountPaymentCardInfoRecord
Bad BillingState field in CAccountPaymentCardInfoRecord
Bad BillingCountry field in CAccountPaymentCardInfoRecord
Bad CCApprovalDate field CAccountSubscriptionRecord
Bad CDenialDate field CAccountSubscriptionRecord
Bad UseAVS field in CAccountPaymentCardInfoRecord
Bad PriceBeforeTax field CAccountSubscriptionRecord
Bad TaxAmount field CAccountSubscriptionRecord
Bad TransactionType field in CAccountPaymentCardInfoRecord
Bad CCTSResponseCode field in CAccountPaymentCardInfoRecord
Bad CC1TimeChargeTxnSeq field CAccountSubscriptionRecord
Bad GetCreditForceTxnSeq field CAccountSubscriptionRecord
Missing field in CAccountPaymentCardInfoRecord: 
Bad SubscriptionBillingInfoType field in AccountSubscriptionBillingInfoRecord
Missing SubscriptionBillingInfo field in CAccountSubscriptionBillingInfoRecord
AccountPaymentCardInfoRecord field left in stripped in CAccountSubscriptionBillingInfoRecord
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Src/SubscriberAccountDBKeyRecord.cpp
AccountPrepurchasedInfoRecord field left in stripped in CAccountSubscriptionBillingInfoRecord
ExternalBillingRecord field left in stripped in CAccountSubscriptionBillingInfoRecord
AccountExternalBillingInfoRecord
AccountBillingInfoRecord field left in stripped in CAccountSubscriptionBillingInfoRecord
Bad SubscriptionBillingInfoType field in CAccountSubscriptionBillingInfoRecord
Bad eSubscribedDate field CAccountSubscriptionRecord
Bad UnsubscribedDate field in CAccountSubscriptionRecord
Bad eSubscriptionStatus field CAccountSubscriptionRecord
Bad eStatusChangeFlag field CAccountSubscriptionRecord
Bad ePreviousSubscriptionState field CAccountSubscriptionRecord
Bad eOptionalBillingStatus field CAccountSubscriptionRecord
Empty UserIP in CAccountSubscriptionRecord
Unexpected size for UserCountryCode in CAccountSubscriptionRecord
Missing field in CAccountSubscriptionRecord: 
AccountSubscriptionsBillingInfoRecord
CCustSupportSubscriptionsRecord
Empty UniqueAccountName in CCustSupportAccountRecord
Bad AccountCreationTime field in CCustSupportAccountRecord
Empty Account Email Address in CCustSupportAccountRecord
Bad AccountStatus field in CCustSupportAccountRecord
Bad eAccountLastModifiedTime field in CCustSupportAccountRecord
Bad SteamId field in CCustSupportAccountRecord
Empty AccountCreationIP in CCustSupportAccountRecord
Missing field in CCustSupportAccountRecord: 
Bad VersionNum field in CSubscriberAccountRecord
Bad VersionNum field after upgrade in CSubscriberAccountRecord
Out of date VersioNum after upgrade in CSubscriberAccountRecord
Empty UniqueAccountName in CSubscriberAccountRecord
Bad AccountCreationTime field in CSubscriberAccountRecord
Empty OptionalAccountCreationKey in CSubscriberAccountRecord
OptionalBillingInfoRecord field left in stripped in CSubscriberAccountRecord
OptionalAccountBillingInfoRecord
AccountUserPasswordsRecord field left in stripped in CSubscriberAccountRecord
Bad LastRecalcDerivedSubscribedAppsTimefield in CSubscriberAccountRecord
LastRecalcDerivedSubscribedAppsTime
Bad CellId field in CSubscriberAccountRecord
Empty Account Email Address in CSubscriberAccountRecord
Bad AccountStatus field in CAccountUserRecord
Bad eAccountLastModifiedTime field in CSubscriberAccountRecord
Missing field in CSubscriberAccountRecord: 
N4Grid19CShippingInfoRecord24CValidateFieldsExceptionE
N4Grid27CAccountSubscriptionsRecordE
N4Grid38CAccountSubscriptionsBillingInfoRecordE
N4Grid28CDerivedSubscribedAppsRecord24CValidateFieldsExceptionE
N4Grid33CAccountExternalBillingInfoRecord24CValidateFieldsExceptionE
N4Grid32CAccountPrepurchaseReceiptRecord24CValidateFieldsExceptionE
N4Grid29CAccountPrepurchaseInfoRecord24CValidateFieldsExceptionE
N4Grid32CAccountPaymentCardReceiptRecord24CValidateFieldsExceptionE
N4Grid29CAccountPaymentCardInfoRecord24CValidateFieldsExceptionE
N4Grid19CShippingInfoRecordE
N4Grid37CAccountSubscriptionBillingInfoRecord24CValidateFieldsExceptionE
N4Grid29CAccountPaymentCardInfoRecordE
N4Grid29CAccountPrepurchaseInfoRecordE
N4Grid33CAccountExternalBillingInfoRecordE
N4Grid32CAccountPaymentCardReceiptRecordE
N4Grid32CAccountPrepurchaseReceiptRecordE
N4Grid26CAccountEmptyReceiptRecordE
N4Grid37CAccountSubscriptionBillingInfoRecordE
N4Grid26CAccountSubscriptionRecord24CValidateFieldsExceptionE
N4Grid26CAccountSubscriptionRecordE
N4Grid26CUserAppAccessRightsRecord24CValidateFieldsExceptionE
N4Grid18CAccountUserRecord24CValidateFieldsExceptionE
N4Grid26CUserAppAccessRightsRecordE
N4Grid19CAccountUsersRecord24CValidateFieldsExceptionE
N4Grid18CAccountUserRecordE
N4Grid26CAccountUserPasswordRecord24CValidateFieldsExceptionE
N4Grid27CAccountUserPasswordsRecord24CValidateFieldsExceptionE
N4Grid26CAccountUserPasswordRecordE
N4Grid24CSubscriberAccountRecord24CValidateFieldsExceptionE
N4Grid27CAccountUserPasswordsRecordE
N4Grid19CAccountUsersRecordE
N4Grid28CDerivedSubscribedAppsRecordE
Steam_BGetCallback
Steam_FreeLastCallback
Steam_GetAPICallResult
9CCallbackI12CCallbackMgr23SteamAPICallCompleted_tLb0EE
13CCallbackBase
9CCallbackI12CCallbackMgr23SteamAPICallCompleted_tLb1EE
UpdateDLLWrapper.dll
CreateInterface
SteamClient010
Breakpad_SteamSetSteamID
Breakpad_SteamSetAppID
Breakpad_SteamMiniDumpInit
SteamWriteMiniDumpSetComment
SteamUser014
SteamFriends008
SteamUtils005
SteamMatchMaking008
SteamMatchMakingServers002
SteamNetworking005
SteamAppId
SteamGameId
Using breakpad crash handler\n
%02d:%02d:%02d
%04d%02d%02d%02d%02d%02d
libsteam.so
steamclient.so
72.165.61.189:27030 72.165.61.190:27030 69.28.151.178:27038 69.28.153.82:27038 87.248.196.194:27038 68.142.72.250:27038
Unknown Exception
Append(u16) Not enough space in raw buffer
Append(u32) Not enough space in raw buffer
30819d300d06092a864886f70d010101050003818b0030818702818100d3bb0de9bbab4becf8efc894c0723c54c3d7f8ff7bcef9f4d9c810668ca1cad7a292017c537bab1a68db17f8bd9a94751c2e37f30a7fab23c6a0443edd2d6896c1f5fcc89bb4e32291a44044777eb72c5e1ff1a9c113c75b49abdfd5bdc732c7807a18c836944279d63ef9bb4a38f50805b157ad32556e07e6575a112ca346ff020111
AppendGap() Not enough space in raw buffer
N8CryptoPP20RSAPublicKeyTemplateINS_17EncryptorTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS3_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_11RSAFunctionEEENS_21RSAPrivateKeyTemplateINS_17DecryptorTemplateIS6_NS_21InvertibleRSAFunctionEEEEEEE
N8CryptoPP17EncryptorTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS2_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_11RSAFunctionEEE
N8CryptoPP23PK_FixedLengthEncryptorE
N8CryptoPP24CryptoSystemBaseTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS2_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_11RSAFunctionEEE
N8CryptoPP12PK_EncryptorE
N8CryptoPP15PK_CryptoSystemE
CUnpackedTime exception
(ReleaseMutex(m_hMutex)) != 0
eStateUnavailable
eStateComingSoonNoPreload
eStatePreloadOnly
eStatePreorderOrPreload
eStatePreorderThenPreload
eStateJustReleased
eStateAvailable
eStateTool
eStateAvailablePreloadable
eStateThirdPartyMod
steamconsole.dll
Steam2_GetSteamLocalUserPipe
Null icon data field
Remove FS Thread
Unable to remove directory 
gamestatecountries
common
removing program files
InsertRet.second
Software\Valve\Steam\Beta
InhibitCacheUpdates
SOFTWARE\Valve\Steam
cafeserver
InhibitAutoVersionRoll
ProhibitDownloadInCountries
ClientAppPublishedVersionNum
ClientAppVersionNum
Launching '
The command was aborted
!"CacheKeysNotAvailable"
Setting version to use for '
checkpkgstate
checkpkgownedstate
fake@fakemail.com
Logging out '
Destroy preloader
RootDir
CacheDir
PreventCacheLoading
RunOnFirstLaunch
AccountRecordData
CurrentVersion
AppDependencies
CreatePreloader for AppId %d
primarycache
Create Preloader
Failed app scan for appid %d
CreatePreloader on AppId %d
m_SubscribedIds.empty()
m_SubscribedAppsMap.empty()
CacheServerSessions
cacheserversessions
CacheMaxQueueDepth
cachemaxqueuedepth
Already logged in
RunSteam3Callbacks
Trace
SteamBetaPassword
CUnpackedTime out of range (year %1, month %2, day %3, hour %4, minute %5, second %6, millisecond %7, microsecond %8)
Steam is busy, please try again later
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/Account.cpp
STEAM2BRIDGE_INTERFACE_VERSION002
STEAMAPPS_INTERFACE_VERSION004
!(uBlobSize % sizeof(TSteamAppDependencyInfo))
Software\Valve\Steam\InternalBeta
Installation of this game is prohibited from the current location
uSizeOfFieldData == sizeof( CurrentStatus )
Error(s) when logging out: .\n\n
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../../ThirdPartyCode/BSL/BSLTime.h
m_Steam3LicenseMap.find( *itSub ) != m_Steam3LicenseMap.end()
TimeLastUpdatedAccountRecordData
OnCreatePreloaderFail called for AppId %d
Handle CreatePreloader Failure
Handle fingerprint mismatch thread
(CloseHandle(m_ObjectMutex)) != 0
Considering creating preloader (1) for AppId %d with %d fs records
GetAppUpdateStats for AppId %d reports %s/%s bytes total/present
Detected AppId %d as preload-enabled
ChangeSelectedAppVersion( uNewAppVersion = %d ) on AppId %d
Considering creating preloader (2) for AppId %d
Account:SetUser:error causing relogin
Cannot play while purchase pending
N4Grid8CAccount5CImplE
N7sigslot9has_slotsINS_20multi_threaded_localEEE
N7sigslot20multi_threaded_localE
N4Grid11CMutexGuard17CTimeoutExceptionE
N4Grid18CNotFoundExceptionE
N4Grid24CBadApiArgumentExceptionE
N4Grid25CUnknownInternalExceptionE
N7sigslot7signal2I31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
N7sigslot13_signal_base2I31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
N7sigslot12_signal_baseINS_20multi_threaded_localEEE
N7sigslot12_connection2IN4Grid8CAccount5CImplERKSsjNS_20multi_threaded_localEEE
N7sigslot17_connection_base2IRKSsjNS_20multi_threaded_localEEE
N7sigslot12_connection1IN4Grid8CAccount5CImplEjNS_20multi_threaded_localEEE
N7sigslot17_connection_base1IjNS_20multi_threaded_localEEE
N6common15ObjFunctorImpl1IN4Grid8CAccount5CImplEMS3_FvjEjEE
N6common12FunctorImpl2IPFvRKSsjESsjEE
N4Grid22CMustBeOnlineExceptionE
N4Grid21CNotLoggedInExceptionE
N4Grid24CSubscriberAccountRecordE
N6common15ObjFunctorImpl8IN4Grid8CAccount5CImplEMS3_FvSs10EGameStatejSt6vectorINS1_18TAppFilesystemInfoESaIS6_EEbbjjESsS4_jS8_bbjjEE
N4Grid23CNotSubscribedExceptionE
N3BSL13CUnpackedTime11COutOfRangeE
N3BSL13CUnpackedTime22CUnpackedTimeExceptionE
18ObjScopeGuardImpl0IN4Grid8CAccount5CImplEMS2_FvvEE
N6common11CObjFunctorIN4Grid8CAccount5CImplEEE
N8CryptoPP18AES_PHM_Decryption22InvalidCiphertextOrKeyE
N4Grid6ICache31CCacheKeysNotAvailableExceptionE
N4Grid6ICache26CCacheNeedsRepairExceptionE
N4Grid6ICache30CCacheNeedsDecryptionExceptionE
N4Grid3CFs27CAppHasNoCacheFileExceptionE
N4Grid3CFs20CMountInUseExceptionE
N8CryptoPP22BufferedTransformation3ErrE
N4Grid6ICache10CExceptionE
N4Grid3CFs10CExceptionE
N8CryptoPP9ExceptionE
, File: 
, Expr: 
, Line: 
, Name: 
Logging stopped
%s%s%s
enable
ActivityLogGroup
ActivityLogContext
ActivityLogDate
ActivityLogTimestamp
ActivityLogElapsedTime
ActivityLogThreadId
ActivityLogGroupNameWidth
ActivityLogContextNameWidth
BuiltIn
Stop
Logging started
ActivityLogFile
steam.log
ActivityLogEnable
ActivityLogCreateMode
ActivityLogFlushMode
flush
ActivityLogConsoleOutput
N4Grid12CActivityLogE
N4Grid12CActivityLog15CAssertObserverE
ActivityLogContext
ActivityLogGroup
enable
disable
EncryptedFiles
rgunDependencies
NotPresent
rgunInstalledDLC
MountPaths
AppUpdateStats.blob
PreLoader
AppStatus
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/AppStatus.cpp
App %d observed download for (%d,%d) of %u bytes
No Apps observed download for (%d,%d) of %u bytes
Saving AppStatus for App %d: %lld total, %lld present
Adding dependency for App %d: (%d,%d)
Clearing dependencies for App %d
Setting cache dependencies for App %d ( %s)
App %d observed cache %d version change
No Apps observed cache %d version change
Setting DLC Unistalled for App %d, cache %d
Setting DLC Downloaded for App %d, cache %d
N4Grid10CAppStatusE
m_AddressCache.size() == 1
The account is disabled.
Incompatible TGT VersionNum
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/AuthenticationServerCommands.cpp
(0 == SetSocketToAbortWhenClosed(s)) != false
FinishedExtracting(): More data left in raw buffer
ClientExternalIPAddr does not match that in ticket
ClientLocalIPAddr does not match that in ticket
uSizeOfFieldData == sizeof( common::aesSessionKey_t )
Protocol Error: Bad u32SizeOfRecord
A new version of Steam is available. Please shut-down Steam and restart it to obtain the new version.
A server error occurred. Please try again.
The account name you entered is already in use. Please choose another.
The account name you entered contains illegal characters. Please choose another.
The email address you entered contains illegal characters. Please choose another.
The product key you entered contains illegal characters. Please choose another.
Login failed. This account does not exist, or the password is incorrect.
Your clock differs too much from the servers time of UTC 
The account does not exist, or the password that you entered was not correct.
The passphrase that you entered was not correct.
Your subscription attempt failed due to unexpectedly high demand. Please try again later.
Your subscription attempt failed as you have not yet confirmed your email address.
The email-address verification code that you entered was not correct.
The answer that you entered to your 'secret question' was not correct.
sha1Hasher.DigestSize() == sizeof( ClientIPAddrDigest )
wrappedWSABUF.GetCurrentAppendOfst() - uStartOfMACWholeRequestMsgProtectedBufferOfst == u16SizeOfMACProtectedRequestMsg
MasterAuthenticationServerIPAddrPort_
SlaveAuthenticationServerIPAddrPort_
Bad PrepurchaseInfo.uLengthOfBinaryProofOfPurchaseToken
Unknown SubscriptionBillingInfoType passed with SteamSubscriptionBillingInfo
GeneratedAccountNames: Suggestions are too long
GetFieldDataAsCString(iterIndex) zero-length or not null-terminated
Bad error code from AuthenticationServer: %u
Unexpected return code from GetNumAccountsWithThisEmail command: %u
Unexpected return code from RequestAccountNamesByCdKeyCommand command: %u
Unexpected return code from RequestAccountNamesByEmailAddressCommand command: %u
Unexpected return code from QueryAccountNameAlreadyUsed command: %u
Unexpected return code from ChangeAccountName command: %u
Unexpected return code from ChangePersonalQA command: %u
Unexpected return code from ChangeForgottenPassword command: %u
ReceivePersonalQuestion[ 0 ] == '\0'
RequestForgottenPasswordEmail: Received an empty PersonalQuestion
RequestForgottenPasswordEmail: PersonalQuestion is too long
Unexpected return code from RequestForgottenPasswordEmail command: %u
Unexpected return code from ChangePassword command: %u
Unexpected return code from AuthenticateAndRequestTGT command: %u
Protocol Error: Bad u16SizeOfPlaintextClientReadableTGT
Protocol Error: Bad u16SizeOfAESEncryptedClientReadableTGT
Protocol Error: Bad u16SizeOfServerReadableTGT
Protocol Error: Bad u32SizeOfAccountRecord
wrappedWSABUF.GetCurrentExtractionPoint() - pStartOfMACCheckedMsg == static_cast<int>( uSizeOfTGTMsg ) - MAC_t::DIGESTSIZE
Protocol Error: Bad macWholeMsg: Incorrect Passphrase or corrupt TGT
pCurrField == mbDecryptedClientReadableTGT.get() + sizeof( aesSessionKey_t )
TicketCreationTime < TicketValidUntilTime
Unexpected return code from CreateNewAccount command: %u
Unexpected return code from VerifyEmailAddress command: %u
Unexpected return code from ChangeEmailAddress command: %u
Unexpected return code from Subscribe command: %u
sizeof(Payload_aesSessionKey) <= rsaShortMsgEncryptor.MaxPlainTextLength()
static_cast<size_t>( pMsgEnd - pMsgStart ) == u16SizeOfWholeMsg
Incompatible ContentTicket VersionNum
Protocol Error: Bad u16SizeOfPlaintextClientReadableContentTicket
Protocol Error: Bad u16SizeOfAESEncryptedClientReadableContentTicket
Protocol Error: Bad u16SizeOfServerReadableContentTicket
static_cast<size_t>( wrappedWSABUF.GetCurrentExtractionPoint() - pStartOfMACCheckedMsg ) == uSizeOfContentTicketMsg - MAC_t::DIGESTSIZE
Protocol Error: Bad macWholeContentTicket: Incorrect Passphrase or corrupt TGT
N4Grid24CLocalClockSkewExceptionE
N4Grid27CAccountIsDisabledExceptionE
N4Grid35CAccountOrUserDoesNotExistExceptionE
N4Grid33CPreauthenticationFailedExceptionE
N4Grid41CAuthenticationServerIsNotMasterExceptionE
N4Grid37CClientToASProtocolOutOfDateExceptionE
N4Grid25CSimpleErrorCodeExceptionE
N12_GLOBAL__N_139CMasterAuthenticationServerAddressCacheE
N12_GLOBAL__N_138CSlaveAuthenticationServerAddressCacheE
18ObjScopeGuardImpl0IN12_GLOBAL__N_139CMasterAuthenticationServerAddressCacheEMN4Grid19IServerAddressCacheEFvvEE
nFlushRet != (-1)
nFlushRet == 0
nCloseRet == 0
m_pImpl->m_pFile
BinaryLogFileName
BinaryLogEnable
BinaryLogCreateMode
BinaryLogFlushMode
BinaryLogReslistMode
steamlog.dat
true
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/BinaryLogFile.cpp
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/BufferTable.cpp
Bad handle
pFsBuffer.get()
N4Grid12CBufferTableE
N4Grid3CFs16CBadArgExceptionE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/BuildContentServerLoginMessage.cpp
pmbAppOwnershipTicket->GetSize() <= 0xFFFF
!cszOptionalBetaPassword
!bUseSessionToken
!u8SizeOfAppOwnershipTicket
GameValidation.log
m_bUseAlertableWait
hSession != (u32)~0
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/Cache.cpp
s_HandleSet.end() == s_HandleSet.find( m_Handle )
Cache object already instantiated
Cache file does not match the current build of the server depot
N4Grid6ICacheE
N4Grid6ICache23ICacheCompletionHandlerE
N4Grid6ICache33CFingerPrintDoesNotMatchExceptionE
N4Grid19CCacheServerSessionE
N4Grid6ICache31CMultipleCacheInstanceExceptionE
N4Grid6ICache16CBadArgExceptionE
N4Grid34CNoContentServerAvailableExceptionE
Internal Cache Error
Cache Write Failure
Cache Read Failure
Cache File Corrupted
N4Grid14CCacheBatBlockE
N4Grid6ICache23CInternalErrorExceptionE
N4Grid6ICache15CWriteExceptionE
N4Grid6ICache14CReadExceptionE
N4Grid6ICache20CCorruptionExceptionE
pu8ChecksumData
pChecksumSignature
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheFileFixedChecksumBlock.cpp
uSizeOfData == m_u32SizeOfChecksumTable
SkipChecksumFileSignatureCheck
Signature check failed for Checksum block
N4Grid23CCacheFileFixedChecksumE
N4Grid23CCacheFileFixedChecksum30CSignatureCheckFailedExceptionE
N4Grid23CCacheFileFixedChecksum10CExceptionE
N4Grid15CCacheDataBlockE
N4Grid15CCacheDescBlockE
PrevEntry.IsValid()
TmpEntry.IsValid()
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheFileFixedDirectory.cpp
DirEntry.GetPrevEntry() != m_uMaxEntries
uOffset + uLength <= uStartOffset
!((( uOffset >= uEntryOffset) && ( uOffset < (uEntryOffset+uEntryLength))) || (((uOffset+uLength) > uEntryOffset) && ((uOffset+uLength) <= (uEntryOffset+uEntryLength))) || (( uOffset < uEntryOffset) && ((uOffset+uLength) >= (uEntryOffset+uEntryLength))))
( !((m_uMaxEntries<=0xFFFF)) || (m_uMaxEntries == m_MiniEntries.size()) )
( !((m_uMaxEntries> 0xFFFF)) || (m_uMaxEntries == m_FullEntries.size()) )
N4Grid24CCacheFileFixedDirectoryE
Invalid node
Unsupported format version in FsTree block
N4Grid21CCacheFileFixedFsTreeE
N4Grid21CCacheFileFixedFsTree26CBadFormatVersionExceptionE
uIdx < m_vecCaches.size()
Invalid cache pointer
pu64BytesTotal
pu64BytesPresent
m_sAppDir.length()
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheGroup.cpp
(iter->AdvanceToChild()) != false
uCacheIdx < m_vecNodeGroup.size()
u64FileSize >= u64BytesNotPresent
N4Grid11CCacheGroupE
N4Grid23ICacheGroupIteratorImplE
N4Grid19CCacheGroupIteratorE
N4Grid23ICacheGroupIteratorImpl13CInvalidCacheE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheManifestOnly.cpp
Specified resource is not a file
Cache(%d) failed to decrypt data for file %s
u64Offset % uCompressionBlkSize == 0
Checksum mismatch for file: %s
Resource failed verification check
Cache(%d) failed to decrypt file %s.  Trying to validate data...
Cache(%d) failed to decrypt file %s
Cache(%d) failed to read checksum data for file %s
Cache(%d) deleting local file %s
Cache(%d) could not delete local file %s
User aborted cache(%d) validation
Cache(%d) - File has already been updated.  Skipping flush: %s
Cache(%d) upgrading from version %d to %d
Cache(%d) fingerprint does not match with server
Cache(%d) - Downloading new manifest
uServerFingerprint == pNewCacheFsTreeBlock->GetFingerPrint()
Cache(%d) - Downloading checksum table for version: %u
Depot key does not match with cache.  Purging all files.
Cache(%d) - Version change successfully completed
Cache(%d) - Version change was unsuccessful: %s
Cache(%d) - Version change was unsuccessful: Unknown error
Cache(%d) successfully added file chunk, Off=%12.12llu Len=%8.8llu File=%s
Cache(%d) skipping add file chunk, Off=%12.12llu Len=%8.8llu File=%s
Cache(%d) failed to add file chunk, Off=%12.12llu Len=%8.8llu File=%s
Cache(%d) - Performing read validation on file %s
(WaitForSingleObject( WaitEvent.GetHandle(), (DWORD)-1 )) == (0)
(m_pImpl->m_pCacheQueue->GetEntryResults(uQueueHandle, pu64BytesRead, pu64UncachedBytes, pu64SizeOfUncompressedServerRead, pu64SizeOfCompressedServerRead)) != false
Cache(%d) - Beginning validation
Cache(%d) - Validation complete
CacheManifestOnly::WorkThreadProc
dwWaitRet == 0 || dwWaitRet == ((DWORD) 0x000000C0) || dwWaitRet == 258
(pImpl->m_pCacheQueue->GetEntryData(uQueueHandle, &QueueEntry)) != false
QueueEntry.GetOffset() % 0x10000 == 0
QueueEntry.GetOffset() + QueueEntry.GetLength() <= iterManifest->GetFileSize()
uRequestBlkSize >= pImpl->m_pCacheFsTreeBlock->GetCompressionBlkSize() * 2
Cache(%u) directory %s is in our way - removing
Cache(%u) Request(%d), Ix=%d, Off=%12.12llu Len=%8.8llu QueueHandle=%u File=%s
CacheWorkThread(%d) Error - Handle %d: %s
CacheWorkThread(%d) Error - Handle %d: Fingerprint mismatch
CacheWorkThread(%d) Error - Handle %d: Unknown error
Cache(%d) - Cancelling handle %d
! CacheRequestList[uIndex].m_bInCache
! CacheRequestList[uIndex].m_bDataRdy
Cache(%d) - Unexpected number of bytes returned.  Received %8.8u, expected %12.12llu for file %s
Unexpected number of bytes returned
Cache(%d) Receive(%d), Off=%12.12llu Len=%8.8llu QueueHandle=%u File=%s
CacheCompletionHandler(%d) could not get file pointer for handle %d
CacheCompletionHandler(%d) unexpected offset for handle %d. Got %llu, expected %llu
CacheCompletionHandler(%d) failed to write to local file for handle %d
CacheCompletionHandler(%d) caught error for handle %d: %s
CacheCompletionHandler(%d) caught unknown error for handle %d
sBinaryEncryptionKey.size() == sizeof(aesSessionKey_t)
Cache file version mismatch for App %d
AppId(%d) does not match with cache file(%d)
Cache file created for a different application
Cache(%d) upgrading internal AppId from(%d)
Cache(%d) is signaling long startup
Successfully created cache(%d) from existing cache file
Downloading manifest for App %d
uServerFingerprint == m_pCacheFsTreeBlock->GetFingerPrint()
Downloading checksum table for App %d
Failed to create new cache(%d) file
Cache(%d) Corrupt FsTree or Checksum block
Failed to create cache(%d) from existing file: %s
Failed to create a new cache(%d): %s
Failed to create cache(%d) from existing file: unknown exception
Failed to create a new cache(%d): unknown exception
iterManifest->IsFile()
Not Found in Cache
Serializing(%d)
Failed to serialize(%d)
cTime != 0
Cache Open Failed
User aborted
Cache(%d) decrypting file %s
Failed to seek 
Failed to read 
Failed to write 
Copy*
\Copy of 
\Copy (
) of 
Invalid buffer size
Validation failure: 
iter->IsValid()
pNewCacheFsTreeBlock.get()
CacheFixUpMode
disable
array_only
pWorkEvent
iterManifest->IsValid()
CacheRequestList.size()
Unexpected request
Failed to get file pointer
Unexpected offset received
Failed to write to file
Cache(%d) is shutting down
Failed to create semaphore
ServerRequest
Cache needs decryption
ManifestFingerprintCheck
ForceCacheValidateAtStartup
Creating new cache(%d) file
N4Grid18CCacheManifestOnlyE
N4Grid25CCacheExceptionTranslatorE
N4Grid18CCacheManifestOnly5CImpl24CCacheReadHandlerFunctorIS1_EE
N4Grid18CCacheManifestOnly5CImpl23CCacheCompletionHandlerE
N4Grid6ICache24CResourceChecksumFailureE
N4Grid15CFileHandleListE
N4Grid22CCacheServerSessionMgrE
N4Grid6ICache27CAppIdDoesNotMatchExceptionE
N4Grid6ICache14COpenExceptionE
10CmdAdaptorI15ScopeGuardImpl1IPFiP8_IO_FILEES2_EE
5ICmd_
18ObjScopeGuardImpl1IN4Grid18CCacheQueueManagerEMS1_FvjEjE
N4Grid6ICache18CNotFoundExceptionE
N4Grid6ICache18CResourceIsNotFileE
N4Grid8CSClient26CSessionDestroyedExceptionE
N4Grid8CSClient10CExceptionE
B/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheNone.cpp
(iterManifest->IsValid()) != false
(iter->IsValid()) != false
N4Grid10CCacheNoneE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheOneFileFixedBlock.cpp
uSrcNext < uMaxEntries || uSrcNext == Grid::uEOC
uDestNext <= uMaxEntries || uDestNext == Grid::uEOC
Cache(%d), Off=%8.8llu Len=%8.8llu File=%s
Specified offset is beyond end of resource
Cache(%d), Handle=%d, Off=%8.8llu Len=%8.8llu File=%s
Cache does not support files over 4GB
(uDataStart - uOldDataStart) % cuDataBlockSize == 0
(uOldDataStart - uDataStart) % cuDataBlockSize == 0
u64TotalFixedSize + ((u64)uNumEntries * (u64)cuDataBlockSize) <= u64CacheFileSize
m_pCacheDescBlock->GetCacheWriteFlag()
uPreOff % uCompressionBlkSize == 0
Checksum not found for file: %s
Failed to make pack directory map
Could not delete local file %s
(uPreLength + uPostLength) <= (2*uCompressionBlkSize)
(TFileReq.m_u64BlkOffset % uCompressionBlkSize) == 0
( !(((uSvrOffset+uSvrLength) < uFileSize)) || ((TFileReq.m_u64BlkLen % uCompressionBlkSize) == 0) )
(TReq.m_u64BlkOffset % uCompressionBlkSize) == 0
( !(((uSvrOffset+uSvrLength) < uFileSize)) || ((TReq.m_u64BlkLen % uCompressionBlkSize) == 0) )
Item=%d Off=%8.8llu Len=%8.8llu InCache=Y
Item=%d Off=%8.8llu Len=%8.8llu InCache=N SvrOff=%12.12llu SvrLen=%8.8llu
Cache(%d) Request(%d), Off=%8.8llu Len=%8.8llu QueueHandle=%u File=%s
Configuring cache(%d) for FAT32
uNextBat <= uOldMaxEntries || uNextBat == Grid::uEOC
DirEntry.GetBatEntry() < uNewMaxEntries
((uNewDataStart - uOldDataStart) % uDataBlockSize) == 0
uNextBat < uMaxEntries || uNextBat == Grid::uEOC
( !(uMaxEntries >= uNumBlocks) || (uNewBatEntry < uMaxEntries) )
( !(uMaxEntries < uNumBlocks) || (uNumBlocks + uBatEntry) )
pNewCacheBatBlock->GetNext(uNewBatEntry) == uMaxEntries
DirEntry.GetBatEntry() < uMaxEntries
((uOldDataStart - uNewDataStart) % uDataBlockSize) == 0
CacheOneFileFixedBlock::WorkThreadProc
QueueEntry.GetLength() && QueueEntry.GetLength() <= (2147483647 * 2U + 1U)
Cache(%d) - Starting defrag operation
uPrevOffset+uPrevLength <= DirEntry.GetOffset()
DirEntry.GetPrevEntry() == uMaxEntries
uPrevOffset+uPrevLength == DirEntry.GetOffset()
uPrevOffset+uPrevLength < DirEntry.GetOffset()
vecBatNodes[ uBat ].m_uNode == cu32InvalidManifestNode
uNumConsecutiveBlks == uBlksInEntry
Cache(%d) - Successfully completed defrag operation
Cache(%d) - Defrag was unsuccessful: %s
Cache(%d) - Defrag was unsuccessful: Unknown error
Cache(%d) flushing cache file %s
Cache(%d) mismatch in block uMaxEntries
Cache(%d): Correcting mismatch in block uMaxEntries
uNewDataStart + (uNewNumEntries * uDataBlockSize) <= u64NewFileSize
Resizing cache(%d) from %llu to %llu
Failed to resize cache(%d) file
Cache(%d) resize successfully completed
Cache(%d) resize was unsuccessful
(MallocedBlockToReceiveData.GetSize() % sizeof(u32)) == 0
Cache(%d) - Downloading manifest changes between versions: %u : %u
Converting cache(%d) to current version
(m_pCacheDataBlock->GetDataStart() - uNewDataStart) % uDataBlockSize == 0
m_pCacheBatBlock->GetNext(uIndex) == uMaxEntries
Cache conversion successfully completed
Cache conversion was unsuccessful
PrevDirEntry.GetCompressionType() == uCompressionType
PrevDirEntry.GetOffset() + PrevDirEntry.GetLen() == uPreOff
NewDirEntry.GetOffset() + NewDirEntry.GetLen() <= PrevDirEntry.GetOffset()
Cache(%d), Off=%8.8llu Len=%8.8u File=%s
Cache(%d) Receive(%d), Off=%8.8u Len=%8.8u QueueHandle=%u File=%s
Cache(%d) - Unexpected number of bytes returned.  Received %8.8u, expected %8.8llu for file %s
Cache(%d) successfully added file chunk, Off=%8.8llu Len=%8.8llu File=%s
Cache(%d) failed to add file chunk, Off=%8.8llu Len=%8.8llu File=%s
Previous cache(%d) was not shut down properly.  Checking cache state...
u32PreCalculatedManifestFingerprint == m_pCacheFsTreeBlock->GetFingerPrint()
Failed to initialize cache file
Cache(%d) HashBlock BadFormatVersion error
Failed to read cache fixed data for App %d
Cache(%d) internal error during recovery
uBatSrc < uMaxEntries
uBatDest < uMaxEntries
uBatSrc > uBatDest
pChecksumTable
\*.*
.pak
Found pak file: %s
Error reading pack file
Deleting local file %s
Invalid session handle
%s__%d.gcf
__*.gcf
uKey <= uNewMaxEntries
uBatEntry < uMaxEntries
uNewBatEntry < uMaxEntries
Cache(%d) read failed
Unknown read exception
NextEntry.IsValid()
cBlks == uBlksInEntry
uEntry == uFirstEntry
bFound
User aborted cache(%d) defrag
uPrevEntry <= uMaxEntries
uNextEntry <= uMaxEntries
uPrevEntry == uMaxEntries
RemoveEntry.IsValid()
Validating data for cache(%d)
Flushing file: 
uEntry < uMaxEntries
PrevDirEntry.IsValid()
!bFirstInChain
Could not add to cache(%d)
pu8AppBuf
Failed to open file: %s
Converting local file: %s
failed to seek into file 
Converting pack file: %s
User aborted load from dir
Failed to read file: %s
Validating data...
Failed to add file: %s
ServerComplete
RequestList
CacheRequest
CacheComplete
AddRequest
AddComplete
Flush
Cache needs repair
Cache(%d) recovery complete
InitializeCacheFileToZeros
Cache(%d) manifest error: %s
!m_pImpl
N4Grid23CCacheOneFileFixedBlockE
N4Grid23CCacheOneFileFixedBlock5CImpl24CCacheLockHandlerFunctorIS1_EE
N4Grid21CUnknownReadExceptionE
N4Grid6ICache22CInvalidResourceOffsetE
N4Grid23CCacheOneFileFixedBlock5CImpl24CCacheReadHandlerFunctorIS1_EE
N4Grid23CCacheOneFileFixedBlock5CImpl23CCacheCompletionHandlerE
N4Grid23CCacheFileFixedChecksum26CBadFormatVersionExceptionE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CachePreLoader.cpp
(m_hThreadDoneEvent.Set()) != false
(m_hWakePreloaderThreadEvent.Set()) != false
Thread shutdown improperly (%d)
Failed GetNextResource due to exception: %s
Failed GetNextResource due to unknown exception
iter->IsValid() && iter->IsFile()
dwWaitRet == 0 || dwWaitRet == 258
!!! Failed preload %12.12llu,%8.8llu,%s !!!
iterManifest->IsValid() && iterManifest->IsDir()
Thread accepted pause request (%d)
Thread accepted run request (%d)
Thread accepted exit request (%d)
(m_hCompletionEvent.Set()) != false
ReadHandlerProc: couldn't find queue entry with token (%d)
Thread resume requested (%d)
Thread resume completed (%d)
Thread pause requested (%d)
Thread pause completed (%d)
puToken
    due to exception: %s
    due to unknown exception
Start (%d)
    File not found
eCurThreadMode <= eExit
Exit (%d)
Preloader Thread - App 
ThreadLifetime
PreLoadMisc
PreLoadStart
PreLoadFinish
UserReadRequest
UserReadComplete
CachePreLoaderMode
N4Grid15CCachePreLoaderE
N7sigslot7signal2IRKSsjNS_20multi_threaded_localEEE
N7sigslot13_signal_base2IRKSsjNS_20multi_threaded_localEEE
N7sigslot7signal1IjNS_20multi_threaded_localEEE
N7sigslot13_signal_base1IjNS_20multi_threaded_localEEE
18ObjScopeGuardImpl0IN4Grid15CCachePreLoader5CImplEMS2_FvvEE
N4Grid15CCachePreLoader5CImpl28CPreloaderReadHandlerFunctorIS1_EE
N4Grid15CCachePreLoader5CImpl22CReadCompletionHandlerE
N6common15ObjFunctorImpl0IN4Grid15CCachePreLoader5CImplEMS3_FvvEEE
Resubmitting handle=%d
m_pu8Buffer == __null
itCur->InUse()
pos->m_EItemState != eCancel
!pos->m_hHandler
pos->m_EItemState >= eWorking
Operation cancelled
uBlockIdx < ReqList.size()
uBytesReadFromServer == 0
uBytesReadFromServer
Restarting handle=%d
EItemState=%d, Handle=%d
CacheQueue
AddItem
RemoveItem
CompleteItem
CancelItem
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CacheQueueManager.cpp
(m_ShutdownEvent.Set()) != false
(m_WorkThreadEvent.Set()) != false
m_QueueBuffer.size() <= m_uMaxQueueSize
Timeout exceeded while waiting for queue opening
(pos->m_EItemState == eInitializing) || (((pos->m_EItemState == eComplete) || (pos->m_EItemState == eError) || (pos->m_EItemState == eCancel)) && pos->m_bServiceComplete)
(m_hQueueEvent.Set()) != false
(pos->m_pCallerEvent->Set()) != false
Error calling CompleteRead for handle=%d
pos->m_EItemState >= eWorking || pos->m_EItemState == ePending
Worker thread completed for handle=%d
Server read completed for handle=%d, Blk=%d, Size=%d, State=%d
uBytesRead == ReqList[uBlockIdx].m_u64BlkLen
Error calling ReadProgress for handle=%d
Ignoring COperationCancelledException error for handle=%d, State=%d, error=%s
Failed to create cache work thread.
N4Grid18CCacheQueueManagerE
N4Grid16CCacheQueueEntryE
N4Grid8CSClient28COperationCancelledExceptionE
N12_GLOBAL__N_121CQueueExceptionHolderE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/ClientClockSkew.cpp
uBytesRead == sizeof(BSL::sigword64)
LatestClientServerClockSkew
ClientRegistry.blob
NullOperation
Test failure case
m_puNumSuggestedChars
m_pSuggestedNamesBuf
Starting validation of 
Nothing to validate
Validation complete: 
 Total Files, 
 Failed Validation\n
CommandState worker thread
Cache keys not available
MinFootprintAutoRefresh
Worker thread (0x%p): started
Worker thread (0x%p) exiting
Handles Exhausted
!m_pCommandThread
Uninstall
SetAppVersion
SetAppCacheSize
GetAppUpdateStats
MoveApp
RefreshMinimumFootprint
LoadCacheFromDir
DefragCaches
GetCacheFragmentation
RepairOrDecryptCaches
FlushCache
StopLoadingCache
StartLoadingCache
LaunchApp
WaitForAppReadyToLaunch
UpdateSubscriptionBillingInfo
UpdateAccountBillingInfo
ChangeAccountName
VerifyEmailAddress
ChangeEmailAddress
ChangePersonalQA
ChangePassword
RequestAccountsByCdKeyEmail
RequestForgottenPasswordEmail
ChangeForgottenPassword
AckSubscriptionReceipt
Unsubscribe
Subscribe
RefreshAccountInfo
RefreshLogin
Setuser2
Setuser
CreateCachePreloaders
Logout
DeleteAccount
GenerateSuggestedAccountNames
IsAccountNameInUse
CreateAccount
WaitForResources
CommandThreadPool
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CommandStates.cpp
ICommandState::GetThreadPool - NULL s_pCommandThreadPool! Called before Initialize()
Worker thread (0x%p): running command %s
Worker thread (0x%p): completed command %s
ICommandState::NewHandle -- there's already an object in the list at this handle value! WTF!
RequestEmailAddressVerificationEmail
GetNumAccountsWithEmailAddress
RequestAccountsByEmailAddressEmail
__null == s_pCommandThreadPool
N4Grid13ICommandStateE
N12_GLOBAL__N_117CUninstallCommandE
N12_GLOBAL__N_121CSetAppVersionCommandE
N12_GLOBAL__N_123CSetAppCacheSizeCommandE
N12_GLOBAL__N_125CGetAppUpdateStatsCommandE
N12_GLOBAL__N_115CMoveAppCommandE
N12_GLOBAL__N_131CRefreshMinimumFootprintCommandE
N12_GLOBAL__N_124CLoadCacheFromDirCommandE
N12_GLOBAL__N_120CDefragCachesCommandE
N12_GLOBAL__N_129CGetCacheFragmentationCommandE
N12_GLOBAL__N_129CRepairOrDecryptCachesCommandE
N12_GLOBAL__N_118CFlushCacheCommandE
N12_GLOBAL__N_119CStopLoadingCommandE
N12_GLOBAL__N_120CStartLoadingCommandE
N12_GLOBAL__N_114CLaunchCommandE
N12_GLOBAL__N_131CWaitForAppReadyToLaunchCommandE
N12_GLOBAL__N_137CUpdateSubscriptionBillingInfoCommandE
N12_GLOBAL__N_132CUpdateAccountBillingInfoCommandE
N12_GLOBAL__N_125CChangeAccountNameCommandE
N12_GLOBAL__N_144CRequestEmailAddressVerificationEmailCommandE
N12_GLOBAL__N_126CVerifyEmailAddressCommandE
N12_GLOBAL__N_126CChangeEmailAddressCommandE
N12_GLOBAL__N_124CChangePersonalQACommandE
N12_GLOBAL__N_122CChangePasswordCommandE
N12_GLOBAL__N_138CGetNumAccountsWithEmailAddressCommandE
N12_GLOBAL__N_135CRequestAccountsByCdKeyEmailCommandE
N12_GLOBAL__N_142CRequestAccountsByEmailAddressEmailCommandE
N12_GLOBAL__N_137CRequestForgottenPasswordEmailCommandE
N12_GLOBAL__N_131CChangeForgottenPasswordCommandE
N12_GLOBAL__N_130CAckSubscriptionReceiptCommandE
N12_GLOBAL__N_119CUnsubscribeCommandE
N12_GLOBAL__N_117CSubscribeCommandE
N12_GLOBAL__N_126CRefreshAccountInfoCommandE
N12_GLOBAL__N_120CRefreshLoginCommandE
N12_GLOBAL__N_129CCreateCachePreloadersCommandE
N12_GLOBAL__N_116CSetUser2CommandE
N12_GLOBAL__N_115CSetUserCommandE
N12_GLOBAL__N_114CLogoutCommandE
N12_GLOBAL__N_113CLoginCommandE
N12_GLOBAL__N_121CDeleteAccountCommandE
N12_GLOBAL__N_137CGenerateSuggestedAccountNamesCommandE
N12_GLOBAL__N_126CIsAccountNameInUseCommandE
N12_GLOBAL__N_121CCreateAccountCommandE
N12_GLOBAL__N_124CWaitForResourcesCommandE
N12_GLOBAL__N_114CCommandThreadE
N6common15ObjFunctorImpl1IN4Grid18CCommandThreadPoolEMS2_FvPNS_7CThreadEES4_EE
N4Grid23CBadCallHandleExceptionE
N12_GLOBAL__N_112ICommandBaseE
N12_GLOBAL__N_114CNullOperationE
Esteam.cfg
STEAM_CLIENT_CONFIG_FILE
ActivityLogEnable=enable\nActivityLogCreateMode=append\nActivityLogFlushMode=flush\nActivityLogDate=enable\nActivityLogGroupCache=enable\nActivityLogContextCacheStatus=enable\nActivityLogContextCacheError=enable\nActivityLogGroupSteamAPI=enable\nActivityLogContextSteamAPIAppDependencies=enable\nActivityLogGroupCsComm=enable\nActivityLogContextCsCommConnectionPool=enable\nActivityLogContextCsCommConnection=enable\nActivityLogContextCsCommSession=enable\n
DepotKey_
AppState_
AppKeys.cfg
Bad AppKeys.cfg - %s
sdkapp
SDK_NotOwnedByDefault
SdkContentServerAdrs
No AllAppsRecord!
No AllSubscriptionsRecord!
Field does not exist
N4Grid25CContentDescriptionRecordE
ContentServerCDDBIPAddrPort
No ContentServers are online
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClient.cpp
(0 == SetSocketToAbortWhenClosed(hSocket)) != false
ContentServer rejected client's protocol version
SdkContentServerAdrs
N4Grid8CSClient34CBlockingReadFileCompletionHandlerE
N4Grid8CSClient48CBlockingReadVersionChangeFileIdPurgeListHandlerE
N4Grid8CSClient37CBlockingReadFileChecksumTableHandlerE
N4Grid8CSClient28CBlockingReadManifestHandlerE
N12_GLOBAL__N_130CContentServerCDDBAddressCacheE
18ObjScopeGuardImpl0IN12_GLOBAL__N_130CContentServerCDDBAddressCacheEMN4Grid19IServerAddressCacheEFvvEE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientCompletionHandlers.cpp
dwWaitRet == 0 || dwWaitRet == ((DWORD) 0x000000C0)
(m_CompleteEvent.Set()) != false
N4Grid8CSClient26IBlockingCompletionHandlerE
N4Grid8CSClient18ICompletionHandlerE
m_NumActiveTransfers
Attempts
SelectedConnectWithTimeout
ClientBandwidthStats
TimeLastUploaded
WSAGetLastError() != 115
{Cnx=%u,%u,%s} : disconnected
Recv Worker
{Cnx=%u,%u,%s} : connected
{Cnx=%u,%u,%s} : thread stopped
{Cnx=%u,%u,%s} : Binding client session handle %u to server session handle %u
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientConnection.cpp
(m_ServerToClientSessionHandleMap.insert( std::make_pair( hServerSession, hClientSession ) ).second) != false
m_ContentServerId == uContentServerId
CConnection::BlockingConnect WSAConnect() failed
SetSocketToBlockingMode failed
SetSocketToNonBlockingMode failed
TranslateServerToClientSessionHandle failed for hServerSession=%u
GetBoundSession failed for hSession=%u
(m_RecvMsgHeaderWrappedWSABUF.PrepareToReceive ( sizeof( common::ClientSessionHandle_t ) + sizeof( NetworkTransactionId_t ) )) != false
{Cnx=%u,%u,%s} : thread started - issuing initial read
{Cnx=%u,%u,%s} : Unbinding client session handle %u to server session handle %u
{Cnx=%u,%u,%s} : Removing session %u
(m_setSessionAppIds.erase( uAppId )) == (1)
{Cnx=%u,%u,%s} : Session not found: %u
AddSession to broken connection
{Cnx=%u,%u,%s} : Adding session %u
(m_Sessions.insert( std::make_pair( pSession->Handle(), pSession ) ).second) != false
(m_setSessionAppIds.insert( pSession->AppId() ).second) != false
{Cnx=%u,%u,%s} : Aborting on error: %s
{Cnx=%u,%u,%s} : cannot schedule destruction with pending IO count of %u
{Cnx=%u,%u,%s} : sending %u bytes
unknown exception completing send
{Cnx=%u,%u,%s} : sending keep-alive
unknown exception completing keep-alive send
failed connection detected when ready to issue body receive
unknown exception waiting for session ready to recv
{Cnx=%u,%u,%s} : completing send of %u bytes
successful send completion, but failed connection detected
successful body recv completion, but failed connection detected
{Cnx=%u,%u,%s} : Completed receive of %u data bytes {Ssn=%u,Txn=%u}
{Cnx=%u,%u,%s} : Completed partial receive of %u bytes for message data
unknown exception completing data recv
successful header recv completion, but failed connection detected
{Cnx=%u,%u,%s} : Received message header {Ssn=%u,Txn=%u}
{Cnx=%u,%u,%s} : Completed partial receive of % bytes for message header
unknown exception completing header recv
pSendCompletionDemuxInfo->m_pSession->m_tsrcpConnection.get()
{Cnx=%u,%u,%s} : Attempting new connection
Failed to create session socket
(WrappedWSABUF.PrepareToReceive( sizeof(bClientProtocolVersionIsAcceptable) )) != false
ContentServer rejected client protocol version
(WrappedWSABUF.PrepareToReceive( sizeof(uLoginSucceeded) )) != false
Timed out connecting to ContentServer
(WrappedWSABUF.PrepareToReceive( sizeof(uSponsorUrlLength) )) != false
(WrappedWSABUF.PrepareToReceive( uSponsorUrlLength )) != false
18ObjScopeGuardImpl0IN4Grid23CCSERServerAddressCacheEMNS0_19IServerAddressCacheEFvvEE
18ObjScopeGuardImpl0IN6common18CThreadSafeCounterEMS1_FvvEE
N4Grid8CSClient37CUnacceptableProtocolVersionExceptionE
N6common18CLogContextFunctorE
N6common11ILogFunctorE
N6common11CObjFunctorIN4Grid8CSClient11CConnectionEEE
N12_GLOBAL__N_131CCommandStatusObjectWithTimeoutE
333333
ADisconnect(%u)
%u:%I64u
%u:%u:%u
nNumChars >= 0
connection attempt failed: %s
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientConnectionPool.cpp
(m_Connections.erase( tsrcpConnection->Handle() )) == (1)
tsrcpCurConnectionToEval.get()
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../Common/Inc/SteamGlobalUserIDHelperFunctions.h
Found existing connection %u,%s for %s
Attempting new connection %u,%s for %s
15ScopeGuardImpl2IPFvRKSsjESsjE
15ScopeGuardImpl3IPFvRKSsjRKN6common11CIPAddrPortEESsjS3_E
Unexpected HandleCompletedRecv() in state 
Unexpected HandleCompletedSend() in state 
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing send
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : sending request
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : FileId=%u StartBlock=%u NumBlocks=%u
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv, %u bytes in next chunk
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientFSM.cpp
FSM.m_uSizeOfNextCompressedBlockChunk <= FSM.m_uSizeOfNextCompressedBlock
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv, expecting chunk of %u bytes
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv, %u bytes in next incoming block
FSM.m_uSizeOfNextCompressedBlock <= (2*cuCompressionBlkSize)
received unknown compression type
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv, %u blocks to receive
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv, expecting %u total bytes
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : finished
cpu8Data == FSM.m_pu8IntoReceiveBlock
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing recv for %u bytes
FSM.m_uCurrentDataChunkSize <= FSM.m_uExpectedTotalSizeOfDataToReceive
FSM.m_uDataBytesReceived <= FSM.m_uExpectedTotalSizeOfDataToReceive
Server returned error response to ReadPurgeList request
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : expecting %u total bytes
Server returned invalid response to ReadPurgeList request
cpu8ReceivedData == FSM.m_pu8IntoReceiveBlock
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : completing chunk recv of %u bytes
FSM.IsRunning() || FSM.IsCancelled()
FSM.m_uCurRecvBufIdx < FSM.m_uNumRecvBufs
FSM.m_uBytesWrittenToCurRecvBuf < uCurRecvBufLen
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : started
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : restart
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : cancelled
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : aborted
(m_RecvBufWrapper.PrepareToReceive( uSize )) != false
(m_ReadyToRecvSynchEvent.Set()) != false
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : initiating recv
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : initiating recv for %u bytes
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s.%s} : User=%s(%s) App=%u Ver=%u
CRecvSessionLoginReplyStatusState
CRecvSessionLoginReplyArgsState
CSendSessionLogoutRequestState
CRecvSizeOfNextCompressedBlockState
CRecvSizeOfNextCompressedBlockChunkState
CRecvNextCompressedBlockChunkState
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : created
{Cnx=%u,Ssn=%u,App=%u,Txn=%u,%s} : destroyed
received bad response code
received error response code
Compression Failure
CSendSessionLoginRequestState
CRecvSessionLogoutReplyState
CSendRequestState
CRecvInitialReplyState
CRecvDataChunkHeaderState
CRecvDataChunkState
ReadPurgeList
ReadFileChecksumTable
ReadFile
m_RecvBufVector.at(i).m_pu8
m_RecvBufVector.at(i).m_uLen
ReadManifest
N4Grid8CSClient12CReadFileFSME
N4Grid8CSClient12CReadFileFSM34CRecvNextCompressedBlockChunkStateE
N4Grid8CSClient12CReadFileFSM40CRecvSizeOfNextCompressedBlockChunkStateE
N4Grid8CSClient12CReadFileFSM35CRecvSizeOfNextCompressedBlockStateE
N4Grid8CSClient12CReadFileFSM22CRecvInitialReplyStateE
N4Grid8CSClient12CReadFileFSM17CSendRequestStateE
N4Grid8CSClient17CReadPurgeListFSME
N4Grid8CSClient17CReadPurgeListFSM19CRecvDataChunkStateE
N4Grid8CSClient17CReadPurgeListFSM25CRecvDataChunkHeaderStateE
N4Grid8CSClient17CReadPurgeListFSM22CRecvInitialReplyStateE
N4Grid8CSClient17CReadPurgeListFSM17CSendRequestStateE
N4Grid8CSClient25CReadFileChecksumTableFSME
N4Grid8CSClient25CReadFileChecksumTableFSM19CRecvDataChunkStateE
N4Grid8CSClient25CReadFileChecksumTableFSM25CRecvDataChunkHeaderStateE
N4Grid8CSClient25CReadFileChecksumTableFSM22CRecvInitialReplyStateE
N4Grid8CSClient25CReadFileChecksumTableFSM17CSendRequestStateE
N4Grid8CSClient16CReadManifestFSME
N4Grid8CSClient16CReadManifestFSM19CRecvDataChunkStateE
N4Grid8CSClient16CReadManifestFSM25CRecvDataChunkHeaderStateE
N4Grid8CSClient16CReadManifestFSM22CRecvInitialReplyStateE
N4Grid8CSClient16CReadManifestFSM17CSendRequestStateE
N4Grid8CSClient10CLogoutFSME
N4Grid8CSClient10CLogoutFSM28CRecvSessionLogoutReplyStateE
N4Grid8CSClient10CLogoutFSM30CSendSessionLogoutRequestStateE
N4Grid8CSClient9CLoginFSME
N4Grid8CSClient9CLoginFSM31CRecvSessionLoginReplyArgsStateE
N4Grid8CSClient9CLoginFSM33CRecvSessionLoginReplyStatusStateE
N4Grid8CSClient9CLoginFSM29CSendSessionLoginRequestStateE
N4Grid8CSClient14IProtocolStateE
N4Grid8CSClient12IProtocolFSME
N6common21CCompressionExceptionE
N4Grid27CClientBinaryManifestRecordE
18ObjScopeGuardImpl1IN4Grid12CTicketCacheEMS1_FvjEjE
FindSession(%u) failed
NumConnections()=%u
QueueReconnect(%u)
m_pLogContextGetPerfStatsAPI
GetPerfStats()
NumSessions()=%u
m_pLogContextSession
Reconnect failed: %s
GetPerfStats(%u)
CancelPendingCalls(%u)
CancelPendingCall(%u,%u)
m_pLogContextReadFileAPI
ReadFile(%u,%u,%u,%d)
m_pLogContextReadPurgeListAPI
m_pLogContextReadChecksumsAPI
ReadFileChecksumTable(%u)
m_pLogContextReadManifestAPI
ReadManifest(%u)
GetSponsorUrl(%u)=%s
DestroySession(%u)
CsComm
ConnectionPool
Connection
ConnectionSend
ConnectionRecv
LoginLogoutFSM
ReadManifestFSM
ReadChecksumsFSM
ReadPurgeListFSM
ReconnectThread
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientService.cpp
(m_ReconnectEvent.Set()) != false
Reconnect failed: unknown exception
ReadVersionChangeFileIdPurgeList(%u,%u)
GetContentServerInfo(%u)=%u,0x%x
(m_Sessions.erase( hSession )) == (1)
CreateSession(%s,%u,%u)=%u attempt %u
(m_Sessions.insert( std::make_pair( hSession, tsrcpSession ) ).second) != false
CreateSession(%s,%u,%u)=%u attempt %u succeeded, CS #%u
CreateSession(%s,%u,%u)=%u attempt %u failed: %s
CreateSession(%s,%u,%u)=%u attempt %u failed with unknown exception
N4Grid8CSClient30CInvalidSessionHandleExceptionE
15ScopeGuardImpl2IPFvjPN6common11CLogContextEEjS2_E
18ObjScopeGuardImpl1IN4Grid8CSClient15CConnectionPoolEMS2_FvRKN6common21CThreadSafeCountedPtrINS1_11CConnectionEEEES6_E
N6common11CObjFunctorIN4Grid8CSClient8CServiceEEE
N4Grid8CSClient28CSessionLoginFailedExceptionE
N4Grid23CTicketExpiredExceptionE
Session destroyed
m_ActiveFSMsMap.size() == 1
Unknown exception caught
m_apCloneableException.get()
Server rejected session login
Failed to reconnect session
UnknownException
{Cnx=%u,Ssn=%u,App=%u} : Abort all FSMs (%s)
{Cnx=%u,Ssn=%u,App=%u} : HandleConnectionFailed: %s
{Cnx=%u,Ssn=%u,App=%u} : Aborting found LoginFSM
{Cnx=%u,Ssn=%u,App=%u} : queuing reconnect for failed connection (%s)
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/CSClientSession.cpp
(m_ActiveFSMsMap.erase( uTxnId )) == (1)
(m_ActiveFSMsMap.insert( std::make_pair( tsrcpFSM->GetTransactionId(), tsrcpFSM ) ).second) != false
{Cnx=%u,Ssn=%u,App=%u} : StartNewFSM for %s failed with exception: %s
{Cnx=%u,Ssn=%u,App=%u} : StartNewFSM for %s failed with unknown exception
Manifest fingerprint mismatch on reconnect
{Cnx=%u,Ssn=%u,App=%u} : Reconnect() attempt %u
{Cnx=%u,Ssn=%u,App=%u} : Reconnect() attempt %u aborted as DestroySession detected
{Cnx=%u,Ssn=%u,App=%u} : Reconnect() attempt %u succeeded, CS #%u
{Cnx=%u,Ssn=%u,App=%u} : Reconnect() attempt %u failed: %s
{Cnx=%u,Ssn=%u,App=%u} : Reconnect() attempt %u failed: unknown exception
18ObjScopeGuardImpl1IN4Grid8CSClient8CSessionEMS2_FvjEjE
18ObjScopeGuardImpl0IN4Grid8CSClient12IProtocolFSMEMS2_FvvEE
N4Grid8CSClient48CManifestFingerprintMistatchOnReconnectExceptionE
18ObjScopeGuardImpl1IN4Grid8CSClient11CConnectionEMS2_FvjEjE
N4Grid8CSClient31CBlockingLoginCompletionHandlerE
18ObjScopeGuardImpl0IN4Grid8CSClient8CSessionEMS2_FvvEE
N4Grid8CSClient32CBlockingLogoutCompletionHandlerE
18ObjScopeGuardImpl0IN6common9LockGuardINS0_16CFastThreadMutexEEEMS3_FvvEE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Inc/EngineReturnBuffer.h
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/EngineClientConnection.cpp
(SetEvent(m_hCallbackThreadExitEvent)) != 0
(CloseHandle(m_hCallbackThreadExitEvent)) != 0
(CloseHandle(m_hCommandEvent)) != 0
CClientConnection - could not create event
s_ReturnBufferTable.find(nRet) == s_ReturnBufferTable.end()
(uBufSize >= m_pCommandChannel->RecvData(szUrl, uBufSize)) != false
(uBufSize >= m_pCommandChannel->RecvData(szEmail, uBufSize)) != false
((255) >= m_pCommandChannel->RecvData(szUser, (255))) != false
((255) >= m_pCommandChannel->RecvData(szAnswerToQuestion, (255))) != false
((255) >= m_pCommandChannel->RecvData(szEmailVerificationKey, (255))) != false
((255) >= m_pCommandChannel->RecvData(szNewPassphrase, (255))) != false
(uBufSize >= m_pCommandChannel->RecvData(szPathBuf, uBufSize)) != false
((1024) >= m_pCommandChannel->RecvData(szArgs, (1024))) != false
(cubRecord >= m_pCommandChannel->RecvData(mbRecord.get(), cubRecord)) != false
((255) >= m_pCommandChannel->RecvData(szKey, (255))) != false
(*puValueLen >= m_pCommandChannel->RecvData(szValueBuf, *puValueLen)) != false
(uBytes >= m_pCommandChannel->RecvData(puIds, uBytes)) != false
uRet <= pAppVersion->uMaxLabelChars
uRet <= pLaunchOption->uMaxDescChars
uRet <= pLaunchOption->uMaxCmdLineChars
(uBufSize >= m_pCommandChannel->RecvData(szCountryBuf, uBufSize)) != false
uRet <= pApp->uMaxInstallDirNameChars
uRet <= pApp->uMaxLatestVersionLabelChars
uRet <= pApp->uMaxCurrentVersionLabelChars
uRet <= pSubscription->uMaxNameChars
uRet <= (pSubscription->uMaxAppIds*sizeof(unsigned int))
((255) >= m_pCommandChannel->RecvData(szPassword, (255))) != false
((255) >= m_pCommandChannel->RecvData(szPassphrase, (255))) != false
(uBufSize >= m_pCommandChannel->RecvData(szUser, uBufSize)) != false
((255) >= m_pCommandChannel->RecvData(szAccountNameToSelectMasterAS, (255))) != false
((255) >= m_pCommandChannel->RecvData(szGenerateNamesLikeAccountName, (255))) != false
((255) >= m_pCommandChannel->RecvData(szAccountName, (255))) != false
((255) >= m_pCommandChannel->RecvData(szEmailAddress, (255))) != false
((255) >= m_pCommandChannel->RecvData(szCreationKey, (255))) != false
((255) >= m_pCommandChannel->RecvData(szPersonalQuestion, (255))) != false
static_cast<unsigned int>(cszRelPath - szName) < (255)
CEngineConnection: bad command code
pComm
ClientCallbackAgent
uRet <= uKeyLength
pReceiveSizeOfEncryptedTicket
nBytes <= uSizeOfOutputBuffer
puWasDeleted
puBootstrapperVersion
puClientVersion
puAppId
pAppStats
uRet <= (255)
uRet <= sizeof(buf)
uRet <= cubDataChunk
puPctFragmentation
cszAppName
pAppVersion
puSizeOfIconData
pLaunchOption
pParentAppId
pApp
uRet <= pApp->uMaxNameChars
pDiscountQualifier
pDiscount
pSubscription
uRet <= sizeof(szMasterList)
uRet <= sizeof(szName)
uRet <= sizeof(szPattern)
uRet <= (uSize*uCount)
nRead == nRet*uSize
uRet <= sizeof(szMode)
(cszRelPath >= szName)
uiBufSz <= (255)
uRecv <= (255)
client disconnected
client callback thread error
pCallbackSignal
N4Grid17CEngineConnectionE
N4Grid17CClientConnectionE
N4Grid17IEngineConnectionE
N4Grid17IClientConnectionE
N4Grid17CReturnBufferItemI17TSteamUpdateStatsEE
N4Grid13IReturnBufferE
N4Grid17CReturnBufferItemIjEE
15ScopeGuardImpl1IPFvPN4Grid13IReturnBufferEEPNS0_17CReturnBufferItemIjEEE
N4Grid17CReturnBufferItemIA256_cEE
15ScopeGuardImpl1IPFvPN4Grid13IReturnBufferEEPNS0_17CReturnBufferItemIA256_cEEE
N4Grid17CReturnBufferItemIiEE
15ScopeGuardImpl1IPFvPN4Grid13IReturnBufferEEPNS0_17CReturnBufferDataEE
15ScopeGuardImpl1IPFvPN4Grid13IReturnBufferEEPNS0_17CReturnBufferItemIiEEE
N6common15ObjFunctorImpl0IN4Grid17CEngineConnectionEMS2_FvvEEE
N4Grid25CEngineLoopbackConnectionE
N7sigslot12_connection2IN4Grid25CEngineLoopbackConnectionE31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
N7sigslot17_connection_base2I31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
N7sigslot12_connection2IN4Grid17CClientConnectionE31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
N4Grid9CPipeComm20CBrokenPipeExceptionE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/EngineClientManager.cpp
(ResetEvent(m_hSingleInstanceFlag)) != 0
(SetEvent(m_hSingleInstanceFlag)) != 0
(CloseHandle(hInstanceFlag)) != 0
Timed out waiting for Engine to start
Failed to open master pipe lock
failed to take master pipe connection lock
Exception caught on line %d, re-throwing
(SetEvent(m_hMasterPipeLock)) != 0
Invalid client connect ACK code
Exception caught on line %d: (%s)
Unknown exception caught on line %d
(SetEvent(m_hMasterChannelExitEvent)) != 0
(CloseHandle(m_hSingleInstanceFlag)) != 0
(SetEvent(m_hAgentMonitorExitEvent)) != 0
(CloseHandle(m_hMasterPipeLock)) != 0
(CloseHandle(m_hMasterChannelExitEvent)) != 0
(CloseHandle(m_hAgentMonitorExitEvent)) != 0
EngineMasterConnectionListener
CClientManager - could not instance event
A Steam Engine Instance already exists
CClientManager - could not create master pipe mutex
CClientManager - could not create event
mstr
Client connect timed out
SteamEngineLock
SteamEngineInstance
EngineClientCommandAgent
dwMyPid == dwEchoedProcessId
dwMyTid == dwEchoedThreadId
Failed to create event handle
PipeComm
uNumConnected
Invalid client connect code
nRet <= sizeof(buf)
Shutting down. . .
EngineClientAgentMonitor
N4Grid14CClientManager5CImplE
N4Grid18CClientAgentThreadE
N4Grid14CClientManagerE
N6common15ObjFunctorImpl0IN4Grid18CClientAgentThreadEMS2_FvvEEE
ShutdownEngineOnLastClientExit
18ObjScopeGuardImpl0IN4Grid14CClientManager5CImplEMS2_FvvEE
18ObjScopeGuardImpl0IN4Grid9CPipeCommEMS1_FvvEE
15ScopeGuardImpl1IPFvPN4Grid9CPipeCommEES2_E
N4Grid26CEngineNotRunningExceptionE
N6common15ObjFunctorImpl0IN4Grid14CClientManager5CImplEMS3_FvvEEE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/EngineReturnBuffer.cpp
N4Grid17CReturnBufferDataE
N4Grid22CReturnBufferAggregateE
CellIDBestResponseTime
TimeLastUpdatedCellId
CellIDManagerThread
Afghanistan
Aland Islands
Albania
Algeria
American Samoa
Andorra
Angola
Anguilla
Antarctica
Antigua and Barbuda
Argentina
Armenia
Aruba
Australia
Austria
Azerbaijan
Bahamas
Bahrain
Bangladesh
Barbados
Belarus
Belgium
Belize
Benin
Bermuda
Bhutan
Bolivia
Bosnia and Herzegovina
Botswana
Bouvet Island
Brazil
Brunei Darussalam
Bulgaria
Burkina Faso
Burundi
Cambodia
Cameroon
Canada
Cape Verde
Cayman Islands
Central African Republic
Chad
Chile
Christmas Island
Cocos (Keeling) Islands
Colombia
Comoros
Congo
Cook Islands
Costa Rica
Cote d'Ivoire
Croatia
Cyprus
Czech Republic
Denmark
Djibouti
Dominica
Dominican Republic
Ecuador
Egypt
El Salvador
Equatorial Guinea
Eritrea
Estonia
Ethiopia
Falkland Islands (Malvinas)
Faroe Islands
Fiji
Finland
France
French Guiana
French Polynesia
French Southern Territories
Gabon
Gambia
Georgia
Germany
Ghana
Gibraltar
Greece
Greenland
Grenada
Guadeloupe
Guam
Guatemala
Guinea-Bissau
Guernsey
Guyana
Haiti
Heard and Mc Donald Islands
Holy See(Vatican City State)
Honduras
Hong Kong
Hungary
Iceland
India
Indonesia
Iraq
Iran
Ireland
Isle of Man
Israel
Italy
Jamaica
Japan
Jersey
Jordan
Kazakhstan
Kenya
Kiribati
Korea, Republic of
Kuwait
Kyrgyzstan
Latvia
Lebanon
Lesotho
Liberia
Liechtenstein
Lithuania
Luxembourg
Macau
Madagascar
Malawi
Malaysia
Maldives
Mali
Malta
Marshall Islands
Martinique
Mauritania
Mauritius
Mayotte
Mexico
Moldova, Republic of
Monaco
Mongolia
Montserrat
Morocco
Mozambique
Myanmar
Namibia
Nauru
Nepal
Netherlands
Netherlands Antilles
New Caledonia
New Zealand
Nicaragua
Niger
Nigeria
Niue
Norfolk Island
Northern Mariana Islands
Norway
Oman
Pakistan
Palau
Panama
Papua New Guinea
Paraguay
Peru
Philippines
Pitcairn
Poland
Portugal
Puerto Rico
Qatar
Reunion
Romania
Russian Federation
Rwanda
Saint Helena
Saint Kitts and Nevis
Saint Lucia
Saint Pierre and Miquelon
San Marino
Sao Tome and Principe
Saudi Arabia
Senegal
Serbia and Montenegro
Seychelles
Sierra Leone
Singapore
Slovakia
Slovenia
Solomon Islands
Somalia
South Africa
Spain
Sri Lanka
Suriname
Svalbard and Jan Mayen
Swaziland
Sweden
Switzerland
Taiwan, Province of China
Tajikistan
Tanzania, United Republic of
Thailand
Timor-Leste
Togo
Tokelau
Tonga
Trinidad and Tobago
Tunisia
Turkey
Turkmenistan
Turks and Caicos Islands
Tuvalu
Uganda
Ukraine
United Arab Emirates
United Kingdom
United States
Uruguay
Uzbekistan
Vanuatu
Venezuela
Viet Nam
Virgin Islands, British
Virgin Islands, U.S.
Wallis and Futuna
Western Sahara
Yemen
Zambia
Zimbabwe
British Indian Ocean Territory
Congo, the Democratic Republic of the
Lao People's Democratic Republic
Macedonia, the former Yugoslav Republic of
Micronesia, Federated States of
Palestinian Territory, Occupied
Saint Vincent and the Grenadines
South Georgia and the South Sandwich Islands
United States Minor Outlying Islands
gds1.steampowered.com:27030 gds2.steampowered.com:27030 gds3.steampowered.com:27030 gds4.steampowered.com:27038
No IP:ports provided for GeneralDirectoryServers
GeneralDirectoryServer_UseDNSFallbacks
gds1.steampowered.com:27030 gds2.steampowered.com:27030
not implemented
/SteamApps
Not implemented
failed to open file 
DecryptionKeyForAppId
.ncf
deprecated.gcf
pos != std::string::npos
/common/
TestCacheSize
CacheSignatureCheck
AlternateAppId
ExternallyUpdated
vecMountPaths.size() == 1
OptionalDLC
DisableManifestIteration
0 == uCacheSizeMB
!bPreserveFilesOnDisk
Failed to delete cache file
Downloading resources
Downloading resources. . .
@reslists/
@reslists/precache.lst
@reslists/preload.lst
LoadAllBeforeLaunch
EnableCacheLoading
failed to write local app file
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/Fs.cpp
it != m_mapTokensHandles.end()
cache path contains invalid characters
app path contains invalid characters
The path to the app dir is too long - set a new root dir path
pAppRecordEnclosing->IsManifestOnlyApp()
Failed to resize the cache file
A different version of this FS is already in use
Can't convert an app to loose-files if it uses GCFs!
Updating Minimum Footprint files
FileInfo.iterManifest->GetCacheIndex() < m_vecResourceFileInfo.size()
m_mapTokensHandles.find(uToken) == m_mapTokensHandles.end()
uCacheIdx < m_vecResourceFileInfo.size()
N4Grid3CFs19CBadHandleExceptionE
18ObjScopeGuardImpl1IN4Grid8CFsTableEMS1_FvRKSsESsE
N4Grid31CCannotCreateCacheFileExceptionE
N4Grid3CFs18CNotFoundExceptionE
18ObjScopeGuardImpl0IN4Grid8CFsTableEMS1_FvvEE
18ObjScopeGuardImpl0IN6common21CCommandStatusControlEMS1_FvvEE
N4Grid3CFs16CConfigExceptionE
15ScopeGuardImpl1IPFbRKSsESsE
15ScopeGuardImpl1IPFvP8_IO_FILEES1_E
18ObjScopeGuardImpl1IN4Grid8CFsTableEMS1_FvbEbE
N4Grid3CFs18CBadMountExceptionE
N4Grid3CFs26CCacheFileMissingExceptionE
N12_GLOBAL__N_132CResourceLoadCompletionCollectorE
18ObjScopeGuardImpl1IN12_GLOBAL__N_132CResourceLoadCompletionCollectorEMS1_FvjEjE
Y@End of file
File seek error
m_uPos < m_uBytes
m_pBuf != 0
pWriteBuf
pReadBuf
u64MaxToRead > 0
m_uBytes != 0
uBytesRemaining == 0
uBytesRead == uBytesToRead
Unknown filesystem error
Not found
The mount path does not exist
Access denied
Invalid handle value
Read failure
App has no cache file
App provided bad argument to Steam API
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/FsBuffer.cpp
Filesystem configuration error
Non-UserConfig file cannot be written to
This operation cannot be performed while the Application's FS is mounted
cache file was missing - retry the operation
N4Grid3CFs29CCannotWriteNonUserConfigFileE
N4Grid3CFs19CEndOfFileExceptionE
N4Grid3CFs14CReadExceptionE
N4Grid3CFs14CSeekExceptionE
N4Grid3CFs26CFileAccessRightsExceptionE
N4Grid3CFs17CUnknownExceptionE
N4Grid32CReadFileChecksumFailedExceptionE
a+rwbtcn
not found File=%s
Access violation=%s
File or path not found=%s
open failure on File=%s
Cache read failed
write failure on File=%s
failed path create to File=%s
<tmpfile>
IsLocalFile(uFileHandle)
GetFileOffset(uHandle) == 0
pu8Buf
Off=%8.8lld Len=%8.8d File=%s
eFilter <= eSteamFindAll
FsCacheGroup
StatRequest
StatComplete
WriteRequest
WriteComplete
CreateLocalFileRequest
CreateLocalFileComplete
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/FsCacheGroup.cpp
bFileExists && !FileInfo.bIsDir
Off=%8.8lld Len=%8.8d Kbps=%d File=%s
N4Grid13CFsCacheGroupE
15ScopeGuardImpl1IPFiiElE
15ScopeGuardImpl1IPFbRKSsEPKcE
N4Grid11IFsStrategyE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/FsTable.cpp
0 == it->second->GetUseCount()
clientInfo.m_pCacheGroup.get()
clientInfo.m_pFsStrategy.get()
m_pCache.get()
@reslists\
@reslists\precache.lst
@reslists\preload.lst
Timed out taking cache locks
clientInfo.m_pFs
it->second.get()
N4Grid8CFsTable5CImplE
N4Grid8CFsTableE
N4Grid8CFsTable13IMountedCacheE
N12_GLOBAL__N_110CMountImplE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/Launcher.cpp
(0 == setenv( itMap->first.c_str(), itMap->second.c_str(), 1 )) != false
Command-line parameters too long
uLaunchOption < AppLaunchOptionsRecord.GetNumFields()
!m_pSteam3Interface || AppLaunchOptionRecord.IsValidForOS( m_pSteam3Interface->GetPlatformName(__null) )
Failed to get environment strings
__STEAM_BOOTSTRAPPER_ICON_ID__
(0 == setenv( sKey.c_str(), sTempValue.c_str(), 1 )) != false
Failed to get path environment variable
Failed to launch application process (%s)
UseCleanEnvironment
CWDOverride
%command%
vacmodulefilename
vacmodulecache
path
%1024[^=]=%1024[^=]
HTML_OFFLINE_DIR
SteamAppUser
SteamAppVersionId
SteamUser
ValvePlatformMutex
%s=%s
Environment too large!
PATH
Invalid CWD created '%s'
%s"%s" %s
N4Grid9CLauncherE
15ScopeGuardImpl1IPFiPcES0_E
N4Grid25CBadLaunchConfigExceptionE
    Cache %d, Node %d
    %s
MasterResourceList
reslists
Adding new resource manifest %d:
N3arg11counted_ptrIN4Grid13IResourceListEEE
N3arg15typed_referenceIN4Grid13IResourceListEEE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/OfflineStatus.cpp
s_eCurrentState < eInvalidState
eState < eInvalidState
eNextState < eInvalidState
SteamIsOffline
SteamStayOffline
ForceOfflineMode
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/PipeComm.cpp
(CloseHandle(m_hWritePipe)) != 0
(!"CPipeComm::Read - ReadFile failed, remote process is me") != false
(!"CPipeComm::Read - ReadFile failed, remote process exists") != false
(m_hReadPipe != __null) != false
(CloseHandle(m_hReadPipe)) != 0
(!"CPipeComm::Write - WriteFile failed, remote process is me") != false
(!"CPipeComm::Write - WriteFile failed, remote process exists") != false
(m_hWritePipe != __null) != false
(m_hReadPipe == __null) != false
(m_hWritePipe == __null) != false
remote process no longer exists
!"Couldn't determine username by getpwuid(getuid()) or getenv('LOGNAME')"
pData
pipe read to 
 failed 
 - remote process 
 is me\n
seems dead\n
seems alive\n
receive buffer too small
pipe write 
dwBytesWritten
Failed create pipe: 
(!dwLastError) != false
peek of pipe from 
 failed: 
steam-%s-%x-%x-%x
steam-%s
LOGNAME
/tmp/%s-%s-%%s
N4Grid9CPipeCommE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/ResourceFile.cpp
getting %s
uBytesRead == m_u64Size
%s received
m_pu8Contents
ResourceFile
Load
GetNext
"%260[^"]",%llu,%llu
%260[^,],%llu,%llu
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/ResourceList.cpp
Failed to find file from reslist: %s
Failed to find file by name: %s
Failed to find reslist file: %s
N4Grid17CResourceListFileE
N4Grid18CResourceListNodesE
N4Grid20CResourceListStringsE
N4Grid13IResourceListE
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/Steam.cpp
nCount > 0 && static_cast<uint>(nCount) < sizeof(cszBuffer)
(SafeSnprintf( szVersion, uVersionBufSize, szFormat, uFileMaj, uFileMin, uFileRev, uFileBld)) == (nCount)
(SteamSeekFile(hFile, nOffset, eSteamSeekMethodSet,pError)==0) != false
(setenv( cszLaunchParamInstallPath, sInstallPath.c_str(), 1 )) == 0
nRet
) failed with error 
Not available
******
Failed to SetUser
Illegal game launch detected
nul:
failed to open dev/null
dev/null error
vsnprintf mismatch
tempfile
s_uNumStartupCalls < 0xFFFF
SteamApp.cfg
g_pBufTable
N6common15CThreadLocalPtrIN4Grid17IEngineConnectionEEE
%u,0x%p,0x%p,0x%p
SteamCheckAppOwnership
N4Grid31CLibraryNotInitializedExceptionE
%u, %u, 0x%p=%s, 0x%p
SteamGetAppDLCStatus
N4Grid26CEngineDisconnectExceptionE
%u,0x%p
SteamForceCellId
0x%p,0x%p
SteamWasBlobRegistryDeleted
0x%p,0x%p,0x%p
GetLocalClientVersion
0x%p
SteamGetCurrentAppId
0x%x,0x%p
SteamGetTotalUpdateStats
%d, %d, 0x%x, 0x%p
SteamGetAppUpdateStats
%d,0x%x,0x%p
SteamUpdateSubscriptionBillingInfo
0x%x,0x%p
SteamUpdateAccountBillingInfo
%s,%s,0x%p
SteamChangeAccountName
0x%p
SteamRequestEmailAddressVerificationEmail
%s,0x%p
SteamVerifyEmailAddress
%s,0x%p
SteamChangeEmailAddress
0x%x=%s,%u,0x%x,0x%p
SteamGetCurrentEmailAddress
%u,0x%x,0x%x,0x%p
SteamGetContentServerInfo
%u,0x%p=%s,%u,*0x%x=%u,0x%p
SteamGetSponsorUrl
%s,%s,%s,0x%p
SteamChangePersonalQA
%s,%s,0x%p
SteamChangePassword
%s,0x%p
GetNumAccountsWithEmailAddress
%s,0x%p
SteamRequestAccountsByCdKeyEmail
%s,0x%p
SteamRequestAccountsByEmailAddressEmail
%s,%s,0x%p
SteamRequestForgottenPasswordEmail
%s,%s,%s,%s,*0x%p=%s,0x%p
SteamChangeForgottenPassword
0x%p,0x%p
SteamSetNotificationCallback
0x%p
SteamUninstall
%u,%u,0x%p
SteamSetAppVersion
%u,0x%p
SteamReleaseCacheFiles
%u,%u,0x%p
SteamSetAppCacheSize
%u,0x%p,0x%p
SteamGetAppCacheSize
%u,0x%p="%s",0x%p
SteamMoveApp
%u,0x%p,0x%p
SteamGetAppDir
*0x%p="%s",0x%p
SteamSetCacheDefaultDirectory
0x%p,0x%p
SteamGetCacheDefaultDirectory
%u,0x%p
SteamRefreshMinimumFootprint
%u,0x%p,%u,0x%p,0x%p
SteamGetCacheDecryptionKey
%u,%s,0x%p,%u,%llu,0x%p
SteamLoadFileToApp
%u,%s,0x%p,%u,%llu,0x%p
SteamLoadFileToCache
%u,%s,%llu,0x%p,0x%p
SteamIsFileNeededByApp
%u,%s,%llu,0x%p
SteamIsFileNeededByCache
%u,%s,0x%p
SteamLoadCacheFromDir
%u,0x%p
SteamDefragCaches
%u,0x%p,0x%p
SteamGetCachePercentFragmentation
%u,%u,0x%p
SteamRepairOrDecryptCaches
%u,0x%p
SteamFlushCache
%u,0x%p
SteamStopLoadingCache
%u,0x%p
SteamStartLoadingCache
0x%p=%u,0x%p=%u,0x%p
SteamGetCurrentCellID
*0x%p=%s,0x%p
SteamIsUsingSdkContentServer
%u,*0x%p=%s,0x%p
SteamIsCacheLoadingEnabled
%u,0x%p=%s,%u,0x%p,0x%p
SteamGetCacheFilePath
0x%p
SteamCreateCachePreloaders
%u,%u,"%s",0x%p
SteamLaunchApp
%u,0x%p
SteamWaitForAppReadyToLaunch
%u,0x%p,0x%p,0x%p
SteamGetAppUserDefinedRecord
%u,%s,0x%p,%u,0x%p,0x%p
SteamGetAppUserDefinedInfo
%u,0x%p,%u,%d,0x%p
SteamGetAppDependencies
0x%p=%s,0x%p,0x%p
SteamFindApp
%u,%u,0x%p
SteamRemoveAppDependency
%u,%u,0x%p,0x%p
SteamInsertAppDependency
%u,%u,0x%p,0x%p
SteamEnumerateAppDependency
%u,%u,0x%p,%u,0x%p,0x%p
SteamEnumerateAppIcon
%u,%u,0x%p,0x%p
SteamEnumerateAppLaunchOption
%u,%u,0x%p,0x%p
SteamEnumerateAppVersion
%d,0x%x=%s,%u,0x%x
SteamGetSubscriptionPurchaseCountry
%d,0x%x=%s,%u,0x%x
SteamGetAppPurchaseCountry
%u,0x%p,0x%p
SteamEnumerateApp
%u,0x%p,0x%p
SteamEnumerateApp
0x%p,%u,0x%p
SteamGetAppIds
0x%p,0x%p
SteamGetAppStats
%u,%s,0x%p,%u,0x%p,0x%p
SteamGetSubscriptionExtendedInfo
%u,%u,%u,0x%p,0x%p
SteamEnumerateSubscriptionDiscountQualifier
%u,%u,0x%p,0x%p
SteamEnumerateSubscriptionDiscount
%u,0x%p,0x%p
SteamEnumerateSubscription
0x%p,%u,0x%p
SteamGetSubscriptionIds
0x%p,0x%p
SteamGetSubscriptionStats
%u,*0x%p=%s,*0x%p=%s,0x%p
SteamIsAppSubscribed
%u,*0x%p=%s,*0x%p=%s,,0x%p
SteamIsSubscribed
%u,0x%p
SteamAckSubscriptionReceipt
%u,0x%p,0x%p
SteamGetSubscriptionReceipt
%u,0x%p
SteamUnsubscribe
%u,0x%p,0x%p
SteamSubscribe
%s,0x%p
SteamRefreshAccountInfo
SteamVerifyPassword
0x%p,0x%p
SteamGetAccountStatus
0x%p,0x%p
SteamGetUserType
%s,%s,0x%p
SteamRefreshLogin
0x%p,0x%p
SteamIsSecureComputer
0x%p
SteamLogout
%s,%s,%s,0x%p
SteamLogin
0x%p=%s,%u,0x%p,0x%p,0x%p
SteamGetUser
%s,0x%p
SteamSetUser2
%s,*0x%p=%s,0x%p
SteamSetUser
*0x%p=%s,0x%p
SteamIsLoggedIn
0x%p
SteamDeleteAccount
%s,%s,0x%p,%u,0x%p,0x%p
SteamGenerateSuggestedAccountNames
%s,0x%p,0x%p
SteamIsAccountNameInUse
%s,%s,%s,%s,%s,%s,*0x%p=%s,0x%p
SteamCreateAccount
%u,0x%p
SteamSetMaxStallCount
0x%x,%u,0x%p
SteamBlockingCall
N4Grid33CBadCallerErrorStructPtrExceptionE
0x%x,0x%p
SteamAbortCall
0x%x,0x%p,0x%p
SteamProcessCall
SteamGetEncryptedUserIDTicket
%s,0x%p
SteamWaitForAppResources
%s,0x%p
SteamWaitForResources
0x%p
SteamResumeCachePreloading
0x%p
SteamPauseCachePreloading
0x%p
SteamForgetAllHints
%s,%d,0x%p
SteamHintResourceNeed
%s,0x%p
SteamIsFileImmediatelyAvailable
%u,0x%p
SteamFindClose
N4Grid20CErrnoErrorExceptionE
%u,0x%p,0x%p
SteamFindNext64
%u,0x%p,0x%p
SteamFindNext
%s,%d,0x%p,0x%p
SteamFindFirst64
%s,%d,0x%p,0x%p
SteamFindFirst
%s,0x%p
SteamGetLocalFileCopy
%u,0x%p
SteamSizeFile64
18ObjScopeGuardImpl1IN4Grid12CBufferTableEMS1_FvjEjE
%u,0x%p
SteamSizeFile
%u,0x%p
SteamTellFile64
%u,0x%p
SteamTellFile
%u,%lld,%d,0x%p
SteamSeekFile64
%u,%ld,%d,0x%p
SteamSeekFile
%u,0x%p,%s
SteamPrintFile
%u,0x%p
SteamPutc
%u,0x%p
SteamGetc
0x%p,%u,%u,%u,0x%p
SteamWriteFile
0x%p,%u,%u,%u,0x%p
SteamReadFile
0x%x,0x%p
SteamCloseFile
0x%p
SteamOpenTmpFile
%u,%s,%s,0x%p,0x%p
SteamOpenFile64
%u,%s,%s,0x%x,0x%p,0x%p,0x%p
SteamOpenFile2
%u,%s,%s,0x%p
SteamOpenFile
0x%x,0x%p
SteamFlushFile
0x%x,0x%p,%d,%u,0x%p
SteamSetvBuf
%s,0x%p,0x%p
SteamGetFileAttributeFlags
%s,0x%p,0x%p
SteamStat64
%s,0x%p,0x%p
SteamStat
0x%x,0x%p
SteamUnmountFilesystem
0x%p
SteamUnmountAppFilesystem
%u,0x%p=%s,0x%p
SteamMountFilesystem
0x%p
SteamMountAppFilesystem
0x%p,0x%p
SteamChangeOfflineStatus
0x%p,0x%p
SteamGetOfflineStatus
0x%p
SteamNumSteamAppsRunning
0x%p
SteamCleanup
0x%x,0x%p
SteamStartup
15ScopeGuardImpl0IPFvvEE
SteamInstallPath
SteamUserPassphrase
SteamAppUser
SteamAppVersionId
SteamAppId
EngineInSameProcessAsClient
Steam Library has not been initialized
App provided invalid TSteamError pointer to Steam API
Steam library already initialized
Unknown internal error occurred
The specified resource already exists
The command could not be completed
The local Steam Service is not running
Connection to the local Steam Service lost
An operation is currently pending on this Account
Cannot perform this operation while offline
No Steam Content Servers are available
Your system must be rebooted in order to complete this operation
Bad launch configuration
User's ticket has expired
Not logged in
Already subscribed
Not subscribed
Must be an account admin
checksum failed on file read
N4Grid24CAccountPendingExceptionE
N4Grid21CStalledCallExceptionE
N4Grid35CLibraryAlreadyInitializedExceptionE
SteamDLLAppsystem001
Steam003
Steam004
Steam005
Steam006
15ISteamInterface
10CAppSystem
10IAppSystem
N12_GLOBAL__N_118CSteamInterface003E
N12_GLOBAL__N_118ISteamInterface003E
N12_GLOBAL__N_118CSteamInterface004E
N12_GLOBAL__N_118ISteamInterface004E
N12_GLOBAL__N_118CSteamInterface005E
N12_GLOBAL__N_118ISteamInterface005E
N12_GLOBAL__N_118CSteamInterface006E
 failed with error: input TSteamError pointer is null
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/SteamInternal.cpp
(*it).second->m_pAccountEntry->m_pAccount.get()
No Account object found for this Client (
No entry found for this Client (
it != s_ClientAccountMap.end()
pClientAccountInfo->m_pAccountEntry->m_pAccount.get()
pClientAccountInfo->m_pAccountEntry->m_pAccount->IsLoggedIn()
Removed handle 0x%x from pending list
pClientAccountInfo->m_pAccountEntry.get()
it3 != s_ClientAccountMap.end()
Removed entry for client %u, user %s, Login/SetUser failed
s_AccountList.find(pClientAccountInfo->m_sUser) == s_AccountList.end()
it2 != s_ClientAccountMap.end()
Removed entry for client %u, user %s, logout succeeded
No default filesystems for this App
The Account is currently in use by another process
s_PendingAccountsMap.find(bRet) == s_PendingAccountsMap.end()
Added handle 0x%x, for client %u, to pending list
s_PendingAccountsMap.find(nRet) == s_PendingAccountsMap.end()
User '%s' already set for client %d, refreshing login
pAccountEntry->m_pAccount->IsLoggedIn()
Associating pre-existing CAccount for user '%s' to client %d, refreshing login
Creating new CAccount for User '%s' for client %d
s_AccountList.find(sUser) == s_AccountList.end()
Disassociating User '%s' from client %d
User '%s' already set for client %d
Associating pre-existing CAccount for user '%s' to client %d
Creating new CAccount for user '%s' for client %d
(*it).second->m_pAccount.get()
Added entry for client %u, user %s, default user
    Args: (
NullLogContextPtr
%s(%.512s) succeeded
_sentinel
BootStrapperVersionNum
(*it).second.get()
bRet.second
pAccount.get()
Client %u disconnected
%u connections from Client %u
m_uUseCount != 0
Removed entry for client %u
pClientAccountInfo.get()
it2 != s_AccountList.end()
Client %u connected
Buffer too small
AS command error
SteamAPI
AsyncCall
Filesystem
UserId
AcctMgmt
%u, 0x%p=%u, 0x%p=%u, 0x%p
InternalSteamGetCrrentCellID
%u, %u, 0x%p=%s, 0x%p
InternalSteamGetAppDLCStatus
%u,0x%p
InternalSteamForceCellId
0x%p,0x%p
InternalSteamWasBlobRegistryDeleted
0x%p,0x%p,0x%p
SteamGetLocalClientVersion
0x%x,0x%x
SteamGetCurrentAppId
0x%x,0x%x
SteamGetTotalUpdateStats
%d, %d, 0x%x,0x%x
SteamGetAppUpdateStats
%d,0x%x,0x%x
SteamUpdateSubscriptionBillingInfo
0x%x,0x%x
SteamUpdateAccountBillingInfo
%s,%s,0x%x
SteamChangeAccountName
0x%x
SteamRequestEmailAddressVerificationEmail
%s,0x%x
SteamVerifyEmailAddress
%s,0x%x
SteamChangeEmailAddress
0x%x=%s,%u,*0x%x=%u,0x%x
SteamGetCurrentEmailAddress
%u,0x%x,0x%x,0x%x
SteamGetContentServerInfo
%u,0x%x=%s,%u,*0x%x=%u,0x%x
SteamGetSponsorUrl
%s,%s,%s,0x%x
SteamChangePersonalQA
%s,%s,0x%x
SteamChangePassword
%s,0x%x
SteamGetNumAccountsWithEmailAddress
%s,0x%x
SteamRequestAccountsByCdKeyEmail
%s,0x%x
SteamRequestAccountsByEmailAddressEmail
%s,%s,0x%x
SteamRequestForgottenPasswordEmail
%s,%s,%s,%s,*0x%x=%s,0x%x
SteamChangeForgottenPassword
0x%x
SteamUninstall
%u,%u,0x%x
SteamSetAppVersion
%u,%u,0x%x
SteamSetAppCacheSize
%u,0x%x,0x%x
SteamGetAppCacheSize
%u,0x%x="%s",0x%x
SteamMoveApp
%u,0x%x,0x%x
SteamGetAppDir
*0x%x="%s",0x%x
SteamSetCacheDefaultDirectory
0x%x,0x%x
SteamGetCacheDefaultDirectory
%u,0x%x
SteamRefreshMinimumFootprint
%u,0x%p,%u,0x%p,0x%p
InternalSteamGetCacheDecryptionKey
%u,%s,0x%p,%u,%llu,0x%p
InternalSteamLoadFileToCache
%u,%s,0x%p,%u,%llu,0x%p
InternalSteamLoadFileToCache
%u,%s,%llu,0x%p,0x%p
InternalSteamIsFileNeededByApp
%u,%s,%llu,0x%p
InternalSteamIsFileNeededByCache
%u,%s,0x%x
SteamLoadCacheFromDir
%u,0x%x
SteamDefragCaches
%u,0x%x,0x%x
SteamGetCachePercentFragmentation
%u,%u,0x%x
SteamRepairOrDecryptCaches
%u,0x%x
SteamFlushCache
%u,0x%x
SteamStopLoadingCache
%u,0x%x
SteamStartLoadingCache
%u,*0x%x=%s,0x%x
SteamIsCacheLoadingEnabled
%u,0x%x=%s,%u,*0x%x=%u,0x%x
SteamGetCacheFilePath
0x%x
SteamCreateCachePreloaders
%u,%u,"%s",0x%x
SteamLaunchApp
%u,0x%x
SteamWaitForAppReadyToLaunch
%u,0x%x
SteamGetAppUserDefinedRecord
%u,%s,0x%x,%u,0x%x,0x%x
SteamGetAppUserDefinedInfo
%u,0x%x,%u,%d,0x%x
SteamGetAppDependencies
%u,0x%x=%s,0x%x,0x%x
SteamFindApp
%u,%u,0x%x
SteamRemoveAppDependency
%u,%u,%d,%d,%s,0x%x
SteamInsertAppDependency
%u,%u,0x%x,0x%x
SteamEnumerateAppDependency
%u,%u,0x%x,%u,0x%x,0x%x
SteamEnumerateAppIcon
%u,%u,0x%x,0x%x
SteamEnumerateAppLaunchOption
%u,%u,0x%x,0x%x
SteamEnumerateAppVersion
%d,0x%x=%s,%u,0x%x
SteamGetSubscriptionPurchaseCountry
%d,0x%x=%s,%u,0x%x
SteamGetAppPurchaseCountry
%u,0x%x,0x%x
SteamGetDepotParent
%u,0x%x,0x%x
SteamEnumerateApp
0x%x,%u,0x%x
SteamGetAppIds
0x%x,0x%x
SteamGetAppStats
%u,%s,0x%x,%u,0x%x,0x%x
SteamGetSubscriptionExtendedInfo
%u,%u,%u,0x%x,0x%x
SteamEnumerateSubscriptionDiscountQualifier
%u,%u,0x%x,0x%x
SteamEnumerateSubscriptionDiscount
%u,0x%x,0x%x
SteamEnumerateSubscription
0x%x,%u,0x%x
SteamGetSubscriptionIds
0x%x,0x%x
SteamGetSubscriptionStats
%u,*0x%x=%s,*0x%x=%s,0x%x
SteamIsAppSubscribed
%u,*0x%x=%s,*0x%x=%s,0x%x
SteamIsSubscribed
%u,0x%x
SteamAckSubscriptionReceipt
%u,0x%x,0x%x
SteamGetSubscriptionReceipt
%u,0x%x
SteamUnsubscribe
%u,0x%x
SteamSubscribe
%s,0x%x
SteamRefreshAccountInfo
%d,0x%x=%s,0x%x,0x%x
SteamVerifyPassword
%u,0x%x,0x%x
SteamGetAccountStatus
%u,0x%x,0x%x
SteamGetUserType
%s,%s,0x%x
SteamRefreshLogin
0x%x,0x%x
SteamIsSecureComputer
0x%x
SteamLogout
%s,%s,%s,0x%x
SteamLogin
0x%x=%s,%u,*0x%x=%u,0x%x,0x%x
SteamGetUser
%s,0x%x
SteamSetUser2
%s,*0x%x=%s,0x%x
SteamSetUser
*0x%x=%s,0x%x
SteamIsLoggedIn
0x%x
SteamDeleteAccount
%s,%s,0x%x,%u,0x%x,0x%x
SteamGenerateSuggestedAccountNames
%s,*0x%x=%s,*0x%x
SteamIsAccountNameInUse
%s,%s,%s,%s,%s,%s,*0x%x=%s,0x%x
SteamCreateAccount
%u,0x%x
SteamSetMaxStallCount
0x%x,%u,0x%x
SteamBlockingCall
15ScopeGuardImpl1IPFvjEjE
15ScopeGuardImpl2IPFvjjEjjE
0x%x,0x%x
SteamAbortCall
0x%x,0x%x,0x%x
SteamProcessCall
SteamGetEncryptedUserIDTicket
%u,%s,0x%x
SteamWaitForResources
%u,%u,0x%x
SteamResumeCachePreloading
%u,%u,0x%x
SteamPauseCachePreloading
%u,%u,0x%x
SteamForgetAllHints
%u,%u,%s,%d,0x%x
SteamHintResourceNeed
%u,%s,0x%x
SteamIsFileImmediatelyAvailable
%u,0x%x
SteamFindClose
%u,0x%x,0x%x
SteamFindNext
%u,%s,%d,0x%x,0x%x
SteamFindFirst
%u,%s,0x%x
SteamGetLocalFileCopy
%u,0x%x
SteamSizeFile
%u,0x%x
SteamTellFile
%u,%lld,%d,0x%x
SteamSeekFile
%u,0x%x
SteamPutc
%u,0x%x
SteamGetc
0x%x,%u,%u,%u,0x%x
SteamWriteFile
0x%x,%u,%u,%u,%llu,0x%x
SteamReadFile
0x%x,%u,%u,%u,%u,0x%x
SteamReadFile
0x%x,0x%x
SteamCloseFile
%u,0x%x
SteamOpenTmpFile
%u,%s,%s,0x%x,0x%p,0x%p,0x%p
SteamOpenFile64
%u,%s,%s,0x%x,0x%p,0x%p,0x%p
SteamOpenFile2
%u, %s,%s,0x%x
SteamOpenFile
0x%x,0x%x
SteamFlushFile
%u,%s,0x%x,0x%x
SteamStat
%u,%s,0x%x,0x%x
SteamStat
%u,0x%x,0x%x
SteamUnmountFilesystem
%u,%u,0x%x=%s,0x%x
SteamMountFilesystem
%u,0x%x
SteamUnmountAppFilesystem
%u,%u,0x%x
SteamMountAppFilesystem
%u,0x%x,0x%x
SteamChangeOfflineStatus
%u,0x%x,0x%x
SteamGetOfflineStatus
InternalSteamEndClient
0x%x
SteamShutdownEngine
0x%x
InternalSteamNumClientsConnectedToEngine
0x%x
InternalSteamShouldShutdownEngine
0x%x
SteamShutdownSteamBridgeInterface
0x%x
SteamStartEngine
SteamAppId
N12_GLOBAL__N_130CClientCallbackSignalConnectorE
N7sigslot12_connection2IN12_GLOBAL__N_130CClientCallbackSignalConnectorE31ESteamNotificationCallbackEventjNS_20multi_threaded_localEEE
Mary had a little lamb
ExtractNext(u8): Not enough data in raw buffer
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/SteamValidateUserIDTickets.cpp
pValidationContext->m_eState == TValidationContext::eFree
Append(u8) Not enough space in raw buffer
static_cast<size_t>( pValidationContext->m_pMsgBufferCursor - pValidationContext->m_AESEncryptedPayloadAndNetworkIOBuffer ) == sizeof( uSizeOfWholeMsg ) + uSizeOfWholeMsg
sizeof( pValidationContext->m_RSAandAESDecryptionBuffer ) >= pValidationContext->m_RSAClientMsgDecryptor.MaxPlainTextLength()
pValidationContext->m_pMsgBufferCursor == pValidationContext->m_RSAandAESDecryptionBuffer
pValidationContext->m_pMsgBufferEnd > pValidationContext->m_pMsgBufferCursor && pValidationContext->m_pMsgBufferEnd <= & pValidationContext->m_RSAandAESDecryptionBuffer[ sizeof( pValidationContext->m_RSAandAESDecryptionBuffer ) ]
pValidationContext->m_u32UserIDTicketValidationServerIPAddr2 != pValidationContext->m_u32UserIDTicketValidationServerIPAddr1
pszOptionalPrivateDecryptionKeyFilename
Keys read from files do not work
30819d300d06092a864886f70d010101050003818b0030818702818100bc265d3402562c8afb78904e7ec84ee5b6662a09216b6b50da4205094c54f8b09d211bdeb8219ca4df67e39d2349bcbe9cb3b0d1e18b23cf33b5b51cabbeaa529a27e2b3928bdbe1c5c5a7de6bee7e87aecfa26f82286cad35df7ee53fe12adb2d1e81e98ca5faa6db509de8c4f482fa3c4fcf875ce21d443ed635bbdcb425db020111
N8CryptoPP21RSAPrivateKeyTemplateINS_17DecryptorTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS3_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_21InvertibleRSAFunctionEEEEE
N8CryptoPP17DecryptorTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS2_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_21InvertibleRSAFunctionEEE
N8CryptoPP24CryptoSystemBaseTemplateINS_4OAEPINS_3SHAENS_10P1363_MGF1IS2_EEXadL_ZNS_14OAEP_P_DEFAULTEEELj0EEENS_21InvertibleRSAFunctionEEE
N8CryptoPP12PK_DecryptorE
N8CryptoPP21PublicKeyBaseTemplateINS_21InvertibleRSAFunctionEEE
N8CryptoPP10FileSourceE
ValidateTicketServerIPAddrPort
Password not available to compare
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/Src/TicketCache.cpp
pu8Blob == ( TicketBlob.get() + TicketBlob.GetSize() )
SetUser:User offline - make offline ticket
Ticket format error, throwing it out
Failed to read user ticket: %s
uTicketBlobSize == TicketBlob.GetSize()
Successfully serialized dirty tickets for app %u
Failed to serialize dirty tickets for app %u: %s
Failed to serialize content tickets: 
Failed to serialize dirty tickets for app %u
Failed to serialize content tickets: unknown error
BeginAccess for app %u tickets loaded previous session
Loaded %u tickets for app %u from storage
Throwing out expired ticket for %s
BeginAccess for app %u tickets to be loaded
Clearing content tickets for %s
iterActiveApp != m_ActiveAppMap.end()
Clearing TGT and passphrase for %s
RemoveCurrentTicket removed content ticket for AppId %u matching IP %s
Could not find app %u ticket with for server %s
RemoveCurrentTicket removed content ticket for AppId %u
RemoveCurrentTicket attempt to remove content ticket for AppId %u, but none present
LoadFromTGS - User ticket has expired - attempting renewal with cached password
User ticket has been successfully renewed
LoadFromTGS - User ticket has expired - no cached password
SpecifiedContentServerIdForAppId
Requesting CS #%u for AppId #%u
No CS online with App %u Ver %u
Failed to get CS list for AppId #%u
Found valid app %u ticket with for server %s
Retrieved %u new tickets from TGS for app %u
Call to TGS for new tickets failed for app %u: %s
Rate-limiting request for App %d tickets
SetUser:Failed to aquire ticket with get
Forcing local logout because user ticket invalid
SetUser:Failed - user ticket not valid
Failed ticket decryption, throwing it out
Cached password is corrupt: length=%d
SetUser:Success - user ticket valid
Successfully logged in and user ticket stored
Password not set
Clear user %s
SetUser2(%s) first call
No ticket found
EndAccess for app %u
Logout user %s
Cannot find content ticket
Phrase
SteamUserPassphrase
ClockSkewTolerance
m_rcpTGT.get()
GetCurrentTicket for app %u
Rejecting TGS Query
TGS Query, window opens %s
SetUser(%s) first call
uBytesRead
uBytesRead == uBufSz
Loaded cached password
SetUser(%s) again
Old unencrypted TGT found
Password is not cached
do not save
Login(%s) %s password
Failed to get user ticket: %s
TicketCache
Content
N4Grid18CVTSIPAddressCacheE
18ObjScopeGuardImpl1IN4Grid12CTicketCache5CImplEMS2_FvjEjE
18ObjScopeGuardImpl0IN4Grid18CVTSIPAddressCacheEMNS0_19IServerAddressCacheEFvvEE
15ScopeGuardImpl1IPFvRKN6common21CThreadSafeCountedPtrINS0_16CFastThreadMutexEEEES3_E
basic_string::replace
bAbsolutePath
pchDirStart && pchDirEnd
pchNameStart && pchNameEnd
dwReplaceFlags <= 1
ret > 0
ret >= 0
%s/%3s%4x.TMP
!"aio_suspend unimplemented"
!"aio_error unimplemented"
/proc/cpuinfo
processor
!"nCpus is zero"
lpProtocolInfo == __null
g == __null
lpCallerData == __null
lpCalleeData == __null
lpSQOS == __null
lpGQOS == __null
steampid
%s-steam-
/tmp
/tmp/%s
0esce-%x%x%x
unlinked %d orphaned pipes\n
lpOverlapped == __null
dwFlags == 0
hFile != __null
lpAttributes == __null
lpName == __null
dwMaximumSizeHigh == 0
pFile->m_fd == -1
!( fcntl( fd, 3 ) & 04000 )
"WriteFileFailed" && !pchErr
!pFile->m_bDelayedOpen
!"Error"
!pFile->m_bFirstRead
nBufferSize <= 4
nDefaultTimeOut == (DWORD)-1
dwShareMode == 0
hTemplateFile == __null
lpName != __null
Local\
%xe%%s%s
Global\
!"mmap failed" && pchErr
lReleaseCount >= 1
lpcbTransfer
strlen(lpName) < 4096
%xs%s
!"pthread_mutex_init failed"
!"pthread_mutex_lock failed"
strlen(pszName) < 4096
%xm%s
pM->m_pSemaphore == -1
ret != 22
AsyncIOWorker
nBytesIOd == paio->aio_nbytes
!"unhandled aio_lio_opcode"
STEAM_ASYNCIO_THREADS
pHandle != __null
!"underflow!"
ret != ((DWORD) 0xFFFFFFFF)
s > 0
dwBufferCount == 1
/home/buildbot/buildslave_steam/steam2_rel_beta_linux/build/Projects/GazelleProto/Client/Engine/../../../Common/Misc/PosixWin32.cpp
lpSecurityAttributes == __null
!"MoveFileEx with MOVE_FILE_COPY_ALLOWED not implemented"
ret > 0 || (*__errno_location ()) == 2
!"WaitNamedPipe not implemented"
!"aio_completion_handler called, but AIO is broken"
dwFlags == 0 || dwFlags == 04000
"Create semaphore failed in CreateSemaphoreInternal" && !pchErr
removing stale semaphore last operated on by process %d with name %s\n
!"AcquireSemaphoreInternal called on an anonymous semaphore object - code bug"
!"ReleaseSemaphoreInternal called on an anonymous semaphore object - code bug"
!"FindResource not implemented"
!"LoadResource not implemented"
!"LockResource not implemented"
!"SizeOfResource not implemented"
setrlimit( RLIMIT_NOFILE, &lim ) == 0
getrlimit( RLIMIT_NOFILE, &lim ) == 0 && lim.rlim_cur == 4096
!"SuspendThread not implemented"
!"TransmitFile doesn't handle non-null lpTransmitBuffers"
"open failed in WriteFile" && !pchErr
"fcntl F_GETFL failed in WriteFile" && !pchErr
"fcntl F_SETFL failed in WriteFile" && !pchErr
pFile->m_nBufferBytesValid == 0
"select failed in ReadFile" && !pchErr
nNumberOfBytesToRead >= pFile->m_nBufferBytesValid
"read failed in ReadFile" && !pchErr
( dwPipeMode == 0x00000000 ) || ( dwPipeMode & 0x00000000 )
nMaxInstances == 1 || nMaxInstances == 255
"open failed in CreateNamedPipe" && !pchErr
"fcntl F_GETFL failed in CreateNamedPipe" && !pchErr
"fcntl F_SETFL failed in CreateNamedPipe" && !pchErr
!"Opening a FIFO O_RDWR has undefined behavior"
"open for read failed in CreateFile" && !pchErr
"fcntl F_GETFL failed in CreateFile" && !pchErr
"fcntl F_SETFL failed in CreateFile" && !pchErr
"open for write failed in CreateFile" && !pchErr
!"opening a FIFO O_RDWR is undefined"
"open for read/write failed in CreateFile" && !pchErr
!"unhandled dwDesiredAccess value"
!"attempting to reset an uninialized pthread event"
!"Unhandled Handle type passed to CloseHandle"
SetEvent: pthread_cond_broadcast returned %d, errno %d (%s)\n
pSem->m_pPThreadSem->m_cSem > 0
ReleaseSemaphore: pthread_cond_broadcast returned %d, errno %d (%s)\n
!"attempting to acquire an uninitialized pthread semaphore"
pSem->m_pPThreadSem->m_cSem >= 0
!"attempting to wait on an uninialized pthread event"
lMaximumCount == 1 || lMaximumCount == 2147483647L
CAsyncIOManager: %d threads terminating.  %ld reads, %ld writes, %ld deferrals.\n
CAsyncIOManager: %u single object sleeps, %u multi object sleeps\n
CAsyncIOManager: %u single object alertable sleeps, %u multi object alertable sleeps\n
!"AcquireSemaphore returned WAIT_FAILED"
CAsyncIOManager(%p) send on fd %d failed with errno %d (%s)\n
CAsyncIOManager(%p) missing completion event for thread %p callback wait\n
!"non-0 return from pthread_mutex_init"
!"non-0 return from pthread_create"
async i/o manager using %d threads\n
!"NULL overlapped struct passed into completion queue"
!"NULL completion func passed into completion queue"
CAsyncIOManager: creating I/O worker thread\n
%s/.steam/steam
false 
(%zu) Descend: %s, (%s), %s\n
\t(%zu) comparing %s with %s\n
DBG_PATHMATCH
Lowered '%s' -> '%s'\n
Breaking '%s' in '%s'\n
Matched '%s' -> '%s'\n
Unmatched %s\n
(%zu) readdir failed to find '%s' in '%s'\n
N3arg17generic_referenceE
N3arg17generic_reference16counted_ptr_bodyE
[Source file 
, line 
N3BSL10CExceptionE
The specified time precision is invalid (%1)
CUnpackedTime exception
CUnpackedTime out of range (year %1, month %2, day %3, hour %4, minute %5, second %6, millisecond %7, microsecond %8)
CUnpackedTime: conversion from string %1 failed at position %2
CUnpackedTime: conversion from string %1 failed - string has invalid length (should be %2)
CUnpackedTime: conversion from string %1 failed - invalid character at position %2
CTime: time packing exception
CTime: time to pack is negative
CTime: time out of range (day from origin %1, hour %2, minute %3, second %4, millisecond %5, microsecond %6
vector::_M_insert_aux
BSLTime.cpp
BSLTime.h
{20,24,27}
0123456789abcdef
N3BSL5CTime19CTimeToPackNegativeE
N3BSL21CTimePrecisionInvalidE
N3BSL5CTime21CTimeToPackOutOfRangeE
N3BSL5CTime17CPackingExceptionE
N3BSL13CUnpackedTime24CFromStringInvalidLengthE
N3BSL13CUnpackedTime27CFromStringInvalidCharacterE
N3BSL13CUnpackedTime20CFromStringExceptionE
AES_PHM_Decryption: Invalid Ciphertext or Key
N8CryptoPP18AES_PHM_DecryptionE
N8CryptoPP18AES_PHM_EncryptionE
N8CryptoPP18CBCPaddedDecryptorE
N8CryptoPP18CBCPaddedEncryptorE
N8CryptoPP10CipherModeE
BufferedTransformation: cannot flush buffer
BufferedTransformation: data integrity check failed
BufferedTransformation: invalid data format
BufferedTransformation: cannot write to output device
BufferedTransformation: unknown error
N8CryptoPP11PK_VerifierE
N8CryptoPP23PK_FixedLengthDecryptorE
N8CryptoPP26PK_FixedLengthCryptoSystemE
N8CryptoPP22BufferedTransformationE
N8CryptoPP24HashModuleWithTruncationE
N8CryptoPP10HashModuleE
N8CryptoPP21RandomNumberGeneratorE
N8CryptoPP12StreamCipherE
FileSink: error writing file
FileStore: error reading file
FileSink: error opening file for writing: 
FileStore: error opening file for reading: 
N8CryptoPP8FileSinkE
N8CryptoPP9FileStoreE
N8CryptoPP36BufferedTransformationWithAutoSignalE
N8CryptoPP8FileSink8WriteErrE
N8CryptoPP8FileSink3ErrE
N8CryptoPP8FileSink7OpenErrE
N8CryptoPP9FileStore7ReadErrE
N8CryptoPP9FileStore3ErrE
N8CryptoPP9FileStore7OpenErrE
N8CryptoPP11StringStoreE
N8CryptoPP5StoreE
N8CryptoPP10HashFilterE
N8CryptoPP23FilterWithBufferedInputE
N8CryptoPP6FilterE
N8CryptoPP9BitBucketE
N8CryptoPP10HexDecoderE
N8CryptoPP10HexEncoderE
0123456789ABCDEF
0123456789abcdef
Integer: division by zero
OpenPGP decode error
BER decode error
N8CryptoPP24MontgomeryRepresentationE
N8CryptoPP17ModularArithmeticE
N8CryptoPP12AbstractRingINS_7IntegerEEE
N8CryptoPP12AbstractRingINS_7IntegerEE20MultiplicativeGroupTE
N8CryptoPP13AbstractGroupINS_7IntegerEEE
N8CryptoPP18DERSequenceEncoderE
N8CryptoPP12BERDecodeErrE
N8CryptoPP18BERSequenceDecoderE
N8CryptoPP17EuclideanDomainOfINS_7IntegerEEE
N8CryptoPP23AbstractEuclideanDomainINS_7IntegerEEE
N8CryptoPP7Integer12DivideByZeroE
N8CryptoPP3MD5E
N8CryptoPP13CFBDecryptionE
N8CryptoPP13CFBEncryptionE
N8CryptoPP12FeedBackModeE
N8CryptoPP12MessageQueueE
vector<bool>::_M_fill_insert
NonblockingRng: error reading from /dev/urandom
BlockingRng: error reading from /dev/random
NonblockingRng: could not open /dev/urandom
BlockingRng: could not open /dev/random
/dev/urandom
/dev/random
N8CryptoPP11BlockingRngE
N8CryptoPP14NonblockingRngE
N8CryptoPP10OS_RNG_ErrE
0!0\t
N8CryptoPP9ByteQueueE
N8CryptoPP9ByteQueue6WalkerE
N8CryptoPP10RandomPoolE
N8CryptoPP3MDCINS_3SHAEEE
N8CryptoPP14FixedBlockSizeILj20EEE
N8CryptoPP14FixedKeyLengthILj64EEE
N8CryptoPP18RijndaelDecryptionE
N8CryptoPP18RijndaelEncryptionE
N8CryptoPP21InvertibleRSAFunctionE
N8CryptoPP11RSAFunctionE
N8CryptoPP26InvertibleTrapdoorFunctionE
N8CryptoPP12ArrayXorSinkE
}\fUt]
\f$o,
vRQ>
\r8STs\ne
\njv.
LwH'
N8CryptoPP6SHA256E
N8CryptoPP3SHAE
N8CryptoPP17DERGeneralEncoderE
N8CryptoPP17BERGeneralDecoderE
P00`
}++V
=j&&LZ66lA??~
\44h
S11b?
e##F^
i''N
t,,X.
M;;va
}{))R>
q//^
`  @
gK99r
U33f
D<<x
!H88p
c!!B0
G==z
f""D~**T
V22dN::t
\fl$$H
Y77n
o%%Jr..\$
B>>|
_55j
x((Pz
)w--Z
T00`P
++V}
&&Lj66lZ??~A
O44h\
s11bS
R##Fe
&''Ni
,,Xt
6-nn
;;vM
))R{
>//^q
,  @`
99rKJJ
33fU
<<xD
88pH
u!!Bc
==zGdd
2+ss
""Df**T~
;22dV::tN\n\n
\f\n$$Hl\\
C77nYmm
%%Jo..\r
>!KK
>>|B
55j_WW
"3ii
((Px
--Zw
0`P0
g+V}+
&Lj&6lZ6?~A?
4h\4
1bS1
#Fe#
'Ni'
,Xt,
R;vM;
)R{)
/^q/
 @` 
9rK9J
M3fU3
P<xD<
8pH8
!Bc!
~=zG=d
"Df"*T~*
2dV2:tN:\n
$Hl$\
7nY7m
x%Jo%.\r.
p>|B>
a5j_5W
U(Px(
-Zw-
`P00
ggV}++
Lj&&lZ66~A??
h\44Q
bS11*?
Fe##
Ni''
Xt,,4.
RRvM;;
R{))
^q//
@`  
rK99
MMfU33
PPxD<<%
pH88
Bc!! 0
\f\f&5
DD.9
~~zG==
]]2+
Df""T~**;
dV22tN::
II\f\n
Hl$$
nY77
xxJo%%\r..8$
tt>!
pp|B>>q
aaj_55
UUPx((
Zw--
cccc||||wwww{{{{
kkkkoooo
0000
gggg++++
vvvv
}}}}
YYYYGGGG
rrrr
&&&&6666????
4444
qqqq
1111
####
''''
uuuu\t\t\t\t
,,,,
nnnnZZZZ
RRRR;;;;
))))
////
SSSS
    
[[[[jjjj
9999JJJJLLLLXXXX
CCCCMMMM3333
EEEE
PPPP<<<<
QQQQ
@@@@
8888
!!!!
\f\f\f\f
____
DDDD
~~~~====dddd]]]]
ssss````
OOOO
""""****
FFFF
^^^^\v\v\v\v
2222::::\n\n\n\nIIII
$$$$\\\\
bbbb
yyyy
7777mmmm
NNNN
llllVVVV
eeeezzzz
xxxx%%%%....
tttt
KKKK
pppp>>>>
ffffHHHH
aaaa5555WWWW
iiii
UUUU((((
\r\r\r\r
BBBBhhhhAAAA
----
TTTT
QSeA~
!tX)i
XhHp
yG\n|
NrZl
='9-6d
:.6$
aiKwZ
;fD4~
[v)C
cB@"
_jbF~T
11#?*0
,4$8_@
I<(A
t\lHBW
QPeA~S
0 Umv
-!tX
SbEwd
hHpX
Uf*(
+2Hp
rZlN
9-6'
\h!T[
.6$:g\n\f
KwZi
[4)C
F~Tb
#?*1
_[o=
>4$8,@
\fI<(
p\lHtW
A~Se
`3SbE
+HpXhE
G\nB|
pZlNr
-6'9
T6$:.\n\f
 wZiK
*"<C
[4~C
~TbF
\txYn
?*1#
fNt7
$8,4
\f%<(
lHt\
BWQP
~SeA
!tI)i
k>X'
`3QbE
pXhH
C@gw
G\n||
lNrZ
6'9-\nd
T[$:.6\f
ZiKw
;f[4~
_TbF~
\tx&n
*1#?
h8,4$
2Ht\l
RRRR\t\t\t\tjjjj
00006666
8888
@@@@
||||
9999
////
4444
CCCCDDDD
TTTT{{{{
2222
####====
LLLL
\v\v\v\vBBBB
NNNN
....
ffff((((
$$$$
vvvv[[[[
IIIImmmm
%%%%rrrr
dddd
hhhh
\\\\
]]]]eeee
llllppppHHHHPPPP
^^^^
FFFFWWWW
\n\n\n\n
XXXX
EEEE
,,,,
????
kkkk::::
AAAAOOOOgggg
ssss
tttt""""
5555
7777
uuuu
nnnnGGGG
qqqq
))))
oooo
bbbb
VVVV>>>>KKKK
yyyy    
xxxx
ZZZZ
3333
1111
YYYY''''
____````QQQQ
JJJJ\r\r\r\r----
zzzz
;;;;MMMM
****
<<<<
SSSS
aaaa
++++
~~~~
wwww
&&&&
iiii
ccccUUUU!!!!\f\f\f\f}}}}
61.1.4
 n;^
Qkkbal
3_L\n
>jm\r
Zjz\v
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
\t\t\n\n\v\v\f\f\f\f\r\r\r\r
need dictionary
stream end
file error
stream error
data error
insufficient memory
buffer error
incompatible version
unknown compression method
invalid window size
incorrect header check
incorrect data check
invalid block type
invalid stored block lengths
invalid bit length repeat
too many length or distance symbols
oversubscribed dynamic bit lengths tree
incomplete dynamic bit lengths tree
oversubscribed literal/length tree
incomplete literal/length tree
empty distance tree with lengths
oversubscribed distance tree
incomplete distance tree
 inflate 1.1.4 Copyright 1995-2002 Mark Adler 
invalid literal/length code
invalid distance code
\r`w\n
false
true
\steamapps\
__CTOR_LIST__
__DTOR_LIST__
__JCR_LIST__
__do_global_dtors_aux
completed.5819
dtor_idx.5821
frame_dummy
__CTOR_END__
__FRAME_END__
__JCR_END__
__do_global_ctors_aux
global constructors keyed to _I_CommonAsserts.cpp
(anonymous namespace)::s_EarlyForcedInstantiationOfDefaultAssertCatcherInstance
arg::grin_ptr<common::CLogContext::TLogContextImpl>::~grin_ptr() (.clone.4)
arg::grin_ptr<common::CLogGroup::TLogGroupImpl>::~grin_ptr() (.clone.7)
arg::grin_ptr<common::CLog::TLogImpl>::~grin_ptr() (.clone.12)
arg::grin_ptr<common::CLogFile::TLogFileImpl>::~grin_ptr() (.clone.2)
global constructors keyed to _I_LogFile.cpp
std::__ioinit
guard variable for common::CBlobRegistry::InitImpl(std::string const&, bool, bool)::sFailedToOpen
common::CBlobRegistry::InitImpl(std::string const&, bool, bool)::sFailedToOpen
global constructors keyed to _I_BlobRegistry.cpp
(anonymous namespace)::s_pSingletonConfigDatabase
global constructors keyed to _I_ConfigDatabase.cpp
global constructors keyed to _I_ConfigTree.cpp
std::_Vector_base<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>::_M_deallocate(common::CThreadSafeCountedPtr<common::IEventLoopFunctor>*, unsigned int) (.clone.40)
std::_Vector_base<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>, std::allocator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>::_M_deallocate(std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>*, unsigned int) (.clone.53)
global constructors keyed to _I_EventLoopThread.cpp
FindNode(char const*, unsigned short)
common::CFileUtil::GetCurrentExeDirPath()::szFoundPath
common::CFileUtil::IsLegalFileOrDirName(std::string const&)::s_ReservedNames
global constructors keyed to _I_FileUtil.cpp
(anonymous namespace)::DeleteFileHelper(bool&, char const*)
common::CMultiFieldBlob::GetSizeOfSerializedBlobInBlobHeader() (.clone.8)
common::CMultiFieldBlob::GetSizeOfSpareCapacityInBlobHeader() (.clone.10)
common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName::operator()(common::CMultiFieldBlob::TFieldHeaderOffset const&, common::CMultiFieldBlob::TFieldHeaderOffset const&) (.clone.15)
CryptoPP::HMAC<CryptoPP::SHA>::HMAC(unsigned char const*, unsigned int) (.clone.122)
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob const&) (.clone.120)
global constructors keyed to _I_MultiFieldBlob.cpp
.L1123
.L1316
.L953
.L954
.L955
.L956
.L957
.L1125
.L1126
.L1127
.L1128
.L1129
.L1318
.L1319
.L1320
.L1321
.L1988
.L1989
.L1990
.L1991
bool common::GetNextTokenAllowQuotedWhitespace<std::vector<std::string, std::allocator<std::string>>>(std::vector<std::string, std::allocator<std::string>>&, char const*&, char const*, char const*) (.clone.122)
(anonymous namespace)::cszWhitespaceDelimeters
global constructors keyed to _I_NamedArgs.cpp
__tcf_0
global constructors keyed to _I_Registry.cpp
global constructors keyed to _I_SimpleBitString.cpp
guard variable for common::CStringTable::Instance()::s_tsrcpInstance
guard variable for common::CStringTable::Instance()::s_SingletonLock
common::CStringTable::Instance()::bAtomicAccessCreatedFlag
common::CStringTable::Instance()::s_tsrcpInstance
common::CStringTable::Instance()::s_SingletonLock
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::_M_insert_unique(std::pair<unsigned int const, common::CCountedPtr<std::string>> const&) (.clone.99)
(anonymous namespace)::s_CurrentThreadDescription
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::pair<unsigned int const, common::CCountedPtr<std::string>> const&) (.clone.97)
CSWTCH.172
guard variable for common::CThreadLocalRegistrar::Instance()::s_Instance
common::CThreadLocalRegistrar::Instance()::s_Instance
global constructors keyed to _I_Thread.cpp
global constructors keyed to _I_ThreadSafeAutoSeededRandomPoolSingleton.cpp
common::CThreadSafeAutoSeededRandomPoolSingleton::Instance()::s_ThreadSafeAutoSeededRandomPoolSingelton
guard variable for common::CThreadSafeAutoSeededRandomPoolSingleton::Instance()::s_ThreadSafeAutoSeededRandomPoolSingelton
__gnu_cxx::__stl_prime_list
(anonymous namespace)::s_cHexNibbleASCIIAry
global constructors keyed to _I_XMLHelperFunctions.cpp
common::StartConnectToServer(common::CIPAddrPort const&, int, common::CIPAddrPort const*) (.clone.126)
bool common::GetNextTokenAllowQuotedWhitespace<std::vector<std::string, std::allocator<std::string>>>(std::vector<std::string, std::allocator<std::string>>&, char const*&, char const*, char const*) (.clone.124)
szUsersKey
szAppsKey
szCachesKey
global constructors keyed to _I_ClientRegistry.cpp
(anonymous namespace)::RegistrySingleton(bool)
guard variable for (anonymous namespace)::RegistrySingleton(bool)::s_pRegistry
guard variable for (anonymous namespace)::RegistrySingleton(bool)::s_SingletonLock
(anonymous namespace)::RegistrySingleton(bool)::s_pRegistry
(anonymous namespace)::RegistrySingleton(bool)::s_SingletonLock
global constructors keyed to _I_InstallPath.cpp
guard variable for Grid::CInstallPath::UniverseName()::s_Universe
guard variable for Grid::CInstallPath::UniverseName()::s_SingletonLock
Grid::CInstallPath::UniverseName()::s_Universe
Grid::CInstallPath::UniverseName()::s_SingletonLock
guard variable for Grid::CInstallPath::Instance()::s_InstallPath
guard variable for Grid::CInstallPath::Instance()::s_SingletonLock
Grid::CInstallPath::Instance()::s_InstallPath
Grid::CInstallPath::Instance()::s_SingletonLock
global constructors keyed to _I_ManifestElement.cpp
common::CSemaphore::~CSemaphore() (.clone.4)
global constructors keyed to _I_CachedContentDescriptionDBRecord.cpp
global constructors keyed to _I_ClientAuthenticationTickets.cpp
.L1014
.L1015
.L1016
.L1017
.L1018
.L1019
.L1020
.L1021
.L1022
.L1023
.L1024
.L1025
.L1026
.L1027
.L1028
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.45)
global constructors keyed to _I_ClientConfigDBKeyRecord.cpp
(anonymous namespace)::CConfigServerIPAddressCache::SetStatusObject(common::CCommandStatusControl*)
ObjScopeGuardImpl1<(anonymous namespace)::CConfigServerIPAddressCache, void ((anonymous namespace)::CConfigServerIPAddressCache::*)(common::CCommandStatusControl*), common::CCommandStatusControl*>::ExecuteNowIfNotDismissed() const
ObjScopeGuardImpl0<(anonymous namespace)::CConfigServerIPAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
(anonymous namespace)::CConfigServerIPAddressCache::GetStoreToBlobRegistryValueName()
(anonymous namespace)::CConfigServerIPAddressCache::~CConfigServerIPAddressCache()
vtable for (anonymous namespace)::CConfigServerIPAddressCache
(anonymous namespace)::CConfigServerIPAddressCache::~CConfigServerIPAddressCache()
(anonymous namespace)::CConfigServerIPAddressCache::~CConfigServerIPAddressCache()
(anonymous namespace)::CConfigServerIPAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
(anonymous namespace)::ConnectToConfigServerWithIPAddrPort(common::CIPAddrPort const&, common::CCommandStatusControl*)
(anonymous namespace)::ConnectAndVerifyProtocolVersion(common::CIPAddrPort const&, common::CWSABUFWrapper&, common::CCommandStatusControl*)
(anonymous namespace)::s_ConfigServerIPAddressCache
vtable for ObjScopeGuardImpl0<(anonymous namespace)::CConfigServerIPAddressCache, void (Grid::IServerAddressCache::*)()>
vtable for ObjScopeGuardImpl1<(anonymous namespace)::CConfigServerIPAddressCache, void ((anonymous namespace)::CConfigServerIPAddressCache::*)(common::CCommandStatusControl*), common::CCommandStatusControl*>
global constructors keyed to _I_ConfigServerClientCommands.cpp
typeinfo for (anonymous namespace)::CConfigServerIPAddressCache
typeinfo for ObjScopeGuardImpl1<(anonymous namespace)::CConfigServerIPAddressCache, void ((anonymous namespace)::CConfigServerIPAddressCache::*)(common::CCommandStatusControl*), common::CCommandStatusControl*>
typeinfo for ObjScopeGuardImpl0<(anonymous namespace)::CConfigServerIPAddressCache, void (Grid::IServerAddressCache::*)()>
typeinfo name for (anonymous namespace)::CConfigServerIPAddressCache
typeinfo name for ObjScopeGuardImpl1<(anonymous namespace)::CConfigServerIPAddressCache, void ((anonymous namespace)::CConfigServerIPAddressCache::*)(common::CCommandStatusControl*), common::CCommandStatusControl*>
typeinfo name for ObjScopeGuardImpl0<(anonymous namespace)::CConfigServerIPAddressCache, void (Grid::IServerAddressCache::*)()>
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.102)
common::CMultiFieldBlob::index_iterator_impl::GetSizeOfFieldData() const (.clone.17)
void common::OutputXMLElement<unsigned int>(char const*, unsigned int const&, std::ostream&, unsigned int) (.clone.53)
void common::OutputXMLElement<bool>(char const*, bool const&, std::ostream&, unsigned int) (.clone.55)
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::_M_mutate(unsigned int, unsigned int, unsigned int) (.clone.141)
common::CMultiFieldBlob::index_iterator_impl::FindFieldData(unsigned int*) const (.clone.18)
common::CMultiFieldBlob::index_iterator_impl::GetFieldDataAsCString() const (.clone.37)
common::CMultiFieldBlob::index_iterator_impl::GetNumericFieldName() const (.clone.35)
global constructors keyed to _I_ContentDescriptionDBKeyRecord.cpp
.L1248
.L1743
.L1855
.L1944
.L1249
.L1250
.L1251
.L1252
.L1253
.L1254
.L1255
.L1256
.L1257
.L1258
.L1259
.L1260
.L1261
.L1262
.L1263
.L1264
.L1265
.L1266
.L1267
.L1268
.L1269
.L1270
.L1285
.L1399
.L1287
.L1288
.L1289
.L1290
.L1291
.L1292
.L1293
.L1294
.L1744
.L1745
.L1746
.L1747
.L1748
.L1749
.L1750
.L1751
.L1856
.L1857
.L1858
.L1859
.L1860
.L1861
.L1862
.L1945
.L1946
.L1947
.L1948
.L1949
.L1950
.L1951
.L1952
.L1953
.L1954
.L1955
.L1956
.L1957
.L1958
.L1959
.L1960
.L1961
.L1962
.L1963
.L1964
.L1965
.L1966
.L2570
.L2571
.L2572
.L2573
.L2574
.L2575
.L2576
ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
(anonymous namespace)::CCSDSIPAddressCache::GetStoreToBlobRegistryValueName()
(anonymous namespace)::CCSDSIPAddressCache::~CCSDSIPAddressCache()
vtable for (anonymous namespace)::CCSDSIPAddressCache
(anonymous namespace)::CCSDSIPAddressCache::~CCSDSIPAddressCache()
(anonymous namespace)::CCSDSIPAddressCache::~CCSDSIPAddressCache()
ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
vtable for ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>
ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
(anonymous namespace)::CCSDSIPAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
(anonymous namespace)::s_CSDSIPAddressCache
(anonymous namespace)::WrappedFindBestPublicContentIPAddrPorts(common::CIPAddrPort const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, unsigned short, unsigned int, common::CCommandStatusControl*, bool)
(anonymous namespace)::WrappedFindBestClientContentIPAddrPorts(common::CIPAddrPort const&, std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>*, unsigned short, unsigned int, unsigned int, unsigned int, unsigned int, common::CCommandStatusControl*)
guard variable for (anonymous namespace)::WrappedFindBestClientContentIPAddrPorts(common::CIPAddrPort const&, std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>*, unsigned short, unsigned int, unsigned int, unsigned int, unsigned int, common::CCommandStatusControl*)::uMaxNumServersRequested
(anonymous namespace)::WrappedFindBestClientContentIPAddrPorts(common::CIPAddrPort const&, std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>*, unsigned short, unsigned int, unsigned int, unsigned int, unsigned int, common::CCommandStatusControl*)::uMaxNumServersRequested
global constructors keyed to _I_ContentServerDirectoryServerCommands.cpp
typeinfo for (anonymous namespace)::CCSDSIPAddressCache
typeinfo for ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>
typeinfo name for (anonymous namespace)::CCSDSIPAddressCache
typeinfo name for ObjScopeGuardImpl0<(anonymous namespace)::CCSDSIPAddressCache, void (Grid::IServerAddressCache::*)()>
guard variable for Grid::CCSERServerAddressCache::Instance()::s_pCache
guard variable for Grid::CCSERServerAddressCache::Instance()::s_SingletonLock
Grid::CCSERServerAddressCache::Instance()::s_pCache
Grid::CCSERServerAddressCache::Instance()::s_SingletonLock
(anonymous namespace)::RunGeneralDirectoryServerCommand(Grid::EClientToGeneralDirectoryServerProtocolCommands, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*, unsigned char const*, unsigned int)
global constructors keyed to _I_ManifestBin.cpp
.L345
.L346
.L347
.L348
.L349
.L350
.L351
.L352
.L353
.L354
.L355
.L356
global constructors keyed to _I_NewValveCDKeyGenerator.cpp
(anonymous namespace)::s_uClientLocalIPAddress
(anonymous namespace)::s_szClientLocalIPAddrValueName
(anonymous namespace)::s_uClientExternalIPAddress
(anonymous namespace)::s_szClientExternalIPAddrReceivedFromASValueName
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.89)
void common::OutputXMLElement<Grid::CShippingInfoRecord::ENumericFieldIds>(char const*, Grid::CShippingInfoRecord::ENumericFieldIds const&, std::ostream&, unsigned int) (.clone.44)
void common::OutputXMLElement<unsigned int>(char const*, unsigned int const&, std::ostream&, unsigned int) (.clone.45)
void common::OutputXMLElement<Grid::CAccountPaymentCardInfoRecord::ENumericFieldIds>(char const*, Grid::CAccountPaymentCardInfoRecord::ENumericFieldIds const&, std::ostream&, unsigned int) (.clone.51)
void common::OutputXMLElement<ESteamPaymentCardType>(char const*, ESteamPaymentCardType const&, std::ostream&, unsigned int) (.clone.50) (.clone.90)
common::CMultiFieldBlob::index_iterator_impl::GetFieldDataAsCString() const (.clone.32)
Grid::CAccountPaymentCardInfoRecord::CAccountPaymentCardInfoRecord(common::CMultiFieldBlob::index_iterator const&, unsigned char const*, bool) (.clone.112)
global constructors keyed to _I_SubscriberAccountDBKeyRecord.cpp
.L1211
.L2141
.L2494
.L994
.L995
.L996
.L997
.L998
.L999
.L1000
.L1001
.L1044
.L1045
.L1046
.L1047
.L1048
.L1049
.L1050
.L1051
.L1052
.L1053
.L1054
.L1055
.L1056
.L1057
.L1058
.L1059
.L1060
.L1212
.L1213
.L1214
.L1215
.L1216
.L1514
.L1515
.L1516
.L1517
.L1518
.L1519
.L1520
.L1521
.L1522
.L1523
.L1524
.L1525
.L1526
.L1527
.L1528
.L1529
.L1530
.L1531
.L1669
.L1670
.L1671
.L1672
.L1673
.L1674
.L1675
.L1676
.L1677
.L1678
.L1679
.L1680
.L1681
.L1682
.L1683
.L1684
.L1685
.L1686
.L1687
.L1688
.L1689
.L1690
.L1691
.L1692
.L1693
.L1694
.L1695
.L1696
.L1697
.L1698
.L1699
.L1700
.L1701
.L1702
.L1703
.L1704
.L1705
.L1706
.L1707
.L1708
.L1709
.L1710
.L1711
.L1712
.L1713
.L1714
.L1715
.L1872
.L1873
.L1874
.L1869
.L1875
.L1876
.L1877
.L1878
.L2111
.L2112
.L2113
.L2114
.L2115
.L2116
.L2117
.L2118
.L2422
.L2423
.L2424
.L2425
.L2426
.L2427
.L2428
.L2429
.L2430
.L2431
.L2432
.L2433
.L2434
.L2435
.L2436
global constructors keyed to _I_VerifyDataSignedWithSteamMasterKey.cpp
(anonymous namespace)::s_mbSteamMasterRSAPublicKey
(anonymous namespace)::s_DecodedKeyLock
g_bCatchExceptionsInCallbacks
CCallbackMgr::RunCallbacks(int, bool)::bRunningCallbacks
s_bCallbackManagerInitialized
guard variable for GCallbackMgr()::s_CallbackMgr
GCallbackMgr()::s_CallbackMgr
g_SteamAPIContext
s_SteamClientDLL
s_SteamDLL
global constructors keyed to _I_steam_api.cpp
std::string::assign(char const*) (.clone.66)
(anonymous namespace)::s_ErrorString
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::operator=(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&) (.clone.69)
(anonymous namespace)::s_vGDSIps
(anonymous namespace)::TAddressFetchInfo::~TAddressFetchInfo()
(anonymous namespace)::TAddressFetchInfo::~TAddressFetchInfo()
(anonymous namespace)::Init()
(anonymous namespace)::s_Initialised
(anonymous namespace)::s_Mutex
(anonymous namespace)::s_HL2MSAddresses
(anonymous namespace)::s_CSERServerAddresses
(anonymous namespace)::s_FriendsAddresses
(anonymous namespace)::s_HLMSAddresses
(anonymous namespace)::s_VCDSAddresses
(anonymous namespace)::s_RDKFMSAddresses
global constructors keyed to _I_FindSteamServers.cpp
.L220
.L221
.L222
.L223
.L224
.L225
.L313
.L314
.L315
.L316
.L317
.L318
(anonymous namespace)::InternalSteamWeakVerifyNewValveCDKey(char const*, unsigned int*, unsigned int*, unsigned int*)
(anonymous namespace)::InternalSteamGetEncryptedNewValveCDKey(char const*, unsigned int, void const*, unsigned int, void*, unsigned int, unsigned int*) (.clone.21)
global constructors keyed to _I_ValidateNewValveCDKeyClient.cpp
std::_Vector_base<std::string, std::allocator<std::string>>::_M_deallocate(std::string*, unsigned int) (.clone.215)
std::_Vector_base<common::CThreadSafeCountedPtr<common::CThread>, std::allocator<common::CThreadSafeCountedPtr<common::CThread>>>::_M_deallocate(common::CThreadSafeCountedPtr<common::CThread>*, unsigned int) (.clone.261)
std::_Vector_base<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::_M_deallocate(Grid::TAppFilesystemInfo*, unsigned int) (.clone.274)
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.609)
common::CMultiFieldBlob::FindFieldData(unsigned int, unsigned int*, common::CMultiFieldBlob::index_iterator*) (.clone.601)
common::CMultiFieldBlob::GetFieldDataAsStdString(unsigned short, unsigned char const*, common::CMultiFieldBlob::index_iterator*) (.clone.645)
common::CMultiFieldBlob::GetFieldDataAsStdString(char const*, common::CMultiFieldBlob::index_iterator*) (.clone.663)
common::CMultiFieldBlob::GetFieldDataAsCString(unsigned short, unsigned char const*, common::CMultiFieldBlob::index_iterator*) (.clone.649)
std::string BSL::I2STemplate<std::string, unsigned int>(unsigned int, int, int) (.clone.651)
std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::vector(std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&) (.clone.487)
common::CThreadSafeCountedPtr<common::IFunctor> common::MakeObjFunctor<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>(Grid::CAccount::CImpl&, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int) (.clone.622)
guard variable for Grid::CAccount::CImpl::GetBetaPassword(unsigned int)::sBetaRegKeyPublic
guard variable for Grid::CAccount::CImpl::GetBetaPassword(unsigned int)::sBetaRegKeyInternal
Grid::CAccount::CImpl::GetBetaPassword(unsigned int)::sBetaRegKeyInternal
Grid::CAccount::CImpl::GetBetaPassword(unsigned int)::sBetaRegKeyPublic
Grid::CAccount::CImpl::GetAppCurrentVersion(unsigned int, std::string*)::bCheckedForInhibitFlag
Grid::CAccount::CImpl::GetAppCurrentVersion(unsigned int, std::string*)::u32Value
Grid::CAccount::CImpl::GetAppCurrentVersion(unsigned int, std::string*) (.clone.618)
Grid::CAccount::CImpl::SetAppCurrentVersion(common::CCommandStatusControl&, unsigned int, unsigned int) (.clone.664)
global constructors keyed to _I_Account.cpp
Grid::CAccount::GetAppFilesystemInfo(unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>&, bool*, bool) (.clone.621)
CSWTCH.1322
guard variable for Grid::CActivityLog::CreateNewContext(char const*, common::CLogGroup*)::uPrefixLen
Grid::CActivityLog::CreateNewContext(char const*, common::CLogGroup*)::uPrefixLen
Grid::CActivityLog::CreateNewContext(char const*, common::CLogGroup*)::cszPrefix
guard variable for Grid::CActivityLog::CreateNewGroup(char const*)::uPrefixLen
Grid::CActivityLog::CreateNewGroup(char const*)::uPrefixLen
Grid::CActivityLog::CreateNewGroup(char const*)::cszPrefix
Grid::CActivityLog::CActivityLog(bool, bool, char const*, common::CLogFile::FileMode, common::CLogFile::FileLogMode)::cszDisable
Grid::CActivityLog::CActivityLog(bool, bool, char const*, common::CLogFile::FileMode, common::CLogFile::FileLogMode)::cszEnable
guard variable for Grid::CActivityLog::Instance()::s_pSingletonActivityLog
guard variable for Grid::CActivityLog::Instance()::s_SingletonLock
Grid::CActivityLog::Instance()::s_pSingletonActivityLog
Grid::CActivityLog::Instance()::s_SingletonLock
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.240)
(anonymous namespace)::s_sCacheMountPathsUsedValueName
global constructors keyed to _I_AppStatus.cpp
guard variable for Grid::CAppStatus::GetOrDestroyInstance(bool)::s_pAppStatusInstance
guard variable for Grid::CAppStatus::GetOrDestroyInstance(bool)::s_SingletonLock
Grid::CAppStatus::GetOrDestroyInstance(bool)::s_pAppStatusInstance
Grid::CAppStatus::GetOrDestroyInstance(bool)::s_SingletonLock
(anonymous namespace)::CMasterAuthenticationServerAddressCache::GetStoreToBlobRegistryValueName()
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::GetStoreToBlobRegistryValueName()
ObjScopeGuardImpl0<(anonymous namespace)::CMasterAuthenticationServerAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
common::ICloneableException::ICloneableException(char const*, bool) (.clone.388)
(anonymous namespace)::DoAbort(int)
(anonymous namespace)::CMasterAuthenticationServerAddressCache::~CMasterAuthenticationServerAddressCache()
vtable for (anonymous namespace)::CMasterAuthenticationServerAddressCache
(anonymous namespace)::CMasterAuthenticationServerAddressCache::~CMasterAuthenticationServerAddressCache()
(anonymous namespace)::CMasterAuthenticationServerAddressCache::~CMasterAuthenticationServerAddressCache()
(anonymous namespace)::s_SlaveAuthenticationServerIPAddressCache
common::CMultiFieldBlob::GetFieldDataAsStdString(unsigned short, unsigned char const*, common::CMultiFieldBlob::index_iterator*) (.clone.420)
(anonymous namespace)::CMasterAuthenticationServerAddressCache::InsideMutexStoreListOfAddresses()
CryptoPP::HMAC<CryptoPP::SHA>::HMAC(unsigned char const*, unsigned int) (.clone.407)
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::InsideMutexFetchListOfAddresses()
(anonymous namespace)::CMasterAuthenticationServerAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
(anonymous namespace)::CMasterAuthenticationServerAddressCache::InsideMutexFetchListOfAddresses()
(anonymous namespace)::s_MasterAuthenticationServerIPAddressCache
vtable for ObjScopeGuardImpl0<(anonymous namespace)::CMasterAuthenticationServerAddressCache, void (Grid::IServerAddressCache::*)()>
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::~CSlaveAuthenticationServerAddressCache()
vtable for (anonymous namespace)::CSlaveAuthenticationServerAddressCache
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::~CSlaveAuthenticationServerAddressCache()
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::~CSlaveAuthenticationServerAddressCache()
(anonymous namespace)::CSlaveAuthenticationServerAddressCache::InsideMutexStoreListOfAddresses()
common::CWSABUFWrapper::CWSABUFWrapper(unsigned int, unsigned int) (.clone.395)
(anonymous namespace)::AuthenticateAndRequestTGT(std::string const&, std::string const&, std::string const&, BSL::CTime*, BSL::CTime*, common::CMallocedBlock*, common::CCommandStatusControl*)
global constructors keyed to _I_AuthenticationServerCommands.cpp
typeinfo for (anonymous namespace)::CMasterAuthenticationServerAddressCache
typeinfo for (anonymous namespace)::CSlaveAuthenticationServerAddressCache
typeinfo for ObjScopeGuardImpl0<(anonymous namespace)::CMasterAuthenticationServerAddressCache, void (Grid::IServerAddressCache::*)()>
typeinfo name for (anonymous namespace)::CMasterAuthenticationServerAddressCache
typeinfo name for (anonymous namespace)::CSlaveAuthenticationServerAddressCache
typeinfo name for ObjScopeGuardImpl0<(anonymous namespace)::CMasterAuthenticationServerAddressCache, void (Grid::IServerAddressCache::*)()>
.L3368
.L3369
.L3370
.L3371
global constructors keyed to _I_BinaryLogFile.cpp
global constructors keyed to _I_BufferTable.cpp
global constructors keyed to _I_BuildContentServerLoginMessage.cpp
guard variable for Grid::CValidationLogger::Instance()::s_pSingletonValidationLog
guard variable for Grid::CValidationLogger::Instance()::s_SingletonValidatorLock
Grid::CValidationLogger::Instance()::s_SingletonValidatorLock
Grid::CValidationLogger::Instance()::s_pSingletonValidationLog
global constructors keyed to _I_Cache.cpp
global constructors keyed to _I_CacheFileFixedBatBlock.cpp
global constructors keyed to _I_CacheFileFixedChecksumBlock.cpp
global constructors keyed to _I_CacheFileFixedDataBlock.cpp
global constructors keyed to _I_CacheFileFixedDescBlock.cpp
CSWTCH.226
global constructors keyed to _I_CacheFileFixedDirectory.cpp
global constructors keyed to _I_CacheFileFixedFsTreeBlock.cpp
std::_Vector_base<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>::_M_deallocate(Grid::CCacheGroup::TCacheGroupEntry*, unsigned int) (.clone.102)
global constructors keyed to _I_CacheGroup.cpp
common::CSemaphore::~CSemaphore() (.clone.14)
Grid::CCacheManifestOnly::CImpl::FlushFile(Grid::CManifestIterator&, Grid::CManifestIterator*) (.clone.204)
global constructors keyed to _I_CacheManifestOnly.cpp
global constructors keyed to _I_CacheNone.cpp
std::_Rb_tree<std::string, std::pair<std::string const, (anonymous namespace)::TPackFileElem>, std::_Select1st<std::pair<std::string const, (anonymous namespace)::TPackFileElem>>, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TPackFileElem>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, (anonymous namespace)::TPackFileElem> const&)
common::CSemaphore::~CSemaphore() (.clone.82)
Grid::CCacheOneFileFixedBlock::CImpl::SwapBlock(unsigned int, unsigned int, std::vector<(anonymous namespace)::TBatInfo, std::allocator<(anonymous namespace)::TBatInfo>>&, unsigned char*, unsigned char*) (.clone.151)
Grid::ICache::CCorruptionException::CCorruptionException(common::CErrorCodeException::ESpecificType) (.clone.385)
std::_Rb_tree<std::string, std::pair<std::string const, (anonymous namespace)::TPackFileElem>, std::_Select1st<std::pair<std::string const, (anonymous namespace)::TPackFileElem>>, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TPackFileElem>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, (anonymous namespace)::TPackFileElem>>*)
Grid::CCacheOneFileFixedBlock::CImpl::FindPackFiles(std::string const&, std::string const&, std::vector<(anonymous namespace)::TPackFile, std::allocator<(anonymous namespace)::TPackFile>>&)
global constructors keyed to _I_CacheOneFileFixedBlock.cpp
std::_Vector_base<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::_M_deallocate(Grid::TRequestInfo_t*, unsigned int) (.clone.50)
global constructors keyed to _I_CachePreLoader.cpp
std::list<(anonymous namespace)::TFastQueueElement, std::allocator<(anonymous namespace)::TFastQueueElement>>::~list()
std::list<(anonymous namespace)::TFastQueueElement, std::allocator<(anonymous namespace)::TFastQueueElement>>::~list()
std::list<(anonymous namespace)::CCacheQueueBuffer, std::allocator<(anonymous namespace)::CCacheQueueBuffer>>::~list()
std::list<(anonymous namespace)::CCacheQueueBuffer, std::allocator<(anonymous namespace)::CCacheQueueBuffer>>::~list()
(anonymous namespace)::CQueueExceptionHolder::~CQueueExceptionHolder()
vtable for (anonymous namespace)::CQueueExceptionHolder
(anonymous namespace)::CQueueExceptionHolder::~CQueueExceptionHolder()
(anonymous namespace)::CQueueExceptionHolder::~CQueueExceptionHolder()
std::list<(anonymous namespace)::TQueueElement, std::allocator<(anonymous namespace)::TQueueElement>>::~list()
std::list<(anonymous namespace)::TQueueElement, std::allocator<(anonymous namespace)::TQueueElement>>::~list()
global constructors keyed to _I_CacheQueueManager.cpp
Grid::CCacheQueueManager::CImpl::InternalRemoveItem(std::_List_iterator<(anonymous namespace)::TQueueElement>&)
Grid::CCacheQueueManager::CImpl::CompleteRequestIfDone(std::_List_iterator<(anonymous namespace)::TQueueElement>&)
typeinfo for (anonymous namespace)::CQueueExceptionHolder
typeinfo name for (anonymous namespace)::CQueueExceptionHolder
global constructors keyed to _I_CacheReplacementLru.cpp
global constructors keyed to _I_ClientClockSkew.cpp
(anonymous namespace)::s_Lock
(anonymous namespace)::s_ClientClockSkew
(anonymous namespace)::s_sRegistryValueName
(anonymous namespace)::s_bLoadedFromRegistry
global constructors keyed to _I_ClientRegistryName.cpp
(anonymous namespace)::CNullOperation::~CNullOperation()
(anonymous namespace)::CNullOperation::~CNullOperation()
(anonymous namespace)::CNullOperation::DoAbort()
(anonymous namespace)::CNullOperation::AbortCompleted()
(anonymous namespace)::ICommandBase::~ICommandBase()
vtable for (anonymous namespace)::ICommandBase
(anonymous namespace)::ICommandBase::~ICommandBase()
(anonymous namespace)::CCommandThread::SetThread(common::CThread*)
(anonymous namespace)::CCommandThread::DoAbort()
(anonymous namespace)::CUninstallCommand::~CUninstallCommand()
(anonymous namespace)::CUninstallCommand::~CUninstallCommand()
(anonymous namespace)::CCommandThread::GetCommandName()
(anonymous namespace)::CCommandThread::GetDescription()
(anonymous namespace)::CUninstallCommand::~CUninstallCommand()
(anonymous namespace)::ICommandBase::~ICommandBase()
(anonymous namespace)::CNullOperation::~CNullOperation()
(anonymous namespace)::CNullOperation::GetCommandName()
(anonymous namespace)::CNullOperation::GetDescription()
(anonymous namespace)::CUninstallCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CCommandThread::AbortCompleted()
(anonymous namespace)::CNullOperation::SetThread(common::CThread*)
(anonymous namespace)::CNullOperation::DoThreadedCommand()
(anonymous namespace)::CSetAppVersionCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRefreshAccountInfoCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CLaunchCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CUpdateSubscriptionBillingInfoCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CUpdateAccountBillingInfoCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CChangeAccountNameCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRequestEmailAddressVerificationEmailCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CVerifyEmailAddressCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CChangeEmailAddressCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CChangePersonalQACommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CChangePasswordCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CGetNumAccountsWithEmailAddressCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRequestAccountsByCdKeyEmailCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRequestForgottenPasswordEmailCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CChangeForgottenPasswordCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CAckSubscriptionReceiptCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CUnsubscribeCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CSubscribeCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CSetUser2Command::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CSetUserCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CCreateCachePreloadersCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CLogoutCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CDeleteAccountCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CIsAccountNameInUseCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CCreateAccountCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CNullOperation::DoProcess(TSteamProgress*, unsigned int, unsigned int*)
(anonymous namespace)::CIsAccountNameInUseCommand::~CIsAccountNameInUseCommand()
vtable for (anonymous namespace)::CIsAccountNameInUseCommand
(anonymous namespace)::CRequestForgottenPasswordEmailCommand::~CRequestForgottenPasswordEmailCommand()
vtable for (anonymous namespace)::CRequestForgottenPasswordEmailCommand
(anonymous namespace)::CRequestAccountsByCdKeyEmailCommand::~CRequestAccountsByCdKeyEmailCommand()
vtable for (anonymous namespace)::CRequestAccountsByCdKeyEmailCommand
(anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand::~CRequestAccountsByEmailAddressEmailCommand()
vtable for (anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand
(anonymous namespace)::CGetNumAccountsWithEmailAddressCommand::~CGetNumAccountsWithEmailAddressCommand()
vtable for (anonymous namespace)::CGetNumAccountsWithEmailAddressCommand
(anonymous namespace)::CGenerateSuggestedAccountNamesCommand::~CGenerateSuggestedAccountNamesCommand()
vtable for (anonymous namespace)::CGenerateSuggestedAccountNamesCommand
(anonymous namespace)::CRefreshLoginCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CLoginCommand::DoCommand(common::CCommandStatusControl&)
std::deque<Grid::ICommandState*, std::allocator<Grid::ICommandState*>>::_M_reallocate_map(unsigned int, bool) (.clone.256)
(anonymous namespace)::CChangeForgottenPasswordCommand::~CChangeForgottenPasswordCommand()
vtable for (anonymous namespace)::CChangeForgottenPasswordCommand
(anonymous namespace)::CCreateAccountCommand::~CCreateAccountCommand()
vtable for (anonymous namespace)::CCreateAccountCommand
(anonymous namespace)::CSetAppVersionCommand::~CSetAppVersionCommand()
vtable for (anonymous namespace)::CSetAppVersionCommand
(anonymous namespace)::CSetAppVersionCommand::~CSetAppVersionCommand()
(anonymous namespace)::CSetAppVersionCommand::~CSetAppVersionCommand()
(anonymous namespace)::CSetAppCacheSizeCommand::~CSetAppCacheSizeCommand()
vtable for (anonymous namespace)::CSetAppCacheSizeCommand
(anonymous namespace)::CSetAppCacheSizeCommand::~CSetAppCacheSizeCommand()
(anonymous namespace)::CGetAppUpdateStatsCommand::~CGetAppUpdateStatsCommand()
vtable for (anonymous namespace)::CGetAppUpdateStatsCommand
(anonymous namespace)::CGetAppUpdateStatsCommand::~CGetAppUpdateStatsCommand()
(anonymous namespace)::CDefragCachesCommand::~CDefragCachesCommand()
vtable for (anonymous namespace)::CDefragCachesCommand
(anonymous namespace)::CDefragCachesCommand::~CDefragCachesCommand()
(anonymous namespace)::CGetCacheFragmentationCommand::~CGetCacheFragmentationCommand()
vtable for (anonymous namespace)::CGetCacheFragmentationCommand
(anonymous namespace)::CGetCacheFragmentationCommand::~CGetCacheFragmentationCommand()
(anonymous namespace)::CRepairOrDecryptCachesCommand::~CRepairOrDecryptCachesCommand()
vtable for (anonymous namespace)::CRepairOrDecryptCachesCommand
(anonymous namespace)::CRepairOrDecryptCachesCommand::~CRepairOrDecryptCachesCommand()
(anonymous namespace)::CFlushCacheCommand::~CFlushCacheCommand()
vtable for (anonymous namespace)::CFlushCacheCommand
(anonymous namespace)::CFlushCacheCommand::~CFlushCacheCommand()
(anonymous namespace)::CStopLoadingCommand::~CStopLoadingCommand()
vtable for (anonymous namespace)::CStopLoadingCommand
(anonymous namespace)::CStopLoadingCommand::~CStopLoadingCommand()
(anonymous namespace)::CStartLoadingCommand::~CStartLoadingCommand()
vtable for (anonymous namespace)::CStartLoadingCommand
(anonymous namespace)::CStartLoadingCommand::~CStartLoadingCommand()
(anonymous namespace)::CWaitForAppReadyToLaunchCommand::~CWaitForAppReadyToLaunchCommand()
vtable for (anonymous namespace)::CWaitForAppReadyToLaunchCommand
(anonymous namespace)::CWaitForAppReadyToLaunchCommand::~CWaitForAppReadyToLaunchCommand()
(anonymous namespace)::CUpdateSubscriptionBillingInfoCommand::~CUpdateSubscriptionBillingInfoCommand()
vtable for (anonymous namespace)::CUpdateSubscriptionBillingInfoCommand
(anonymous namespace)::CUpdateSubscriptionBillingInfoCommand::~CUpdateSubscriptionBillingInfoCommand()
(anonymous namespace)::CUpdateAccountBillingInfoCommand::~CUpdateAccountBillingInfoCommand()
vtable for (anonymous namespace)::CUpdateAccountBillingInfoCommand
(anonymous namespace)::CUpdateAccountBillingInfoCommand::~CUpdateAccountBillingInfoCommand()
(anonymous namespace)::CRequestEmailAddressVerificationEmailCommand::~CRequestEmailAddressVerificationEmailCommand()
vtable for (anonymous namespace)::CRequestEmailAddressVerificationEmailCommand
(anonymous namespace)::CRequestEmailAddressVerificationEmailCommand::~CRequestEmailAddressVerificationEmailCommand()
(anonymous namespace)::CAckSubscriptionReceiptCommand::~CAckSubscriptionReceiptCommand()
vtable for (anonymous namespace)::CAckSubscriptionReceiptCommand
(anonymous namespace)::CAckSubscriptionReceiptCommand::~CAckSubscriptionReceiptCommand()
(anonymous namespace)::CUnsubscribeCommand::~CUnsubscribeCommand()
vtable for (anonymous namespace)::CUnsubscribeCommand
(anonymous namespace)::CUnsubscribeCommand::~CUnsubscribeCommand()
(anonymous namespace)::CSubscribeCommand::~CSubscribeCommand()
vtable for (anonymous namespace)::CSubscribeCommand
(anonymous namespace)::CSubscribeCommand::~CSubscribeCommand()
(anonymous namespace)::CRefreshAccountInfoCommand::~CRefreshAccountInfoCommand()
vtable for (anonymous namespace)::CRefreshAccountInfoCommand
(anonymous namespace)::CRefreshAccountInfoCommand::~CRefreshAccountInfoCommand()
(anonymous namespace)::CCreateCachePreloadersCommand::~CCreateCachePreloadersCommand()
vtable for (anonymous namespace)::CCreateCachePreloadersCommand
(anonymous namespace)::CCreateCachePreloadersCommand::~CCreateCachePreloadersCommand()
(anonymous namespace)::CLogoutCommand::~CLogoutCommand()
vtable for (anonymous namespace)::CLogoutCommand
(anonymous namespace)::CLogoutCommand::~CLogoutCommand()
(anonymous namespace)::CDeleteAccountCommand::~CDeleteAccountCommand()
vtable for (anonymous namespace)::CDeleteAccountCommand
(anonymous namespace)::CDeleteAccountCommand::~CDeleteAccountCommand()
(anonymous namespace)::CFlushCacheCommand::~CFlushCacheCommand()
(anonymous namespace)::CRepairOrDecryptCachesCommand::~CRepairOrDecryptCachesCommand()
(anonymous namespace)::CGetCacheFragmentationCommand::~CGetCacheFragmentationCommand()
(anonymous namespace)::CDefragCachesCommand::~CDefragCachesCommand()
(anonymous namespace)::CGetAppUpdateStatsCommand::~CGetAppUpdateStatsCommand()
(anonymous namespace)::CDeleteAccountCommand::~CDeleteAccountCommand()
(anonymous namespace)::CSetAppCacheSizeCommand::~CSetAppCacheSizeCommand()
(anonymous namespace)::CRequestEmailAddressVerificationEmailCommand::~CRequestEmailAddressVerificationEmailCommand()
(anonymous namespace)::CCreateCachePreloadersCommand::~CCreateCachePreloadersCommand()
(anonymous namespace)::CWaitForAppReadyToLaunchCommand::~CWaitForAppReadyToLaunchCommand()
(anonymous namespace)::CLogoutCommand::~CLogoutCommand()
(anonymous namespace)::CStartLoadingCommand::~CStartLoadingCommand()
(anonymous namespace)::CUnsubscribeCommand::~CUnsubscribeCommand()
(anonymous namespace)::CStopLoadingCommand::~CStopLoadingCommand()
(anonymous namespace)::CRefreshAccountInfoCommand::~CRefreshAccountInfoCommand()
(anonymous namespace)::CAckSubscriptionReceiptCommand::~CAckSubscriptionReceiptCommand()
(anonymous namespace)::CLoadCacheFromDirCommand::~CLoadCacheFromDirCommand()
vtable for (anonymous namespace)::CLoadCacheFromDirCommand
(anonymous namespace)::CChangeEmailAddressCommand::~CChangeEmailAddressCommand()
vtable for (anonymous namespace)::CChangeEmailAddressCommand
(anonymous namespace)::CVerifyEmailAddressCommand::~CVerifyEmailAddressCommand()
vtable for (anonymous namespace)::CVerifyEmailAddressCommand
(anonymous namespace)::CLaunchCommand::~CLaunchCommand()
vtable for (anonymous namespace)::CLaunchCommand
(anonymous namespace)::CMoveAppCommand::~CMoveAppCommand()
vtable for (anonymous namespace)::CMoveAppCommand
(anonymous namespace)::CSetUserCommand::~CSetUserCommand()
vtable for (anonymous namespace)::CSetUserCommand
(anonymous namespace)::CSetUser2Command::~CSetUser2Command()
vtable for (anonymous namespace)::CSetUser2Command
(anonymous namespace)::CRefreshMinimumFootprintCommand::~CRefreshMinimumFootprintCommand()
vtable for (anonymous namespace)::CRefreshMinimumFootprintCommand
(anonymous namespace)::CRefreshLoginCommand::~CRefreshLoginCommand()
vtable for (anonymous namespace)::CRefreshLoginCommand
(anonymous namespace)::CSubscribeCommand::~CSubscribeCommand()
(anonymous namespace)::CUpdateAccountBillingInfoCommand::~CUpdateAccountBillingInfoCommand()
(anonymous namespace)::CUpdateSubscriptionBillingInfoCommand::~CUpdateSubscriptionBillingInfoCommand()
(anonymous namespace)::CChangePasswordCommand::~CChangePasswordCommand()
vtable for (anonymous namespace)::CChangePasswordCommand
(anonymous namespace)::CChangeAccountNameCommand::~CChangeAccountNameCommand()
vtable for (anonymous namespace)::CChangeAccountNameCommand
(anonymous namespace)::CLoginCommand::~CLoginCommand()
vtable for (anonymous namespace)::CLoginCommand
(anonymous namespace)::CChangePersonalQACommand::~CChangePersonalQACommand()
vtable for (anonymous namespace)::CChangePersonalQACommand
(anonymous namespace)::CMoveAppCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CSetAppCacheSizeCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CMoveAppCommand::~CMoveAppCommand()
(anonymous namespace)::CMoveAppCommand::~CMoveAppCommand()
(anonymous namespace)::CRefreshMinimumFootprintCommand::~CRefreshMinimumFootprintCommand()
(anonymous namespace)::CRefreshMinimumFootprintCommand::~CRefreshMinimumFootprintCommand()
(anonymous namespace)::CLoadCacheFromDirCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CLoadCacheFromDirCommand::~CLoadCacheFromDirCommand()
(anonymous namespace)::CLoadCacheFromDirCommand::~CLoadCacheFromDirCommand()
(anonymous namespace)::CRequestAccountsByCdKeyEmailCommand::~CRequestAccountsByCdKeyEmailCommand()
(anonymous namespace)::CRequestAccountsByCdKeyEmailCommand::~CRequestAccountsByCdKeyEmailCommand()
(anonymous namespace)::CFlushCacheCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CStopLoadingCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CLaunchCommand::~CLaunchCommand()
(anonymous namespace)::CLaunchCommand::~CLaunchCommand()
(anonymous namespace)::CChangeAccountNameCommand::~CChangeAccountNameCommand()
(anonymous namespace)::CChangeAccountNameCommand::~CChangeAccountNameCommand()
(anonymous namespace)::CVerifyEmailAddressCommand::~CVerifyEmailAddressCommand()
(anonymous namespace)::CVerifyEmailAddressCommand::~CVerifyEmailAddressCommand()
(anonymous namespace)::CChangeEmailAddressCommand::~CChangeEmailAddressCommand()
(anonymous namespace)::CChangeEmailAddressCommand::~CChangeEmailAddressCommand()
(anonymous namespace)::CChangePersonalQACommand::~CChangePersonalQACommand()
(anonymous namespace)::CChangePersonalQACommand::~CChangePersonalQACommand()
(anonymous namespace)::CChangePasswordCommand::~CChangePasswordCommand()
(anonymous namespace)::CChangePasswordCommand::~CChangePasswordCommand()
(anonymous namespace)::CGetNumAccountsWithEmailAddressCommand::~CGetNumAccountsWithEmailAddressCommand()
(anonymous namespace)::CGetNumAccountsWithEmailAddressCommand::~CGetNumAccountsWithEmailAddressCommand()
(anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand::~CRequestAccountsByEmailAddressEmailCommand()
(anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand::~CRequestAccountsByEmailAddressEmailCommand()
(anonymous namespace)::CRequestForgottenPasswordEmailCommand::~CRequestForgottenPasswordEmailCommand()
(anonymous namespace)::CRequestForgottenPasswordEmailCommand::~CRequestForgottenPasswordEmailCommand()
(anonymous namespace)::CChangeForgottenPasswordCommand::~CChangeForgottenPasswordCommand()
(anonymous namespace)::CChangeForgottenPasswordCommand::~CChangeForgottenPasswordCommand()
(anonymous namespace)::CRefreshLoginCommand::~CRefreshLoginCommand()
(anonymous namespace)::CRefreshLoginCommand::~CRefreshLoginCommand()
(anonymous namespace)::CSetUser2Command::~CSetUser2Command()
(anonymous namespace)::CSetUser2Command::~CSetUser2Command()
(anonymous namespace)::CSetUserCommand::~CSetUserCommand()
(anonymous namespace)::CSetUserCommand::~CSetUserCommand()
(anonymous namespace)::CLoginCommand::~CLoginCommand()
(anonymous namespace)::CLoginCommand::~CLoginCommand()
(anonymous namespace)::CGenerateSuggestedAccountNamesCommand::~CGenerateSuggestedAccountNamesCommand()
(anonymous namespace)::CGenerateSuggestedAccountNamesCommand::~CGenerateSuggestedAccountNamesCommand()
(anonymous namespace)::CIsAccountNameInUseCommand::~CIsAccountNameInUseCommand()
(anonymous namespace)::CIsAccountNameInUseCommand::~CIsAccountNameInUseCommand()
(anonymous namespace)::CCreateAccountCommand::~CCreateAccountCommand()
(anonymous namespace)::CCreateAccountCommand::~CCreateAccountCommand()
(anonymous namespace)::CCommandThread::DoThreadedCommand()
(anonymous namespace)::CWaitForResourcesCommand::~CWaitForResourcesCommand()
vtable for (anonymous namespace)::CWaitForResourcesCommand
(anonymous namespace)::CWaitForResourcesCommand::~CWaitForResourcesCommand()
(anonymous namespace)::CGenerateSuggestedAccountNamesCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CWaitForResourcesCommand::~CWaitForResourcesCommand()
(anonymous namespace)::CRefreshMinimumFootprintCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CDefragCachesCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CGetCacheFragmentationCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CStartLoadingCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CWaitForResourcesCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CRepairOrDecryptCachesCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CWaitForAppReadyToLaunchCommand::DoCommand(common::CCommandStatusControl&)
(anonymous namespace)::CGetAppUpdateStatsCommand::DoCommand(common::CCommandStatusControl&)
typeinfo for (anonymous namespace)::CCommandThread
Grid::ICommandState::NewHandle(Grid::ICommandState*)::s_NextHandle
vtable for (anonymous namespace)::CNullOperation
(anonymous namespace)::CCommandThread::DoProcess(TSteamProgress*, unsigned int, unsigned int*)
(anonymous namespace)::CCommandThread::~CCommandThread()
vtable for (anonymous namespace)::CCommandThread
(anonymous namespace)::CCommandThread::~CCommandThread()
(anonymous namespace)::CCommandThread::~CCommandThread()
(anonymous namespace)::CCommandThread::CCommandThread((anonymous namespace)::ICommandBase*, std::string const&)
(anonymous namespace)::CCommandThread::CCommandThread((anonymous namespace)::ICommandBase*, std::string const&)
vtable for (anonymous namespace)::CUninstallCommand
global constructors keyed to _I_CommandStates.cpp
typeinfo name for (anonymous namespace)::CUninstallCommand
typeinfo name for (anonymous namespace)::CSetAppVersionCommand
typeinfo name for (anonymous namespace)::CSetAppCacheSizeCommand
typeinfo name for (anonymous namespace)::CGetAppUpdateStatsCommand
typeinfo name for (anonymous namespace)::CMoveAppCommand
typeinfo name for (anonymous namespace)::CRefreshMinimumFootprintCommand
typeinfo name for (anonymous namespace)::CLoadCacheFromDirCommand
typeinfo name for (anonymous namespace)::CDefragCachesCommand
typeinfo name for (anonymous namespace)::CGetCacheFragmentationCommand
typeinfo name for (anonymous namespace)::CRepairOrDecryptCachesCommand
typeinfo name for (anonymous namespace)::CFlushCacheCommand
typeinfo name for (anonymous namespace)::CStopLoadingCommand
typeinfo name for (anonymous namespace)::CStartLoadingCommand
typeinfo name for (anonymous namespace)::CLaunchCommand
typeinfo name for (anonymous namespace)::CWaitForAppReadyToLaunchCommand
typeinfo name for (anonymous namespace)::CUpdateSubscriptionBillingInfoCommand
typeinfo name for (anonymous namespace)::CUpdateAccountBillingInfoCommand
typeinfo name for (anonymous namespace)::CChangeAccountNameCommand
typeinfo name for (anonymous namespace)::CRequestEmailAddressVerificationEmailCommand
typeinfo name for (anonymous namespace)::CVerifyEmailAddressCommand
typeinfo name for (anonymous namespace)::CChangeEmailAddressCommand
typeinfo name for (anonymous namespace)::CChangePersonalQACommand
typeinfo name for (anonymous namespace)::CChangePasswordCommand
typeinfo name for (anonymous namespace)::CGetNumAccountsWithEmailAddressCommand
typeinfo name for (anonymous namespace)::CRequestAccountsByCdKeyEmailCommand
typeinfo name for (anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand
typeinfo name for (anonymous namespace)::CRequestForgottenPasswordEmailCommand
typeinfo name for (anonymous namespace)::CChangeForgottenPasswordCommand
typeinfo name for (anonymous namespace)::CAckSubscriptionReceiptCommand
typeinfo name for (anonymous namespace)::CUnsubscribeCommand
typeinfo name for (anonymous namespace)::CSubscribeCommand
typeinfo name for (anonymous namespace)::CRefreshAccountInfoCommand
typeinfo name for (anonymous namespace)::CRefreshLoginCommand
typeinfo name for (anonymous namespace)::CCreateCachePreloadersCommand
typeinfo name for (anonymous namespace)::CSetUser2Command
typeinfo name for (anonymous namespace)::CSetUserCommand
typeinfo name for (anonymous namespace)::CLogoutCommand
typeinfo name for (anonymous namespace)::CLoginCommand
typeinfo name for (anonymous namespace)::CDeleteAccountCommand
typeinfo name for (anonymous namespace)::CGenerateSuggestedAccountNamesCommand
typeinfo name for (anonymous namespace)::CIsAccountNameInUseCommand
typeinfo name for (anonymous namespace)::CCreateAccountCommand
typeinfo name for (anonymous namespace)::CWaitForResourcesCommand
typeinfo name for (anonymous namespace)::CCommandThread
typeinfo for (anonymous namespace)::CUninstallCommand
typeinfo for (anonymous namespace)::ICommandBase
typeinfo for (anonymous namespace)::CSetAppVersionCommand
typeinfo for (anonymous namespace)::CSetAppCacheSizeCommand
typeinfo for (anonymous namespace)::CGetAppUpdateStatsCommand
typeinfo for (anonymous namespace)::CMoveAppCommand
typeinfo for (anonymous namespace)::CRefreshMinimumFootprintCommand
typeinfo for (anonymous namespace)::CLoadCacheFromDirCommand
typeinfo for (anonymous namespace)::CDefragCachesCommand
typeinfo for (anonymous namespace)::CGetCacheFragmentationCommand
typeinfo for (anonymous namespace)::CRepairOrDecryptCachesCommand
typeinfo for (anonymous namespace)::CFlushCacheCommand
typeinfo for (anonymous namespace)::CStopLoadingCommand
typeinfo for (anonymous namespace)::CStartLoadingCommand
typeinfo for (anonymous namespace)::CLaunchCommand
typeinfo for (anonymous namespace)::CWaitForAppReadyToLaunchCommand
typeinfo for (anonymous namespace)::CUpdateSubscriptionBillingInfoCommand
typeinfo for (anonymous namespace)::CUpdateAccountBillingInfoCommand
typeinfo for (anonymous namespace)::CChangeAccountNameCommand
typeinfo for (anonymous namespace)::CRequestEmailAddressVerificationEmailCommand
typeinfo for (anonymous namespace)::CVerifyEmailAddressCommand
typeinfo for (anonymous namespace)::CChangeEmailAddressCommand
typeinfo for (anonymous namespace)::CChangePersonalQACommand
typeinfo for (anonymous namespace)::CChangePasswordCommand
typeinfo for (anonymous namespace)::CGetNumAccountsWithEmailAddressCommand
typeinfo for (anonymous namespace)::CRequestAccountsByCdKeyEmailCommand
typeinfo for (anonymous namespace)::CRequestAccountsByEmailAddressEmailCommand
typeinfo for (anonymous namespace)::CRequestForgottenPasswordEmailCommand
typeinfo for (anonymous namespace)::CChangeForgottenPasswordCommand
typeinfo for (anonymous namespace)::CAckSubscriptionReceiptCommand
typeinfo for (anonymous namespace)::CUnsubscribeCommand
typeinfo for (anonymous namespace)::CSubscribeCommand
typeinfo for (anonymous namespace)::CRefreshAccountInfoCommand
typeinfo for (anonymous namespace)::CRefreshLoginCommand
typeinfo for (anonymous namespace)::CSetUser2Command
typeinfo for (anonymous namespace)::CSetUserCommand
typeinfo for (anonymous namespace)::CCreateCachePreloadersCommand
typeinfo for (anonymous namespace)::CLogoutCommand
typeinfo for (anonymous namespace)::CLoginCommand
typeinfo for (anonymous namespace)::CDeleteAccountCommand
typeinfo for (anonymous namespace)::CGenerateSuggestedAccountNamesCommand
typeinfo for (anonymous namespace)::CIsAccountNameInUseCommand
typeinfo for (anonymous namespace)::CCreateAccountCommand
typeinfo for (anonymous namespace)::CWaitForResourcesCommand
typeinfo for (anonymous namespace)::CNullOperation
typeinfo name for (anonymous namespace)::ICommandBase
typeinfo name for (anonymous namespace)::CNullOperation
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>, std::_Select1st<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t> const&) (.clone.214)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>> const&) (.clone.212)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>, std::_Select1st<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>, std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t> const&) (.clone.213)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>> const&) (.clone.211)
guard variable for Grid::CContentDescriptionDBCache::ReadLocalAppKeysFile()::sAppKeysNamePrefix
guard variable for Grid::CContentDescriptionDBCache::ReadLocalAppKeysFile()::sAppStateNamePrefix
Grid::CContentDescriptionDBCache::ReadLocalAppKeysFile()::sAppKeysNamePrefix
Grid::CContentDescriptionDBCache::ReadLocalAppKeysFile()::sAppStateNamePrefix
Grid::CLockedCDDBCache::~CLockedCDDBCache() (.clone.180)
global constructors keyed to _I_ContentDescription.cpp
guard variable for Grid::CContentDescriptionDBCache::Instance()::s_ContentDescriptionDBCache
Grid::CContentDescriptionDBCache::Instance()::s_ContentDescriptionDBCache
Grid::CLockedCDDBCache::CLockedCDDBCache(bool, bool*, common::CCommandStatusControl*) (.clone.199)
ObjScopeGuardImpl0<(anonymous namespace)::CContentServerCDDBAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
(anonymous namespace)::CContentServerCDDBAddressCache::GetStoreToBlobRegistryValueName()
(anonymous namespace)::CContentServerCDDBAddressCache::~CContentServerCDDBAddressCache()
vtable for (anonymous namespace)::CContentServerCDDBAddressCache
(anonymous namespace)::CContentServerCDDBAddressCache::~CContentServerCDDBAddressCache()
(anonymous namespace)::CContentServerCDDBAddressCache::~CContentServerCDDBAddressCache()
global constructors keyed to _I_CSClient.cpp
(anonymous namespace)::s_CSIPAddressCache
(anonymous namespace)::CContentServerCDDBAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
Grid::CSClient::ConnectToContentServer(common::CIPAddrPort const&, bool, common::CCommandStatusControl*)::cszContentServerAdrs
vtable for ObjScopeGuardImpl0<(anonymous namespace)::CContentServerCDDBAddressCache, void (Grid::IServerAddressCache::*)()>
typeinfo for (anonymous namespace)::CContentServerCDDBAddressCache
typeinfo for ObjScopeGuardImpl0<(anonymous namespace)::CContentServerCDDBAddressCache, void (Grid::IServerAddressCache::*)()>
typeinfo name for (anonymous namespace)::CContentServerCDDBAddressCache
typeinfo name for ObjScopeGuardImpl0<(anonymous namespace)::CContentServerCDDBAddressCache, void (Grid::IServerAddressCache::*)()>
global constructors keyed to _I_CSClientCompletionHandlers.cpp
(anonymous namespace)::CCommandStatusObjectWithTimeout::IsCancelled() const
(anonymous namespace)::CCommandStatusObjectWithTimeout::~CCommandStatusObjectWithTimeout()
(anonymous namespace)::CCommandStatusObjectWithTimeout::~CCommandStatusObjectWithTimeout()
(anonymous namespace)::CCommandStatusObjectWithTimeout::~CCommandStatusObjectWithTimeout()
global constructors keyed to _I_CSClientConnection.cpp
vtable for (anonymous namespace)::CCommandStatusObjectWithTimeout
typeinfo for (anonymous namespace)::CCommandStatusObjectWithTimeout
typeinfo name for (anonymous namespace)::CCommandStatusObjectWithTimeout
global constructors keyed to _I_CSClientConnectionPool.cpp
global constructors keyed to _I_CSClientFSM.cpp
(anonymous namespace)::g_pTheSingleServiceInstance
global constructors keyed to _I_CSClientService.cpp
global constructors keyed to _I_CSClientSession.cpp
.L1579
.L1580
.L1581
.L1582
.L1583
.L1584
(anonymous namespace)::DeleteReturnBuffer(Grid::IReturnBuffer*)
(anonymous namespace)::CQuickBuffer<char>::~CQuickBuffer()
(anonymous namespace)::CQuickBuffer<char>::~CQuickBuffer()
Grid::CEngineConnection::~CEngineConnection()::eCommandCode
Grid::CEngineConnection::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCurrentCellID(unsigned int*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppDLCStatus(unsigned int, unsigned int, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ForceCellId(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::WasBlobRegistryDeleted(int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetLocalClientVersion(unsigned int*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCurrentAppId(unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangeAccountName(char const*, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RequestEmailAddressVerificationEmail(TSteamError*)::eCommandCode
Grid::CEngineConnection::VerifyEmailAddress(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangeEmailAddress(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangePassword(char const*, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RequestAccountsByCdKeyEmail(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::Uninstall(TSteamError*)::eCommandCode
Grid::CEngineConnection::SetAppVersion(unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::SetAppCacheSize(unsigned int, unsigned int, bool, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::MoveApp(unsigned int, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppDir(unsigned int, char*, TSteamError*)::eCommandCode
Grid::CEngineConnection::SetCacheDefaultDirectory(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCacheDefaultDirectory(char*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RefreshMinimumFootprintFiles(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCacheDecryptionKey(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::LoadFileToApp(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::eCommandCode
Grid::CEngineConnection::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsFileNeededByApp(unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsFileNeededByCache(unsigned int, char const*, unsigned long long, TSteamError*)::eCommandCode
Grid::CEngineConnection::LoadCacheFromDir(unsigned int, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::DefragCaches(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCachePercentFragmentation(unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RepairOrDecryptCaches(unsigned int, int, TSteamError*)::eCommandCode
Grid::CEngineConnection::FlushCache(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::StopLoadingCache(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::StartLoadingCache(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::WaitForAppReadyToLaunch(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppUserDefinedRecord(unsigned int, common::CMallocedBlock&, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppDependencies(unsigned int, unsigned int*, unsigned int, bool, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindApp(char const*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSubscriptionPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetDepotParent(unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppIds(unsigned int*, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAppStats(TSteamAppStats*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSubscriptionExtendedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)::eCommandCode
Grid::CEngineConnection::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsSubscribed(unsigned int, int*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::AckSubscriptionReceipt(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)::eCommandCode
Grid::CEngineConnection::Unsubscribe(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RefreshAccountInfo(int, int, TSteamError*)::eCommandCode
Grid::CEngineConnection::VerifyPassword(char const*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetAccountStatus(unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetUserType(unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::RefreshLogin(char const*, int, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsSecureComputer(int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::CreateCachePreloaders(TSteamError*)::eCommandCode
Grid::CEngineConnection::Logout(TSteamError*)::eCommandCode
Grid::CEngineConnection::Login(char const*, char const*, int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)::eCommandCode
Grid::CEngineConnection::SetUser2(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::SetUser(char const*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsLoggedIn(int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::DeleteAccount(TSteamError*)::eCommandCode
Grid::CEngineConnection::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsAccountNameInUse(char const*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::SetMaxStallCount(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::BlockingCall(unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::AbortCall(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)::eCommandCode
Grid::CEngineConnection::WaitForResources(unsigned int, bool, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::ResumeCachePreloading(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::PauseCachePreloading(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::ForgetAllHints(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::HintResourceNeed(unsigned int, char const*, int, TSteamError*)::eCommandCode
Grid::CEngineConnection::IsFileImmediatelyAvailable(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetLocalFileCopy(char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindClose(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindNext64(unsigned int, TSteamElemInfo64*, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindFirst64(char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)::eCommandCode
Grid::CEngineConnection::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)::eCommandCode
Grid::CEngineConnection::SizeFile64(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::SizeFile(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::TellFile64(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::TellFile(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::SeekFile64(unsigned int, long long, ESteamSeekMethod, TSteamError*)::eCommandCode
Grid::CEngineConnection::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)::eCommandCode
Grid::CEngineConnection::Putc(int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::Getc(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::WriteFile(void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::ReadFile64(void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)::eCommandCode
Grid::CEngineConnection::ReadFile(void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::CloseFile(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::OpenTmpFile(TSteamError*)::eCommandCode
Grid::CEngineConnection::OpenFile64(char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)::eCommandCode
Grid::CEngineConnection::OpenFile2(char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)::eCommandCode
Grid::CEngineConnection::OpenFile(char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)::eCommandCode
Grid::CEngineConnection::FlushFile(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetFlags(char const*, unsigned int*, TSteamError*)::eCommandCode
Grid::CEngineConnection::Stat64(char const*, TSteamElemInfo64*, TSteamError*)::eCommandCode
Grid::CEngineConnection::Stat(char const*, TSteamElemInfo*, TSteamError*)::eCommandCode
Grid::CEngineConnection::UnmountFilesystem(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::MountFilesystem(unsigned int, char const*, TSteamError*)::eCommandCode
Grid::CEngineConnection::UnmountAppFilesystem(unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::MountAppFilesystem(unsigned int, unsigned int, TSteamError*)::eCommandCode
Grid::CEngineConnection::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)::eCommandCode
Grid::CEngineConnection::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)::eCommandCode
Grid::CEngineConnection::NumAppsRunning(TSteamError*)::eCommandCode
global constructors keyed to _I_EngineClientConnection.cpp
.L3409
.L3410
.L3411
.L3412
.L3413
.L3414
.L3415
.L3416
.L3417
.L3418
.L3419
.L3420
.L3421
.L3422
.L3423
.L3424
.L3425
.L3426
.L3427
.L3428
.L3429
.L3430
.L3431
.L3432
.L3433
.L3434
.L3435
.L3436
.L3437
.L3438
.L3439
.L3440
.L3441
.L3442
.L3443
.L3444
.L3445
.L3446
.L3447
.L3448
.L3449
.L3450
.L3451
.L3452
.L3453
.L3454
.L3455
.L3456
.L3457
.L3458
.L3459
.L3460
.L3461
.L3462
.L3463
.L3464
.L3465
.L3466
.L3467
.L3468
.L3469
.L3470
.L3471
.L3472
.L3473
.L3474
.L3475
.L3476
.L3477
.L3478
.L3479
.L3480
.L3481
.L3482
.L3483
.L3484
.L3485
.L3486
.L3487
.L3488
.L3489
.L3490
.L3491
.L3492
.L3493
.L3494
.L3495
.L3496
.L3497
.L3498
.L3499
.L3500
.L3501
.L3502
.L3503
.L3504
.L3505
.L3506
.L3507
.L3508
.L3509
.L3510
.L3511
.L3512
.L3513
.L3514
.L3515
.L3516
.L3517
.L3518
.L3519
.L3520
.L3521
.L3522
.L3523
.L3524
.L3525
.L3526
.L3527
.L3528
.L3529
.L3530
.L3531
.L3532
.L3533
.L3534
.L3535
.L3536
.L3537
.L3538
.L3539
.L3540
.L3541
.L3542
.L3543
.L3544
.L3545
.L3546
.L3547
(anonymous namespace)::GuardDeletePipe(Grid::CPipeComm*)
Grid::CClientManager::CImpl::AgentMonitorThreadProc()::szRegValueName
Grid::CClientManager::CImpl::AgentMonitorThreadProc()::bGoneIdle
(anonymous namespace)::s_CurrentBestCellId
(anonymous namespace)::s_CountryCodeCellList
(anonymous namespace)::s_StaticDataLock
(anonymous namespace)::s_TimeLastUpdatedCellId
global constructors keyed to _I_FindBestCellId.cpp
guard variable for Grid::CCellIDManager::Instance()::s_tsrcpInstance
guard variable for Grid::CCellIDManager::Instance()::s_SingletonLock
Grid::CCellIDManager::Instance()::bAtomicAccessCreatedFlag
Grid::CCellIDManager::Instance()::s_SingletonLock
Grid::CCellIDManager::Instance()::s_tsrcpInstance
(anonymous namespace)::CResourceLoadCompletionCollector::ReadProgress(unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
ObjScopeGuardImpl1<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int> MakeObjGuard<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int>((anonymous namespace)::CResourceLoadCompletionCollector&, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int)
vtable for ObjScopeGuardImpl1<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int>
ObjScopeGuardImpl1<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
void std::_Destroy<(anonymous namespace)::TResourceInfo*>((anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>, std::_Select1st<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>, std::_Select1st<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>>::_M_insert_unique(std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter> const&)
(anonymous namespace)::SafeCloseFile(_IO_FILE*)
std::_Vector_base<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>::_M_deallocate((anonymous namespace)::TResourceInfo*, unsigned int) (.clone.107)
std::_Vector_base<(anonymous namespace)::CResourceFileInfo::TInfo, std::allocator<(anonymous namespace)::CResourceFileInfo::TInfo>>::_M_deallocate((anonymous namespace)::CResourceFileInfo::TInfo*, unsigned int) (.clone.110)
(anonymous namespace)::TResourceInfo* std::__uninitialized_copy_a<(anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo>((anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo*, std::allocator<(anonymous namespace)::TResourceInfo>&) (.clone.168)
std::_Vector_base<std::string, std::allocator<std::string>>::_M_deallocate(std::string*, unsigned int) (.clone.276)
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string> MakeObjGuard<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>(Grid::CFsTable&, void (Grid::CFsTable::*)(std::string const&), std::string) (.clone.543)
(anonymous namespace)::s_FsTable
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, std::string> const&) (.clone.588)
(anonymous namespace)::s_CacheNameCache
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_insert_unique(std::pair<unsigned int const, std::string> const&) (.clone.589)
(anonymous namespace)::TResourceInfo* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<(anonymous namespace)::TResourceInfo const*, std::vector<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>>, (anonymous namespace)::TResourceInfo*, (anonymous namespace)::TResourceInfo>(__gnu_cxx::__normal_iterator<(anonymous namespace)::TResourceInfo const*, std::vector<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>>, __gnu_cxx::__normal_iterator<(anonymous namespace)::TResourceInfo const*, std::vector<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>>, (anonymous namespace)::TResourceInfo*, std::allocator<(anonymous namespace)::TResourceInfo>&) (.clone.161)
(anonymous namespace)::CResourceFileInfo::TInfo::~TInfo()
(anonymous namespace)::CResourceFileInfo::TInfo::~TInfo()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>, std::_Select1st<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, (anonymous namespace)::CResourceLoadCompletionCollector::THandleAndIter>>*)
common::CMultiFieldBlob::GetFieldDataAsStdString(unsigned short, unsigned char const*, common::CMultiFieldBlob::index_iterator*) (.clone.565)
std::vector<(anonymous namespace)::CResourceFileInfo::TInfo, std::allocator<(anonymous namespace)::CResourceFileInfo::TInfo>>::~vector()
std::vector<(anonymous namespace)::CResourceFileInfo::TInfo, std::allocator<(anonymous namespace)::CResourceFileInfo::TInfo>>::~vector()
std::vector<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<(anonymous namespace)::TResourceInfo*, std::vector<(anonymous namespace)::TResourceInfo, std::allocator<(anonymous namespace)::TResourceInfo>>>, (anonymous namespace)::TResourceInfo const&)
(anonymous namespace)::CResourceFileInfo::TInfo* std::__uninitialized_copy_a<(anonymous namespace)::CResourceFileInfo::TInfo*, (anonymous namespace)::CResourceFileInfo::TInfo*, (anonymous namespace)::CResourceFileInfo::TInfo>((anonymous namespace)::CResourceFileInfo::TInfo*, (anonymous namespace)::CResourceFileInfo::TInfo*, (anonymous namespace)::CResourceFileInfo::TInfo*, std::allocator<(anonymous namespace)::CResourceFileInfo::TInfo>&) (.clone.163)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::equal_range(std::string const&) (.clone.569)
(anonymous namespace)::s_CacheStatsCache
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, std::string> const&) (.clone.579)
(anonymous namespace)::s_AppPathCache
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_unique(std::pair<std::string const, std::string> const&) (.clone.580)
guard variable for Grid::CFs::GetRootDirPath()::sRootDirPath
Grid::CFs::GetRootDirPath()::sRootDirPath
(anonymous namespace)::RecursiveExtractFiles(Grid::CCacheGroupIterator&, std::string const&, unsigned long long&, unsigned long long&, common::CCommandStatusControl*)
(anonymous namespace)::GetEnclosingApp(unsigned int)
(anonymous namespace)::GetMountType(unsigned int)
(anonymous namespace)::IsCacheLoadingForAppAllowed(std::string const&, unsigned int)
(anonymous namespace)::s_sEnableCacheLoadingForAppValueName
(anonymous namespace)::GetDecryptionKey(EGameState, unsigned int)
common::CThreadSafeCountedPtr<Grid::CFsTable::IMountedCache>::reset(Grid::CFsTable::IMountedCache*) (.clone.573)
(anonymous namespace)::RecursiveCopyFiles(common::CThreadSafeCountedPtr<common::CFileUtil::IFindFile> const&, std::string const&, std::string const&, common::CCommandStatusControl*) (.clone.294)
(anonymous namespace)::ThrowIfEncryptedFiles(Grid::CCacheGroupIterator, std::vector<unsigned int, std::allocator<unsigned int>>&)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::erase(std::_Rb_tree_iterator<std::pair<std::string const, Grid::TCacheDescriptor>>, std::_Rb_tree_iterator<std::pair<std::string const, Grid::TCacheDescriptor>>) (.clone.562)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::erase(std::string const&) (.clone.555)
std::_Rb_tree<Grid::CCacheGroup::TFileIndex, std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>, std::_Select1st<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>, (anonymous namespace)::TFileIndexLessThan, std::allocator<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>>::_M_erase(std::_Rb_tree_node<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>*)
std::_Rb_tree<Grid::CCacheGroup::TFileIndex, std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>, std::_Select1st<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>, (anonymous namespace)::TFileIndexLessThan, std::allocator<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList> const&)
std::_Rb_tree<Grid::CCacheGroup::TFileIndex, std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>, std::_Select1st<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>, (anonymous namespace)::TFileIndexLessThan, std::allocator<std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList>>>::_M_insert_unique(std::pair<Grid::CCacheGroup::TFileIndex const, (anonymous namespace)::TFileResList> const&)
(anonymous namespace)::CResourceLoadCompletionCollector::CompleteRead(common::ICloneableException const*, unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
(anonymous namespace)::CResourceLoadCompletionCollector::RemoveToken(unsigned int)
(anonymous namespace)::GetCachePercentPresent(std::string const&, unsigned int, unsigned int, std::string const&, unsigned long long&, unsigned long long&, bool&) (.clone.528)
(anonymous namespace)::s_CacheStatsCacheMutex
(anonymous namespace)::CResourceLoadCompletionCollector::CancelAllReads()
(anonymous namespace)::s_CacheNameCacheMutex
(anonymous namespace)::AppNeedsConversion(unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&) (.clone.527)
guard variable for Grid::CFs::ChangeSelectedAppVersion(std::string const&, unsigned int, unsigned int, common::CCommandStatusControl*)::bManifestFingerprintCheckEnabled
Grid::CFs::ChangeSelectedAppVersion(std::string const&, unsigned int, unsigned int, common::CCommandStatusControl*)::bManifestFingerprintCheckEnabled
(anonymous namespace)::s_AppPathCacheMutex
(anonymous namespace)::GetAppFolderForManifestOnlyCache(unsigned int)
(anonymous namespace)::GetMountPathsResolvingToCache(unsigned int, bool)
(anonymous namespace)::CreateCache(Grid::CFs::EMountType, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*)
(anonymous namespace)::CreateMount(unsigned int, unsigned int, Grid::CFs::EMountType, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*)
(anonymous namespace)::ConvertAppToManifestOnly(std::string const&, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&, common::CCommandStatusControl*) (.clone.530)
(anonymous namespace)::s_sAppCacheSizeValueName
(anonymous namespace)::CResourceLoadCompletionCollector::~CResourceLoadCompletionCollector()
vtable for (anonymous namespace)::CResourceLoadCompletionCollector
(anonymous namespace)::CResourceLoadCompletionCollector::~CResourceLoadCompletionCollector()
(anonymous namespace)::CResourceLoadCompletionCollector::~CResourceLoadCompletionCollector()
(anonymous namespace)::DoRefreshMinimumFootprintFiles(std::string const&, unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, bool, common::CCommandStatusControl*) (.clone.532)
(anonymous namespace)::DoWaitForResources(unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::vector<std::string, std::allocator<std::string>>&, common::CCommandStatusControl*, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>*, unsigned long long*, unsigned long long*, std::string const*)
Grid::CFs::RefreshMinimumFootprintFiles(std::string const&, unsigned int, std::string const&, common::CCommandStatusControl*, bool) (.clone.591)
global constructors keyed to _I_Fs.cpp
typeinfo for (anonymous namespace)::CResourceLoadCompletionCollector
typeinfo for ObjScopeGuardImpl1<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int>
typeinfo name for (anonymous namespace)::CResourceLoadCompletionCollector
typeinfo name for ObjScopeGuardImpl1<(anonymous namespace)::CResourceLoadCompletionCollector, void ((anonymous namespace)::CResourceLoadCompletionCollector::*)(unsigned int), unsigned int>
.L6785
.L6786
.L6787
.L6788
.L6789
Grid::CFs::CEndOfFileException::CEndOfFileException(unsigned int, common::CErrorCodeException::ESpecificType) (.clone.33)
global constructors keyed to _I_FsBuffer.cpp
std::_Vector_base<Grid::CFsCacheGroup::CImpl::CFileHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry>>::_M_deallocate(Grid::CFsCacheGroup::CImpl::CFileHandleEntry*, unsigned int) (.clone.55)
std::_Vector_base<Grid::CFsCacheGroup::CImpl::CFindHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry>>::_M_deallocate(Grid::CFsCacheGroup::CImpl::CFindHandleEntry*, unsigned int) (.clone.58)
global constructors keyed to _I_FsCacheGroup.cpp
(anonymous namespace)::CMountImpl::SetAppVersion(unsigned int)
(anonymous namespace)::CMountImpl::GetAppVersion()
(anonymous namespace)::CMountImpl::GetAppId()
common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>::~CThreadSafeCountedPtr()
common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>::~CThreadSafeCountedPtr()
common::CSemaphore::~CSemaphore() (.clone.75)
std::_Vector_base<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>::_M_deallocate(Grid::CCacheGroup::TCacheGroupEntry*, unsigned int) (.clone.206)
std::_Vector_base<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::allocator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>::_M_deallocate(common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, unsigned int) (.clone.228)
std::_Vector_base<Grid::CFsTable::CImpl::TAppLock, std::allocator<Grid::CFsTable::CImpl::TAppLock>>::_M_deallocate(Grid::CFsTable::CImpl::TAppLock*, unsigned int) (.clone.236)
(anonymous namespace)::CMountImpl::GetCache()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_insert_unique(std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>> const&)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>> const&)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_insert_unique(std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>> const&)
(anonymous namespace)::CMountImpl::~CMountImpl()
vtable for (anonymous namespace)::CMountImpl
(anonymous namespace)::CMountImpl::~CMountImpl()
(anonymous namespace)::CMountImpl::~CMountImpl()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>> const*, std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>*)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::CMountImpl>>>*)
global constructors keyed to _I_FsTable.cpp
typeinfo for (anonymous namespace)::CMountImpl
typeinfo name for (anonymous namespace)::CMountImpl
guard variable for Grid::CLauncher::CImpl::CreateCleanEnvironment(common::CMallocedBlock&)::s_szPathStr
Grid::CLauncher::CImpl::CreateCleanEnvironment(common::CMallocedBlock&)::s_szPathStr
global constructors keyed to _I_Launcher.cpp
global constructors keyed to _I_MasterResourceList.cpp
(anonymous namespace)::s_sNextStateRegistryValueName
(anonymous namespace)::s_StateMutex
(anonymous namespace)::s_sCurrentStateRegistryValueName
(anonymous namespace)::s_eCurrentState
(anonymous namespace)::s_sForceOfflineConfigFlag
(anonymous namespace)::s_uSecondsPause
(anonymous namespace)::s_uByteCap
(anonymous namespace)::s_bCFSModeEnabled
(anonymous namespace)::s_bInit
(anonymous namespace)::s_TimePauseUntil
global constructors keyed to _I_OfflineStatus.cpp
global constructors keyed to _I_ResourceFile.cpp
global constructors keyed to _I_ResourceList.cpp
global constructors keyed to _I_ResourceLocator.cpp
(anonymous namespace)::CEngineInstance::~CEngineInstance() (.clone.5)
common::CThreadSafeCountedPtr<(anonymous namespace)::CEngineInstance>::~CThreadSafeCountedPtr()
common::CThreadSafeCountedPtr<(anonymous namespace)::CEngineInstance>::~CThreadSafeCountedPtr()
common::CSemaphore::~CSemaphore() (.clone.20)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>>::_M_insert_unique(std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>> const&) (.clone.150)
(anonymous namespace)::s_tlsEngineConnection
(anonymous namespace)::ThrowApiError(TSteamError*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>> const&) (.clone.148)
(anonymous namespace)::HandleApiError(TSteamError*, std::exception const&, bool, char const*, char const*, ...)
(anonymous namespace)::HandleUnknownApiError(TSteamError*, bool, char const*)
(anonymous namespace)::s_uNumStartupCalls
SteamChangeAccountName::cszApi
SteamChangeAccountName::cszArgFmt
SteamIsUsingSdkContentServer::cszApi
SteamIsUsingSdkContentServer::cszArgFmt
SteamUnsubscribe::cszApi
SteamUnsubscribe::cszArgFmt
SteamDeleteAccount::cszApi
SteamDeleteAccount::cszArgFmt
(anonymous namespace)::s_sDefaultUser
SteamCheckAppOwnership::cszApi
SteamCheckAppOwnership::cszArgFmt
(anonymous namespace)::CleanupStaticData()
(anonymous namespace)::g_pBufTable
(anonymous namespace)::s_tsrcpLocalEngine
(anonymous namespace)::s_uAppId
(anonymous namespace)::s_uAppVersionId
(anonymous namespace)::GetEngineConnection()
SteamGetAppDLCStatus::cszApi
SteamGetAppDLCStatus::cszArgFmt
SteamForceCellId::cszApi
SteamForceCellId::cszArgFmt
SteamWasBlobRegistryDeleted::cszApi
SteamWasBlobRegistryDeleted::cszArgFmt
SteamGetLocalClientVersion::cszApi
SteamGetLocalClientVersion::cszArgFmt
SteamGetCurrentAppId::cszApi
SteamGetCurrentAppId::cszArgFmt
SteamGetTotalUpdateStats::cszApi
SteamGetTotalUpdateStats::cszArgFmt
SteamGetAppUpdateStats::cszApi
SteamGetAppUpdateStats::cszArgFmt
SteamUpdateSubscriptionBillingInfo::cszApi
SteamUpdateSubscriptionBillingInfo::cszArgFmt
SteamUpdateAccountBillingInfo::cszApi
SteamUpdateAccountBillingInfo::cszArgFmt
SteamRequestEmailAddressVerificationEmail::cszApi
SteamRequestEmailAddressVerificationEmail::cszArgFmt
SteamVerifyEmailAddress::cszApi
SteamVerifyEmailAddress::cszArgFmt
SteamChangeEmailAddress::cszApi
SteamChangeEmailAddress::cszArgFmt
SteamGetCurrentEmailAddress::cszApi
SteamGetCurrentEmailAddress::cszArgFmt
SteamGetContentServerInfo::cszApi
SteamGetContentServerInfo::cszArgFmt
SteamGetSponsorUrl::cszApi
SteamGetSponsorUrl::cszArgFmt
SteamChangePersonalQA::cszApi
SteamChangePersonalQA::cszArgFmt
SteamChangePassword::cszApi
SteamChangePassword::cszArgFmt
SteamGetNumAccountsWithEmailAddress::cszApi
SteamGetNumAccountsWithEmailAddress::cszArgFmt
SteamRequestAccountsByCdKeyEmail::cszApi
SteamRequestAccountsByCdKeyEmail::cszArgFmt
SteamRequestAccountsByEmailAddressEmail::cszApi
SteamRequestAccountsByEmailAddressEmail::cszArgFmt
SteamRequestForgottenPasswordEmail::cszApi
SteamRequestForgottenPasswordEmail::cszArgFmt
SteamChangeForgottenPassword::cszApi
SteamChangeForgottenPassword::cszArgFmt
SteamSetNotificationCallback::cszApi
SteamSetNotificationCallback::cszArgFmt
SteamUninstall::cszApi
SteamUninstall::cszArgFmt
SteamSetAppVersion::cszApi
SteamSetAppVersion::cszArgFmt
SteamReleaseCacheFiles::cszApi
SteamReleaseCacheFiles::cszArgFmt
SteamSetAppCacheSize::cszApi
SteamSetAppCacheSize::cszArgFmt
SteamGetAppCacheSize::cszApi
SteamGetAppCacheSize::cszArgFmt
SteamMoveApp::cszApi
SteamMoveApp::cszArgFmt
SteamGetAppDir::cszApi
SteamGetAppDir::cszArgFmt
SteamSetCacheDefaultDirectory::cszApi
SteamSetCacheDefaultDirectory::cszArgFmt
SteamGetCacheDefaultDirectory::cszApi
SteamGetCacheDefaultDirectory::cszArgFmt
SteamRefreshMinimumFootprintFiles::cszApi
SteamRefreshMinimumFootprintFiles::cszArgFmt
SteamGetCacheDecryptionKey::cszApi
SteamGetCacheDecryptionKey::cszArgFmt
SteamLoadFileToApp::cszApi
SteamLoadFileToApp::cszArgFmt
SteamLoadFileToCache::cszApi
SteamLoadFileToCache::cszArgFmt
SteamIsFileNeededByApp::cszApi
SteamIsFileNeededByApp::cszArgFmt
SteamIsFileNeededByCache::cszApi
SteamIsFileNeededByCache::cszArgFmt
SteamLoadCacheFromDir::cszApi
SteamLoadCacheFromDir::cszArgFmt
SteamDefragCaches::cszApi
SteamDefragCaches::cszArgFmt
SteamGetCachePercentFragmentation::cszApi
SteamGetCachePercentFragmentation::cszArgFmt
SteamRepairOrDecryptCaches::cszApi
SteamRepairOrDecryptCaches::cszArgFmt
SteamFlushCache::cszApi
SteamFlushCache::cszArgFmt
SteamStopLoadingCache::cszApi
SteamStopLoadingCache::cszArgFmt
SteamStartLoadingCache::cszApi
SteamStartLoadingCache::cszArgFmt
SteamGetCurrentCellID::cszApi
SteamGetCurrentCellID::cszArgFmt
SteamIsCacheLoadingEnabled::cszApi
SteamIsCacheLoadingEnabled::cszArgFmt
SteamGetCacheFilePath::cszApi
SteamGetCacheFilePath::cszArgFmt
SteamCreateCachePreloaders::cszApi
SteamCreateCachePreloaders::cszArgFmt
SteamLaunchApp::cszApi
SteamLaunchApp::cszArgFmt
SteamWaitForAppReadyToLaunch::cszApi
SteamWaitForAppReadyToLaunch::cszArgFmt
SteamGetAppUserDefinedRecord::cszApi
SteamGetAppUserDefinedRecord::cszArgFmt
SteamGetAppUserDefinedInfo::cszApi
SteamGetAppUserDefinedInfo::cszArgFmt
SteamGetAppDependencies::cszApi
SteamGetAppDependencies::cszArgFmt
SteamFindApp::cszApi
SteamFindApp::cszArgFmt
SteamRemoveAppDependency::cszApi
SteamRemoveAppDependency::cszArgFmt
SteamInsertAppDependency::cszApi
SteamInsertAppDependency::cszArgFmt
SteamEnumerateAppDependency::cszApi
SteamEnumerateAppDependency::cszArgFmt
SteamEnumerateAppIcon::cszApi
SteamEnumerateAppIcon::cszArgFmt
SteamEnumerateAppLaunchOption::cszApi
SteamEnumerateAppLaunchOption::cszArgFmt
SteamEnumerateAppVersion::cszApi
SteamEnumerateAppVersion::cszArgFmt
SteamGetSubscriptionPurchaseCountry::cszApi
SteamGetSubscriptionPurchaseCountry::cszArgFmt
SteamGetAppPurchaseCountry::cszApi
SteamGetAppPurchaseCountry::cszArgFmt
SteamGetDepotParent::cszApi
SteamGetDepotParent::cszArgFmt
SteamEnumerateApp::cszApi
SteamEnumerateApp::cszArgFmt
SteamGetAppIds::cszApi
SteamGetAppIds::cszArgFmt
SteamGetAppStats::cszApi
SteamGetAppStats::cszArgFmt
SteamGetSubscriptionExtendedInfo::cszApi
SteamGetSubscriptionExtendedInfo::cszArgFmt
SteamEnumerateSubscriptionDiscountQualifier::cszApi
SteamEnumerateSubscriptionDiscountQualifier::cszArgFmt
SteamEnumerateSubscriptionDiscount::cszApi
SteamEnumerateSubscriptionDiscount::cszArgFmt
SteamEnumerateSubscription::cszApi
SteamEnumerateSubscription::cszArgFmt
SteamGetSubscriptionIds::cszApi
SteamGetSubscriptionIds::cszArgFmt
SteamGetSubscriptionStats::cszApi
SteamGetSubscriptionStats::cszArgFmt
SteamIsAppSubscribed::cszApi
SteamIsAppSubscribed::cszArgFmt
SteamIsSubscribed::cszApi
SteamIsSubscribed::cszArgFmt
SteamAckSubscriptionReceipt::cszApi
SteamAckSubscriptionReceipt::cszArgFmt
SteamGetSubscriptionReceipt::cszApi
SteamGetSubscriptionReceipt::cszArgFmt
SteamSubscribe::cszApi
SteamSubscribe::cszArgFmt
SteamRefreshAccountInfo2::cszApi
SteamRefreshAccountInfo2::cszArgFmt
SteamVerifyPassword::cszApi
SteamGetAccountStatus::cszApi
SteamGetAccountStatus::cszArgFmt
SteamGetUserType::cszApi
SteamGetUserType::cszArgFmt
SteamRefreshLogin::cszApi
SteamRefreshLogin::cszArgFmt
SteamIsSecureComputer::cszApi
SteamIsSecureComputer::cszArgFmt
SteamLogout::cszApi
SteamLogout::cszArgFmt
SteamLogin::cszApi
SteamLogin::cszArgFmt
SteamGetUser::cszApi
SteamGetUser::cszArgFmt
SteamSetUser2::cszApi
SteamSetUser2::cszArgFmt
SteamSetUser::cszApi
SteamSetUser::cszArgFmt
SteamIsLoggedIn::cszApi
SteamIsLoggedIn::cszArgFmt
SteamGenerateSuggestedAccountNames::cszApi
SteamGenerateSuggestedAccountNames::cszArgFmt
SteamIsAccountNameInUse::cszApi
SteamIsAccountNameInUse::cszArgFmt
SteamCreateAccount::cszApi
SteamCreateAccount::cszArgFmt
SteamSetMaxStallCount::cszApi
SteamSetMaxStallCount::cszArgFmt
SteamBlockingCall::cszApi
SteamBlockingCall::cszArgFmt
SteamAbortCall::cszApi
SteamAbortCall::cszArgFmt
SteamProcessCall::cszApi
SteamProcessCall::cszArgFmt
SteamGetEncryptedUserIDTicket::cszApi
SteamGetEncryptedUserIDTicket::cszArgFmt
SteamWaitForAppResources::cszApi
SteamWaitForAppResources::cszArgFmt
SteamWaitForResources::cszApi
SteamWaitForResources::cszArgFmt
SteamResumeCachePreloading::cszApi
SteamResumeCachePreloading::cszArgFmt
SteamPauseCachePreloading::cszApi
SteamPauseCachePreloading::cszArgFmt
SteamForgetAllHints::cszApi
SteamForgetAllHints::cszArgFmt
SteamHintResourceNeed::cszApi
SteamHintResourceNeed::cszArgFmt
(anonymous namespace)::s_uNumFsMounted
SteamIsFileImmediatelyAvailable::cszApi
SteamIsFileImmediatelyAvailable::cszArgFmt
SteamFindClose::cszApi
SteamFindClose::cszArgFmt
SteamFindNext64::cszApi
SteamFindNext64::cszArgFmt
SteamFindNext::cszApi
SteamFindNext::cszArgFmt
SteamFindFirst64::cszApi
SteamFindFirst64::cszArgFmt
SteamFindFirst::cszApi
SteamFindFirst::cszArgFmt
SteamGetLocalFileCopy::cszApi
SteamGetLocalFileCopy::cszArgFmt
SteamSizeFile64::cszApi
SteamSizeFile64::cszArgFmt
SteamSizeFile::cszApi
SteamSizeFile::cszArgFmt
SteamTellFile64::cszApi
SteamTellFile64::cszArgFmt
SteamTellFile::cszApi
SteamTellFile::cszArgFmt
SteamSeekFile64::cszApi
SteamSeekFile64::cszArgFmt
SteamSeekFile::cszApi
SteamSeekFile::cszArgFmt
SteamSetvBuf::cszApi
SteamSetvBuf::cszArgFmt
SteamPrintFile::cszApi
SteamPrintFile::cszArgFmt
SteamPutc::cszApi
SteamPutc::cszArgFmt
SteamGetc::cszApi
SteamGetc::cszArgFmt
SteamWriteFile::cszApi
SteamWriteFile::cszArgFmt
SteamReadFile::cszApi
SteamReadFile::cszArgFmt
SteamCloseFile::cszApi
SteamCloseFile::cszArgFmt
SteamOpenTmpFile::cszApi
SteamOpenTmpFile::cszArgFmt
SteamOpenFile64::cszApi
SteamOpenFile64::cszArgFmt
SteamOpenFile2::cszApi
SteamOpenFile2::cszArgFmt
SteamOpenFile::cszApi
SteamOpenFile::cszArgFmt
SteamFlushFile::cszApi
SteamFlushFile::cszArgFmt
SteamGetFileAttributeFlags::cszApi
SteamGetFileAttributeFlags::cszArgFmt
SteamStat64::cszApi
SteamStat64::cszArgFmt
SteamStat::cszApi
SteamStat::cszArgFmt
SteamUnmountFilesystem::cszApi
SteamUnmountFilesystem::cszArgFmt
SteamUnmountAppFilesystem::cszApi
SteamUnmountAppFilesystem::cszArgFmt
SteamMountFilesystem::cszApi
SteamMountFilesystem::cszArgFmt
SteamMountAppFilesystem::cszApi
SteamMountAppFilesystem::cszArgFmt
SteamChangeOfflineStatus::cszApi
SteamChangeOfflineStatus::cszArgFmt
SteamGetOfflineStatus::cszApi
SteamGetOfflineStatus::cszArgFmt
SteamNumAppsRunning::cszApi
SteamNumAppsRunning::cszArgFmt
SteamCleanup::cszApi
SteamCleanup::cszArgFmt
(anonymous namespace)::InitializeStaticData()
(anonymous namespace)::InitializeStaticData()::cszLaunchParamAppId
(anonymous namespace)::InitializeStaticData()::cszLaunchParamVerId
(anonymous namespace)::InitializeStaticData()::cszLaunchParamUser
(anonymous namespace)::InitializeStaticData()::cszNull
(anonymous namespace)::InitializeStaticData()::cszLaunchParamInstallPath
(anonymous namespace)::InitializeStaticData()::cszLaunchParamUserPassphrase
(anonymous namespace)::s_sUserPassphrase
(anonymous namespace)::InitializeStaticData()::cszEngineInSameProcessAsClient
SteamStartup::cszApi
SteamStartup::cszArgFmt
global constructors keyed to _I_Steam.cpp
(anonymous namespace)::CSteamInterface006::Win32SetMiniDumpComment(char const*)
(anonymous namespace)::CSteamInterface006::Win32SetMiniDumpSourceControlId(unsigned int)
(anonymous namespace)::CSteamInterface006::Win32SetMiniDumpEnableFullMemory()
(anonymous namespace)::CSteamInterface006::Win32WriteMiniDump(char const*, char const*, char const*, char const*, unsigned int)
(anonymous namespace)::CSteamInterface006::ForceProcessLocalEngine()
(anonymous namespace)::ISteamInterface005::~ISteamInterface005()
vtable for (anonymous namespace)::ISteamInterface005
(anonymous namespace)::ISteamInterface005::~ISteamInterface005()
(anonymous namespace)::CSteamInterface005::Win32SetMiniDumpComment(char const*)
(anonymous namespace)::CSteamInterface005::Win32SetMiniDumpSourceControlId(unsigned int)
(anonymous namespace)::CSteamInterface005::Win32SetMiniDumpEnableFullMemory()
(anonymous namespace)::CSteamInterface005::Win32WriteMiniDump(char const*, char const*, char const*, char const*, unsigned int)
(anonymous namespace)::ISteamInterface004::~ISteamInterface004()
vtable for (anonymous namespace)::ISteamInterface004
(anonymous namespace)::ISteamInterface004::~ISteamInterface004()
(anonymous namespace)::CSteamInterface004::Win32SetMiniDumpComment(char const*)
(anonymous namespace)::CSteamInterface004::Win32SetMiniDumpSourceControlId(unsigned int)
(anonymous namespace)::CSteamInterface004::Win32SetMiniDumpEnableFullMemory()
(anonymous namespace)::CSteamInterface004::Win32WriteMiniDump(char const*, char const*, char const*, char const*, unsigned int)
(anonymous namespace)::ISteamInterface003::~ISteamInterface003()
vtable for (anonymous namespace)::ISteamInterface003
(anonymous namespace)::ISteamInterface003::~ISteamInterface003()
(anonymous namespace)::CSteamInterface003::~CSteamInterface003()
(anonymous namespace)::CSteamInterface003::~CSteamInterface003()
(anonymous namespace)::CSteamInterface004::~CSteamInterface004()
(anonymous namespace)::CSteamInterface004::~CSteamInterface004()
(anonymous namespace)::CSteamInterface005::~CSteamInterface005()
(anonymous namespace)::CSteamInterface005::~CSteamInterface005()
(anonymous namespace)::CSteamInterface006::~CSteamInterface006()
(anonymous namespace)::CSteamInterface006::~CSteamInterface006()
(anonymous namespace)::ISteamInterface003::~ISteamInterface003()
(anonymous namespace)::ISteamInterface004::~ISteamInterface004()
(anonymous namespace)::ISteamInterface005::~ISteamInterface005()
(anonymous namespace)::CSteamInterface006::~CSteamInterface006()
(anonymous namespace)::CSteamInterface005::~CSteamInterface005()
(anonymous namespace)::CSteamInterface004::~CSteamInterface004()
(anonymous namespace)::CSteamInterface003::~CSteamInterface003()
(anonymous namespace)::CSteamInterface003::CreateCachePreloaders(TSteamError*)
(anonymous namespace)::CSteamInterface004::CreateCachePreloaders(TSteamError*)
(anonymous namespace)::CSteamInterface005::CreateCachePreloaders(TSteamError*)
(anonymous namespace)::CSteamInterface006::CreateCachePreloaders(TSteamError*)
(anonymous namespace)::CSteamInterface003::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
(anonymous namespace)::CSteamInterface004::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
(anonymous namespace)::CSteamInterface005::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
(anonymous namespace)::CSteamInterface006::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
(anonymous namespace)::CSteamInterface004::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
(anonymous namespace)::CSteamInterface005::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
(anonymous namespace)::CSteamInterface006::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
(anonymous namespace)::CSteamInterface003::Uninstall(TSteamError*)
(anonymous namespace)::CSteamInterface004::Uninstall(TSteamError*)
(anonymous namespace)::CSteamInterface005::Uninstall(TSteamError*)
(anonymous namespace)::CSteamInterface006::Uninstall(TSteamError*)
(anonymous namespace)::CSteamInterface003::SetAppVersion(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetAppVersion(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetAppVersion(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetAppVersion(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetAppCacheSize(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetAppCacheSize(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetAppCacheSize(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetAppCacheSize(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::MoveApp(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::MoveApp(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::MoveApp(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::MoveApp(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppDir(unsigned int, char*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppDir(unsigned int, char*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppDir(unsigned int, char*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppDir(unsigned int, char*, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetCacheDefaultDirectory(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetCacheDefaultDirectory(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetCacheDefaultDirectory(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetCacheDefaultDirectory(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetCacheDefaultDirectory(char*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetCacheDefaultDirectory(char*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetCacheDefaultDirectory(char*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCacheDefaultDirectory(char*, TSteamError*)
(anonymous namespace)::CSteamInterface003::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
(anonymous namespace)::CSteamInterface004::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
(anonymous namespace)::CSteamInterface005::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
(anonymous namespace)::CSteamInterface006::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
(anonymous namespace)::CSteamInterface003::FlushCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::FlushCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::FlushCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::FlushCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::StopLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::StopLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::StopLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::StopLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::IsSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppDependencies(unsigned int, unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppDependencies(unsigned int, unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppDependencies(unsigned int, unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppDependencies(unsigned int, unsigned int*, unsigned int, bool, TSteamError*)
(anonymous namespace)::CSteamInterface003::FindApp(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::FindApp(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::FindApp(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::FindApp(char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface004::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface005::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface006::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface003::StartLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::StartLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::StartLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::StartLoadingCache(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::DeleteAccount(TSteamError*)
(anonymous namespace)::CSteamInterface004::DeleteAccount(TSteamError*)
(anonymous namespace)::CSteamInterface005::DeleteAccount(TSteamError*)
(anonymous namespace)::CSteamInterface006::DeleteAccount(TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
(anonymous namespace)::CSteamInterface003::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
(anonymous namespace)::CSteamInterface004::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
(anonymous namespace)::CSteamInterface005::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
(anonymous namespace)::CSteamInterface006::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::AckSubscriptionReceipt(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::AckSubscriptionReceipt(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::AckSubscriptionReceipt(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::AckSubscriptionReceipt(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::Login(char const*, char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface004::Login(char const*, char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface005::Login(char const*, char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface006::Login(char const*, char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetUser(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetUser(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetUser(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetUser(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAccountStatus(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAccountStatus(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAccountStatus(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAccountStatus(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
(anonymous namespace)::CSteamInterface003::Unsubscribe(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::Unsubscribe(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::Unsubscribe(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::Unsubscribe(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RefreshAccountInfo(TSteamError*)
(anonymous namespace)::CSteamInterface004::RefreshAccountInfo(TSteamError*)
(anonymous namespace)::CSteamInterface005::RefreshAccountInfo(int, TSteamError*)
(anonymous namespace)::CSteamInterface006::RefreshAccountInfo(int, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppIds(unsigned int*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::IsAccountNameInUse(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsAccountNameInUse(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsAccountNameInUse(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsAccountNameInUse(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetAppStats(TSteamAppStats*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppStats(TSteamAppStats*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppStats(TSteamAppStats*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppStats(TSteamAppStats*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetUserType(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetUserType(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetUserType(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetUserType(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::VerifyPassword(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::VerifyPassword(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::VerifyPassword(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::VerifyPassword(char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RefreshLogin(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface004::RefreshLogin(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface005::RefreshLogin(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface006::RefreshLogin(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface003::LogResourceLoadFinished(char const*)
(anonymous namespace)::CSteamInterface004::LogResourceLoadFinished(char const*)
(anonymous namespace)::CSteamInterface005::LogResourceLoadFinished(char const*)
(anonymous namespace)::CSteamInterface006::LogResourceLoadFinished(char const*)
(anonymous namespace)::CSteamInterface003::LogResourceLoadStarted(char const*)
(anonymous namespace)::CSteamInterface004::LogResourceLoadStarted(char const*)
(anonymous namespace)::CSteamInterface005::LogResourceLoadStarted(char const*)
(anonymous namespace)::CSteamInterface006::LogResourceLoadStarted(char const*)
(anonymous namespace)::CSteamInterface003::Log(unsigned int, char const*)
(anonymous namespace)::CSteamInterface004::Log(unsigned int, char const*)
(anonymous namespace)::CSteamInterface005::Log(unsigned int, char const*)
(anonymous namespace)::CSteamInterface006::Log(unsigned int, char const*)
(anonymous namespace)::CSteamInterface003::CreateLogContext(char const*)
(anonymous namespace)::CSteamInterface004::CreateLogContext(char const*)
(anonymous namespace)::CSteamInterface005::CreateLogContext(char const*)
(anonymous namespace)::CSteamInterface006::CreateLogContext(char const*)
(anonymous namespace)::CSteamInterface003::IsSecureComputer(int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsSecureComputer(int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsSecureComputer(int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsSecureComputer(int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::Logout(TSteamError*)
(anonymous namespace)::CSteamInterface004::Logout(TSteamError*)
(anonymous namespace)::CSteamInterface005::Logout(TSteamError*)
(anonymous namespace)::CSteamInterface006::Logout(TSteamError*)
(anonymous namespace)::CSteamInterface003::IsLoggedIn(int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsLoggedIn(int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsLoggedIn(int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsLoggedIn(int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::NumAppsRunning(TSteamError*)
(anonymous namespace)::CSteamInterface004::NumAppsRunning(TSteamError*)
(anonymous namespace)::CSteamInterface005::NumAppsRunning(TSteamError*)
(anonymous namespace)::CSteamInterface006::NumAppsRunning(TSteamError*)
(anonymous namespace)::CSteamInterface003::Cleanup(TSteamError*)
(anonymous namespace)::CSteamInterface004::Cleanup(TSteamError*)
(anonymous namespace)::CSteamInterface005::Cleanup(TSteamError*)
(anonymous namespace)::CSteamInterface006::Cleanup(TSteamError*)
(anonymous namespace)::CSteamInterface003::Startup(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::Startup(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::Startup(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::Startup(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::ShutdownEngine(TSteamError*)
(anonymous namespace)::CSteamInterface004::ShutdownEngine(TSteamError*)
(anonymous namespace)::CSteamInterface005::ShutdownEngine(TSteamError*)
(anonymous namespace)::CSteamInterface006::ShutdownEngine(TSteamError*)
(anonymous namespace)::CSteamInterface003::StartEngine(TSteamError*)
(anonymous namespace)::CSteamInterface004::StartEngine(TSteamError*)
(anonymous namespace)::CSteamInterface005::StartEngine(TSteamError*)
(anonymous namespace)::CSteamInterface003::WaitForResources(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::WaitForResources(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::WaitForResources(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::WaitForResources(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ResumeCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface004::ResumeCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface005::ResumeCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface006::ResumeCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface003::PauseCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface004::PauseCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface005::PauseCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface006::PauseCachePreloading(TSteamError*)
(anonymous namespace)::CSteamInterface003::ForgetAllHints(TSteamError*)
(anonymous namespace)::CSteamInterface004::ForgetAllHints(TSteamError*)
(anonymous namespace)::CSteamInterface005::ForgetAllHints(TSteamError*)
(anonymous namespace)::CSteamInterface006::ForgetAllHints(TSteamError*)
(anonymous namespace)::CSteamInterface003::HintResourceNeed(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface004::HintResourceNeed(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface005::HintResourceNeed(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface006::HintResourceNeed(char const*, int, TSteamError*)
(anonymous namespace)::CSteamInterface003::IsFileImmediatelyAvailable(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::IsFileImmediatelyAvailable(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsFileImmediatelyAvailable(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsFileImmediatelyAvailable(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetLocalFileCopy(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetLocalFileCopy(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetLocalFileCopy(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetLocalFileCopy(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::FindClose(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::FindClose(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::FindClose(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::FindClose(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface004::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface005::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface006::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface003::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface004::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface005::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface006::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface003::SizeFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::SizeFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::SizeFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::SizeFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::TellFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::TellFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::TellFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::TellFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
(anonymous namespace)::CSteamInterface004::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
(anonymous namespace)::CSteamInterface005::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
(anonymous namespace)::CSteamInterface006::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
(anonymous namespace)::CSteamInterface003::Putc(int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::Putc(int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::Putc(int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::Putc(int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::Getc(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::Getc(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::Getc(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::Getc(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::WriteFile(void const*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::WriteFile(void const*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::WriteFile(void const*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::WriteFile(void const*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::ReadFile(void*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::ReadFile(void*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::ReadFile(void*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::ReadFile(void*, unsigned int, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::CloseFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::CloseFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::CloseFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::CloseFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetMaxStallCount(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetMaxStallCount(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetMaxStallCount(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetMaxStallCount(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::BlockingCall(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::BlockingCall(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::BlockingCall(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::BlockingCall(unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::AbortCall(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::AbortCall(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::AbortCall(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::AbortCall(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetVersion(char*, unsigned int)
(anonymous namespace)::CSteamInterface004::GetVersion(char*, unsigned int)
(anonymous namespace)::CSteamInterface005::GetVersion(char*, unsigned int)
(anonymous namespace)::CSteamInterface006::GetVersion(char*, unsigned int)
(anonymous namespace)::CSteamInterface003::ClearError(TSteamError*)
(anonymous namespace)::CSteamInterface004::ClearError(TSteamError*)
(anonymous namespace)::CSteamInterface005::ClearError(TSteamError*)
(anonymous namespace)::CSteamInterface006::ClearError(TSteamError*)
(anonymous namespace)::CSteamInterface003::OpenTmpFile(TSteamError*)
(anonymous namespace)::CSteamInterface004::OpenTmpFile(TSteamError*)
(anonymous namespace)::CSteamInterface005::OpenTmpFile(TSteamError*)
(anonymous namespace)::CSteamInterface006::OpenTmpFile(TSteamError*)
(anonymous namespace)::CSteamInterface003::OpenFileEx(char const*, char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::OpenFileEx(char const*, char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::OpenFile(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::OpenFile(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::OpenFile(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::OpenFile(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::FlushFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::FlushFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::FlushFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::FlushFile(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::SetvBuf(unsigned int, void*, ESteamBufferMethod, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::SetvBuf(unsigned int, void*, ESteamBufferMethod, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::SetvBuf(unsigned int, void*, ESteamBufferMethod, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetvBuf(unsigned int, void*, ESteamBufferMethod, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::Stat(char const*, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface004::Stat(char const*, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface005::Stat(char const*, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface006::Stat(char const*, TSteamElemInfo*, TSteamError*)
(anonymous namespace)::CSteamInterface003::UnmountFilesystem(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface004::UnmountFilesystem(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::UnmountFilesystem(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::UnmountFilesystem(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface003::MountFilesystem(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::MountFilesystem(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::MountFilesystem(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::MountFilesystem(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::UnmountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface004::UnmountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface005::UnmountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface006::UnmountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface003::MountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface004::MountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface005::MountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface006::MountAppFilesystem(TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangeAccountName(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangeAccountName(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangeAccountName(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangeAccountName(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::RequestEmailAddressVerificationEmail(TSteamError*)
(anonymous namespace)::CSteamInterface004::RequestEmailAddressVerificationEmail(TSteamError*)
(anonymous namespace)::CSteamInterface005::RequestEmailAddressVerificationEmail(TSteamError*)
(anonymous namespace)::CSteamInterface006::RequestEmailAddressVerificationEmail(TSteamError*)
(anonymous namespace)::CSteamInterface003::VerifyEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::VerifyEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::VerifyEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::VerifyEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangeEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangeEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangeEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangeEmailAddress(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface003::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface003::ChangePassword(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::ChangePassword(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface005::ChangePassword(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ChangePassword(char const*, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface004::GetCurrentAppId(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetCurrentAppId(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCurrentAppId(unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetAppUserDefinedRecord(unsigned int, void (*)(char const*, char const*, void*), void*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppUserDefinedRecord(unsigned int, void (*)(char const*, char const*, void*), void*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSubscriptionPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSubscriptionPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetSubscriptionExtendedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetSubscriptionExtendedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetCacheDecryptionKey(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCacheDecryptionKey(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::IsFileNeededByCache(unsigned int, char const*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsFileNeededByCache(unsigned int, char const*, unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface005::GetLocalClientVersion(unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetLocalClientVersion(unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface005::OpenFileEx(char const*, char const*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::OpenFileEx(char const*, char const*, int, unsigned int*, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::SetUser2(char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCurrentCellID(unsigned int*, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetDepotParent(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsUsingSdkContentServer(int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::StartEngineEx(TSteamError*, bool, bool)
(anonymous namespace)::CSteamInterface006::StartEngine(TSteamError*)
(anonymous namespace)::CSteamInterface006::GetAppDLCStatus(unsigned int, unsigned int, int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::ForceCellId(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::WaitForAppResources(unsigned int, char const*, TSteamError*)
(anonymous namespace)::CSteamInterface006::IsFileNeededByApp(unsigned int, char const*, unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::DefragCaches(unsigned int, TSteamError*)
(anonymous namespace)::CSteamInterface006::GetCachePercentFragmentation(unsigned int, unsigned int*, TSteamError*)
(anonymous namespace)::CSteamInterface006::CheckAppOwnership(unsigned int, int*, TSteamGlobalUserID*, TSteamError*)
(anonymous namespace)::CSteamInterface006::FindServersGetErrorString()
(anonymous namespace)::CSteamInterface006::FindServersIterateServer(ESteamServerType, unsigned int, char*, int)
(anonymous namespace)::CSteamInterface006::FindServersNumServers(ESteamServerType)
guard variable for CreateInterface::AppSystem001
CreateInterface::AppSystem001
guard variable for _f::steamInterface003
guard variable for _f::steamInterface004
guard variable for _f::steamInterface005
guard variable for _f::steamInterface006
_f::steamInterface003
_f::steamInterface004
_f::steamInterface005
_f::steamInterface006
vtable for (anonymous namespace)::CSteamInterface006
vtable for (anonymous namespace)::CSteamInterface005
vtable for (anonymous namespace)::CSteamInterface004
vtable for (anonymous namespace)::CSteamInterface003
typeinfo for (anonymous namespace)::CSteamInterface003
typeinfo for (anonymous namespace)::ISteamInterface003
typeinfo for (anonymous namespace)::CSteamInterface004
typeinfo for (anonymous namespace)::ISteamInterface004
typeinfo for (anonymous namespace)::CSteamInterface005
typeinfo for (anonymous namespace)::ISteamInterface005
typeinfo for (anonymous namespace)::CSteamInterface006
typeinfo name for (anonymous namespace)::CSteamInterface003
typeinfo name for (anonymous namespace)::ISteamInterface003
typeinfo name for (anonymous namespace)::CSteamInterface004
typeinfo name for (anonymous namespace)::ISteamInterface004
typeinfo name for (anonymous namespace)::CSteamInterface005
typeinfo name for (anonymous namespace)::ISteamInterface005
typeinfo name for (anonymous namespace)::CSteamInterface006
(anonymous namespace)::CClientCallbackSignalConnector::CallbackSlot(ESteamNotificationCallbackEvent, unsigned int)
sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::getdest() const
sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::emit(ESteamNotificationCallbackEvent, unsigned int)
sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::clone()
vtable for sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
(anonymous namespace)::TAccountEntry::TAccountEntry()
(anonymous namespace)::TAccountEntry::TAccountEntry()
std::basic_iostream<char, std::char_traits<char>>::~basic_iostream() (.clone.268)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::_M_insert_unique(std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>> const&)
(anonymous namespace)::InternalHandleApiError(bool, char const*, char const*, ...)
(anonymous namespace)::s_pLogContextError
sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::duplicate(sigslot::has_slots<sigslot::multi_threaded_local>*)
(anonymous namespace)::ValidateAndClearErrorThenMakeSureStartupHasBeenCalled(TSteamError*)
(anonymous namespace)::bEngineInitialized
std::map<std::string, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::find(std::string const&) (.clone.264)
(anonymous namespace)::s_AccountList
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>> const&) (.clone.280)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::_M_insert_unique(std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>> const&) (.clone.281)
(anonymous namespace)::LogApiCall(common::CLogContext*, char const*, char const*, ...)
Grid::GetBoolText(int*)::cszEmpty
Grid::GetBoolText(int*)::cszTrue
Grid::GetBoolText(int*)::cszFalse
(anonymous namespace)::s_bMinidumpSystemInitialized
(anonymous namespace)::InternalHandleApiError(TSteamError*, std::exception const&, bool, char const*, char const*, ...)
(anonymous namespace)::InternalHandleUnknownApiError(TSteamError*, bool, char const*) (.clone.263)
(anonymous namespace)::s_pClientManager
InternalSteamShouldShutdownEngine2::cszArgFmt
InternalSteamShouldShutdownEngine2::cszApi
(anonymous namespace)::s_pLogContextMisc
InternalSteamNumClientsConnectedToEngine::cszArgFmt
InternalSteamNumClientsConnectedToEngine::cszApi
(anonymous namespace)::s_ClientAccountMap
Grid::InternalSteamGetOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)::cszApi
Grid::InternalSteamChangeOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangeOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)::cszApi
Grid::InternalSteamUnmountFilesystem(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamUnmountFilesystem(unsigned int, unsigned int, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextFilesystem
Grid::InternalSteamStat64(unsigned int, char const*, TSteamElemInfo64*, TSteamError*)::cszArgFmt
Grid::InternalSteamStat64(unsigned int, char const*, TSteamElemInfo64*, TSteamError*)::cszApi
Grid::InternalSteamGetFlags(unsigned int, char const*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetFlags(unsigned int, char const*, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamFlushFile(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamFlushFile(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamOpenFile(unsigned int, char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)::cszApi
Grid::InternalSteamOpenFile(unsigned int, char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)::cszArgFmt
Grid::InternalSteamOpenFile2(unsigned int, char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)::cszApi
Grid::InternalSteamOpenFile2(unsigned int, char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)::cszArgFmt
Grid::InternalSteamOpenFile64(unsigned int, char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)::cszApi
Grid::InternalSteamOpenFile64(unsigned int, char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)::cszArgFmt
Grid::InternalSteamOpenTmpFile(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamOpenTmpFile(unsigned int, TSteamError*)::cszApi
Grid::InternalSteamCloseFile(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamCloseFile(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamReadFile(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamReadFile(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamReadFile64(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)::cszArgFmt
Grid::InternalSteamReadFile64(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)::cszApi
Grid::InternalSteamWriteFile(unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamWriteFile(unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetc(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamGetc(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamPutc(unsigned int, int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamPutc(unsigned int, int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamSeekFile64(unsigned int, unsigned int, long long, ESteamSeekMethod, TSteamError*)::cszArgFmt
Grid::InternalSteamSeekFile64(unsigned int, unsigned int, long long, ESteamSeekMethod, TSteamError*)::cszApi
Grid::InternalSteamTellFile64(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamTellFile64(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamSizeFile64(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamSizeFile64(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetLocalFileCopy(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetLocalFileCopy(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamFindFirst64(unsigned int, char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)::cszApi
Grid::InternalSteamFindFirst64(unsigned int, char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)::cszArgFmt
Grid::InternalSteamFindNext64(unsigned int, unsigned int, TSteamElemInfo64*, TSteamError*)::cszArgFmt
Grid::InternalSteamFindNext64(unsigned int, unsigned int, TSteamElemInfo64*, TSteamError*)::cszApi
Grid::InternalSteamFindClose(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamFindClose(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamIsFileImmediatelyAvailable(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsFileImmediatelyAvailable(unsigned int, char const*, TSteamError*)::cszApi
(anonymous namespace)::s_uMaxCallSpins
Grid::InternalSteamSetMaxStallCount(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamSetMaxStallCount(unsigned int, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextAsyncCall
Grid::InternalSteamGetCacheFilePath(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCacheFilePath(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextAccount
Grid::InternalSteamIsFileNeededByCache(unsigned int, unsigned int, char const*, unsigned long long, TSteamError*)::cszArgFmt
Grid::InternalSteamIsFileNeededByCache(unsigned int, unsigned int, char const*, unsigned long long, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextCache
Grid::InternalSteamLoadFileToCache(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::cszArgFmt
Grid::InternalSteamLoadFileToCache(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::cszApi
Grid::InternalSteamGetCacheDecryptionKey(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCacheDecryptionKey(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetSponsorUrl(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetSponsorUrl(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetContentServerInfo(unsigned int, unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetContentServerInfo(unsigned int, unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetAppDLCStatus(unsigned int, unsigned int, unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppDLCStatus(unsigned int, unsigned int, unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamBlockingCall(unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
(anonymous namespace)::ManagePendingAccountIfAny(unsigned int)
(anonymous namespace)::ClearCallFromClientList(unsigned int, unsigned int)
Grid::InternalSteamBlockingCall(unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamAbortCall(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamAbortCall(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamProcessCall(unsigned int, unsigned int, TSteamProgress*, TSteamError*)::cszApi
Grid::InternalSteamProcessCall(unsigned int, unsigned int, TSteamProgress*, TSteamError*)::cszArgFmt
common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>::~CThreadSafeCountedPtr()
common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>::~CThreadSafeCountedPtr()
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>*)
std::map<std::string, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::~map()
std::map<std::string, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::~map()
common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>::operator=(common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry> const&)
std::map<std::string, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>>>>::operator[](std::string const&) (.clone.265)
Grid::InternalSteamWasBlobRegistryDeleted(unsigned int, int*, TSteamError*)::nDeletedFlag
Grid::InternalSteamWasBlobRegistryDeleted(unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamWasBlobRegistryDeleted(unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamGetLocalClientVersion(unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetLocalClientVersion(unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetCurrentCellID(unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCurrentCellID(unsigned int, unsigned int*, unsigned int*, TSteamError*)::cszApi
(anonymous namespace)::TClientAccountInfo::Init()
(anonymous namespace)::CClientCallbackSignalConnector::SetSource(sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>&)
(anonymous namespace)::s_AccountTableLock
(anonymous namespace)::AssociateCallToClient(unsigned int, unsigned int)
Grid::InternalSteamGetNumAccountsWithEmailAddress(unsigned int, char const*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetNumAccountsWithEmailAddress(unsigned int, char const*, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamRequestAccountsByCdKeyEmail(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamRequestAccountsByCdKeyEmail(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamRequestAccountsByEmailAddressEmail(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamRequestAccountsByEmailAddressEmail(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamRequestForgottenPasswordEmail(unsigned int, char const*, char*, TSteamError*)::cszArgFmt
Grid::InternalSteamRequestForgottenPasswordEmail(unsigned int, char const*, char*, TSteamError*)::cszApi
Grid::InternalSteamChangeForgottenPassword(unsigned int, char const*, char const*, char const*, char const*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangeForgottenPassword(unsigned int, char const*, char const*, char const*, char const*, int*, TSteamError*)::cszApi
Grid::InternalSteamUninstall(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamUninstall(unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetAppCacheSize(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppCacheSize(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGenerateSuggestedAccountNames(unsigned int, char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGenerateSuggestedAccountNames(unsigned int, char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamIsAccountNameInUse(unsigned int, char const*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsAccountNameInUse(unsigned int, char const*, int*, TSteamError*)::cszApi
Grid::InternalSteamCreateAccount(unsigned int, char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamCreateAccount(unsigned int, char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)::cszApi
(anonymous namespace)::FindAccount(std::string const&, common::CThreadSafeCountedPtr<(anonymous namespace)::TAccountEntry>&)
(anonymous namespace)::GetAccount(unsigned int)
Grid::InternalSteamForceCellId(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamForceCellId(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetTotalUpdateStats(unsigned int, TSteamUpdateStats*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetTotalUpdateStats(unsigned int, TSteamUpdateStats*, TSteamError*)::cszApi
Grid::InternalSteamGetAppUpdateStats(unsigned int, unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppUpdateStats(unsigned int, unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)::cszApi
Grid::InternalSteamGetCurrentEmailAddress(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCurrentEmailAddress(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetAppDir(unsigned int, unsigned int, char*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppDir(unsigned int, unsigned int, char*, TSteamError*)::cszApi
Grid::InternalSteamSetCacheDefaultDirectory(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamSetCacheDefaultDirectory(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamGetCacheDefaultDirectory(unsigned int, char*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCacheDefaultDirectory(unsigned int, char*, TSteamError*)::cszApi
Grid::InternalSteamLoadFileToApp(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::cszArgFmt
Grid::InternalSteamLoadFileToApp(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)::cszApi
Grid::InternalSteamIsFileNeededByApp(unsigned int, unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsFileNeededByApp(unsigned int, unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamIsCacheLoadingEnabled(unsigned int, unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsCacheLoadingEnabled(unsigned int, unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamGetAppUserDefinedRecord(unsigned int, unsigned int, common::CMallocedBlock&, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppUserDefinedRecord(unsigned int, unsigned int, common::CMallocedBlock&, TSteamError*)::cszApi
Grid::InternalSteamGetAppUserDefinedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetAppUserDefinedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppDependencies(unsigned int, unsigned int, unsigned int*, unsigned int, bool, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppDependencies(unsigned int, unsigned int, unsigned int*, unsigned int, bool, TSteamError*)::cszApi
Grid::InternalSteamFindApp(unsigned int, char const*, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamFindApp(unsigned int, char const*, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamRemoveAppDependency(unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamRemoveAppDependency(unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextAppDependencies
Grid::InternalSteamInsertAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::cszArgFmt
Grid::InternalSteamInsertAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateAppIcon(unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateAppIcon(unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateAppLaunchOption(unsigned int, unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateAppLaunchOption(unsigned int, unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateAppVersion(unsigned int, unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateAppVersion(unsigned int, unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetSubscriptionPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamGetAppPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamGetDepotParent(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetDepotParent(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateApp(unsigned int, unsigned int, TSteamApp*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateApp(unsigned int, unsigned int, TSteamApp*, TSteamError*)::cszApi
Grid::InternalSteamGetAppIds(unsigned int, unsigned int*, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppIds(unsigned int, unsigned int*, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetAppStats(unsigned int, TSteamAppStats*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAppStats(unsigned int, TSteamAppStats*, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionExtendedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionExtendedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateSubscriptionDiscount(unsigned int, unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateSubscriptionDiscount(unsigned int, unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)::cszApi
Grid::InternalSteamEnumerateSubscription(unsigned int, unsigned int, TSteamSubscription*, TSteamError*)::cszArgFmt
Grid::InternalSteamEnumerateSubscription(unsigned int, unsigned int, TSteamSubscription*, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionIds(unsigned int, unsigned int*, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamGetSubscriptionIds(unsigned int, unsigned int*, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionStats(unsigned int, TSteamSubscriptionStats*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetSubscriptionStats(unsigned int, TSteamSubscriptionStats*, TSteamError*)::cszApi
Grid::InternalSteamIsAppSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsAppSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)::cszApi
Grid::InternalSteamIsSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)::cszApi
Grid::InternalSteamGetSubscriptionReceipt(unsigned int, unsigned int, TSteamSubscriptionReceipt*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetSubscriptionReceipt(unsigned int, unsigned int, TSteamSubscriptionReceipt*, TSteamError*)::cszApi
Grid::InternalSteamVerifyPassword(unsigned int, char const*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamVerifyPassword(unsigned int, char const*, int*, TSteamError*)::cszApi
Grid::InternalSteamGetAccountStatus(unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetAccountStatus(unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamGetUserType(unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetUserType(unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamIsSecureComputer(unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsSecureComputer(unsigned int, int*, TSteamError*)::cszApi
Grid::InternalSteamGetUser(unsigned int, char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetUser(unsigned int, char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)::cszApi
Grid::InternalSteamWaitForResources(unsigned int, unsigned int, bool, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamWaitForResources(unsigned int, unsigned int, bool, char const*, TSteamError*)::cszApi
Grid::InternalSteamUpdateSubscriptionBillingInfo(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::cszArgFmt
Grid::InternalSteamUpdateSubscriptionBillingInfo(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::cszApi
Grid::InternalSteamUpdateAccountBillingInfo(unsigned int, TSteamPaymentCardInfo const*, TSteamError*)::cszArgFmt
Grid::InternalSteamUpdateAccountBillingInfo(unsigned int, TSteamPaymentCardInfo const*, TSteamError*)::cszApi
Grid::InternalSteamRequestEmailAddressVerificationEmail(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamRequestEmailAddressVerificationEmail(unsigned int, TSteamError*)::cszApi
Grid::InternalSteamVerifyEmailAddress(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamVerifyEmailAddress(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamChangeEmailAddress(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangeEmailAddress(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamChangePersonalQA(unsigned int, char const*, char const*, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangePersonalQA(unsigned int, char const*, char const*, char const*, TSteamError*)::cszApi
Grid::InternalSteamChangePassword(unsigned int, char const*, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangePassword(unsigned int, char const*, char const*, TSteamError*)::cszApi
Grid::InternalSteamSetAppVersion(unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamSetAppVersion(unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamSetAppCacheSize(unsigned int, unsigned int, unsigned int, bool, TSteamError*)::cszArgFmt
Grid::InternalSteamSetAppCacheSize(unsigned int, unsigned int, unsigned int, bool, TSteamError*)::cszApi
Grid::InternalSteamMoveApp(unsigned int, unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamMoveApp(unsigned int, unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamRefreshMinimumFootprintFiles(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamRefreshMinimumFootprintFiles(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamLoadCacheFromDir(unsigned int, unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamLoadCacheFromDir(unsigned int, unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamDefragCaches(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamDefragCaches(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamGetCachePercentFragmentation(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCachePercentFragmentation(unsigned int, unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamRepairOrDecryptCaches(unsigned int, unsigned int, int, TSteamError*)::cszArgFmt
Grid::InternalSteamRepairOrDecryptCaches(unsigned int, unsigned int, int, TSteamError*)::cszApi
Grid::InternalSteamFlushCache(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamFlushCache(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamStopLoadingCache(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamStopLoadingCache(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamStartLoadingCache(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamStartLoadingCache(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamCreateCachePreloaders(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamCreateCachePreloaders(unsigned int, TSteamError*)::cszApi
Grid::InternalSteamLaunchApp(unsigned int, unsigned int, unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamLaunchApp(unsigned int, unsigned int, unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamWaitForAppReadyToLaunch(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamWaitForAppReadyToLaunch(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamAckSubscriptionReceipt(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamAckSubscriptionReceipt(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamUnsubscribe(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamUnsubscribe(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamSubscribe(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::cszArgFmt
Grid::InternalSteamSubscribe(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)::cszApi
Grid::InternalSteamRefreshLogin(unsigned int, char const*, int, TSteamError*)::cszArgFmt
Grid::InternalSteamRefreshLogin(unsigned int, char const*, int, TSteamError*)::cszApi
(anonymous namespace)::GetClientEntry(unsigned int)
(anonymous namespace)::CClientCallbackSignalConnector::~CClientCallbackSignalConnector()
vtable for (anonymous namespace)::CClientCallbackSignalConnector
(anonymous namespace)::CClientCallbackSignalConnector::~CClientCallbackSignalConnector()
(anonymous namespace)::CClientCallbackSignalConnector::~CClientCallbackSignalConnector()
(anonymous namespace)::TClientAccountInfo::~TClientAccountInfo()
(anonymous namespace)::TClientAccountInfo::~TClientAccountInfo()
common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>::~CThreadSafeCountedPtr()
common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>::~CThreadSafeCountedPtr()
(anonymous namespace)::s_pLogContextAccountManagement
Grid::InternalSteamEndClient(unsigned int)::cszApi
Grid::InternalSteamEndClient(unsigned int)::cszArgFmt
Grid::InternalSteamGetCurrentAppId(unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetCurrentAppId(unsigned int, unsigned int*, TSteamError*)::cszApi
Grid::InternalSteamRefreshAccountInfo(unsigned int, int, int, TSteamError*)::cszArgFmt
Grid::InternalSteamRefreshAccountInfo(unsigned int, int, int, TSteamError*)::cszApi
Grid::InternalSteamIsLoggedIn(unsigned int, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamIsLoggedIn(unsigned int, int*, TSteamError*)::cszApi
(anonymous namespace)::s_PendingAccountsMap
Grid::InternalSteamResumeCachePreloading(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamResumeCachePreloading(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamPauseCachePreloading(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamPauseCachePreloading(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamForgetAllHints(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamForgetAllHints(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamHintResourceNeed(unsigned int, unsigned int, char const*, int, TSteamError*)::cszArgFmt
Grid::InternalSteamHintResourceNeed(unsigned int, unsigned int, char const*, int, TSteamError*)::cszApi
Grid::InternalSteamMountFilesystem(unsigned int, unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamMountFilesystem(unsigned int, unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamUnmountAppFilesystem(unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamUnmountAppFilesystem(unsigned int, unsigned int, TSteamError*)::cszApi
Grid::InternalSteamMountAppFilesystem(unsigned int, unsigned int, unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamMountAppFilesystem(unsigned int, unsigned int, unsigned int, TSteamError*)::cszApi
std::map<unsigned int, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::operator[](unsigned int const&)
Grid::InternalSteamChangeAccountName(unsigned int, char const*, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamChangeAccountName(unsigned int, char const*, char const*, TSteamError*)::cszApi
Grid::InternalSteamLogout(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamLogout(unsigned int, TSteamError*)::cszApi
Grid::InternalSteamLogin(unsigned int, char const*, char const*, int, TSteamError*)::cszArgFmt
Grid::InternalSteamLogin(unsigned int, char const*, char const*, int, TSteamError*)::cszApi
Grid::InternalSteamSetUser2(unsigned int, char const*, TSteamError*)::cszArgFmt
Grid::InternalSteamSetUser2(unsigned int, char const*, TSteamError*)::cszApi
Grid::InternalSteamSetUser(unsigned int, char const*, int*, TSteamError*)::cszArgFmt
Grid::InternalSteamSetUser(unsigned int, char const*, int*, TSteamError*)::cszApi
Grid::InternalSteamDeleteAccount(unsigned int, TSteamError*)::cszArgFmt
Grid::InternalSteamDeleteAccount(unsigned int, TSteamError*)::cszApi
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>*)
std::map<unsigned int, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::~map()
std::map<unsigned int, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<(anonymous namespace)::TClientAccountInfo>>>>::~map()
SteamShutdownEngine::cszArgFmt
SteamShutdownEngine::cszApi
SteamShutdownSteamBridgeInterface::cszArgFmt
SteamShutdownSteamBridgeInterface::cszApi
Grid::InternalSteamNewClient(unsigned int, char const*, char const*, char const*, sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>**)::s_SteamAppsDir
Grid::InternalSteamGetEncryptedUserIDTicket(unsigned int, void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)::cszArgFmt
Grid::InternalSteamGetEncryptedUserIDTicket(unsigned int, void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)::cszApi
(anonymous namespace)::s_pLogContextUserId
(anonymous namespace)::s_pLog
(anonymous namespace)::s_pLogGroup
SteamStartEngineEx::cszArgFmt
SteamStartEngineEx::cszApi
(anonymous namespace)::EnsureAppId()::cszLaunchParamAppId
global constructors keyed to _I_SteamInternal.cpp
typeinfo for (anonymous namespace)::CClientCallbackSignalConnector
typeinfo for sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
typeinfo name for (anonymous namespace)::CClientCallbackSignalConnector
typeinfo name for sigslot::_connection2<(anonymous namespace)::CClientCallbackSignalConnector, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
(anonymous namespace)::AbortInUseValidationContextNoThrow((anonymous namespace)::TValidationContext*)
(anonymous namespace)::s_listFreeValidationContexts
(anonymous namespace)::GetSteamIDFromTGT(unsigned char*, unsigned char*, unsigned long long*)
(anonymous namespace)::UninitializeLibraryNoThrow()
(anonymous namespace)::s_rcpRNG
(anonymous namespace)::s_mbPublicEncryptionKeyForClient
(anonymous namespace)::s_mbPrivateDecryptionKey
(anonymous namespace)::s_mbUserIDTicketValidationSignatureRSAPublicKey
(anonymous namespace)::s_mbNewValveCDKeyValidationSignatureRSAPublicKey
(anonymous namespace)::s_apUsedAuthenticatorTimestampsCache
std::list<common::CCountedPtr<(anonymous namespace)::TValidationContext>, std::allocator<common::CCountedPtr<(anonymous namespace)::TValidationContext>>>::~list()
std::list<common::CCountedPtr<(anonymous namespace)::TValidationContext>, std::allocator<common::CCountedPtr<(anonymous namespace)::TValidationContext>>>::~list()
(anonymous namespace)::TValidationContext::~TValidationContext()
(anonymous namespace)::TValidationContext::~TValidationContext()
common::CCountedPtr<(anonymous namespace)::TValidationContext>::~CCountedPtr()
common::CCountedPtr<(anonymous namespace)::TValidationContext>::~CCountedPtr()
(anonymous namespace)::ObtainValidationContext(bool, unsigned int)
(anonymous namespace)::s_listInUseValidationContexts
(anonymous namespace)::s_uAbortValidationAfterStallingForNProcessSteps
(anonymous namespace)::s_setBadVTSAddressCache
(anonymous namespace)::s_mapGoodVTSAddressPortCache
(anonymous namespace)::s_timeWipedBadVTSAddressCache
(anonymous namespace)::InternalSteamInitializeUserIDTicketValidator(char const*, char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
(anonymous namespace)::s_ClientClockSkewToleranceInSeconds
global constructors keyed to _I_SteamValidateUserIDTickets.cpp
.L1915
.L1916
.L1917
.L1918
.L1919
.L1920
.L1921
.L1922
.L1923
.L1924
.L1925
.L1926
.L1927
.L1928
.L1929
std::_Vector_base<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>::_M_deallocate(common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, unsigned int) (.clone.159)
common::ConvertIpAdrsToString(unsigned int, unsigned short, char) (.clone.396)
common::CMultiFieldBlob::FindFieldData(unsigned short, unsigned char const*, unsigned int*, common::CMultiFieldBlob::index_iterator*) (.clone.406)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::find(std::string const&) (.clone.392)
(anonymous namespace)::s_CacheTable
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>> const&) (.clone.418)
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::_M_insert_unique(std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>> const&) (.clone.420)
std::_Rb_tree<std::string, std::pair<std::string const, (anonymous namespace)::TCacheMutex>, std::_Select1st<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, (anonymous namespace)::TCacheMutex> const&) (.clone.413)
(anonymous namespace)::s_CacheMutexTable
std::_Rb_tree<std::string, std::pair<std::string const, (anonymous namespace)::TCacheMutex>, std::_Select1st<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>>::_M_insert_unique(std::pair<std::string const, (anonymous namespace)::TCacheMutex> const&) (.clone.419)
(anonymous namespace)::ReleaseCacheMutex(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&)
Grid::CTicketCache::CImpl::ClearTicketsAndPassphrase(unsigned int) (.clone.407)
(anonymous namespace)::s_TableLock
std::map<std::string, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::operator[](std::string const&) (.clone.414)
std::_Rb_tree<std::string, std::pair<std::string const, (anonymous namespace)::TCacheMutex>, std::_Select1st<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>*)
std::map<std::string, (anonymous namespace)::TCacheMutex, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>>::~map()
std::map<std::string, (anonymous namespace)::TCacheMutex, std::less<std::string>, std::allocator<std::pair<std::string const, (anonymous namespace)::TCacheMutex>>>::~map()
global constructors keyed to _I_TicketCache.cpp
(anonymous namespace)::TakeCacheMutex(std::string const&)
global constructors keyed to _I_TicketWatchThread.cpp
std::_Deque_base<aiocb*, std::allocator<aiocb*>>::_M_initialize_map(unsigned int) (.clone.261)
std::deque<std::pair<aiocb*, unsigned long>, std::allocator<std::pair<aiocb*, unsigned long>>>::_M_reallocate_map(unsigned int, bool) (.clone.262)
MoveFileEx(char const*, char const*, unsigned int) (.clone.255)
g_handleMap()
guard variable for g_handleMap()::s_handleMap
g_handleMap()::s_handleMap
_GLOBAL__I.00101_PosixWin32.cpp
si
g_handleMapMutex()
guard variable for g_handleMapMutex()::s_handleMapMutex
g_handleMapMutex()::s_handleMapMutex
g_cHandles
ReleaseSemaphore(void*, int, int*) (.clone.249)
g_nMultiObjectSleeps
g_nSingleObjectSleeps
g_nMultiObjectAlertableSleeps
g_nSingleObjectAlertableSleeps
_beginthreadex(void*, unsigned int, unsigned int (*)(void*), void*, unsigned int, unsigned int*) (.clone.248)
guard variable for g_IOManager()::s_ioManager
g_IOManager()::s_ioManager
WaitForMultipleObjectsEx(unsigned int, void* const*, int, unsigned int, int) (.clone.263)
.L2238
.L2239
.L2240
.L2241
.L2242
.L2243
.L2244
.L2245
GetSteamContentPath()
Descend(char*, unsigned int, bool, unsigned int)
s_bShowDiag
guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
pathmatch(char const*, char**, bool, char*, unsigned int)::pszSteamPath
pathmatch(char const*, char**, bool, char*, unsigned int)::nSteamPathLen
.L10
.L11
.L12
.L13
.L14
.L15
std::__verify_grouping(char const*, unsigned int, std::string const&)
global constructors keyed to BSL::CUnpackedTime::FromStr(unsigned char const*, unsigned int)
__static_initialization_and_destruction_0(int, int)
T.351
global constructors keyed to _I_cryptlib.cpp
.L474
.L475
.L476
.L506
.L477
.L478
global constructors keyed to _I_files.cpp
global constructors keyed to _I_filters.cpp
CryptoPP::s_vecLower
CryptoPP::s_vecUpper
CryptoPP::zero
CryptoPP::one
CryptoPP::Add(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
CryptoPP::Subtract(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
CryptoPP::AtomicMultiply(unsigned long*, unsigned long const*, unsigned long const*)
CryptoPP::CombaMultiply4(unsigned long*, unsigned long const*, unsigned long const*)
CryptoPP::SubatomicDivide(unsigned long*, unsigned long, unsigned long)
CryptoPP::RoundupSizeTable
global constructors keyed to _I_integer.cpp
global constructors keyed to _I_nbtheory.cpp
CryptoPP::lastSmallPrimeSquared
T.1681
T.1683
fpattern_submatch(char const*, char const*)
crc_table
flush_pending
configuration_table
fill_window
deflate_slow
deflate_stored
my_version.2795
deflate_fast
static_l_desc
static_d_desc
static_bl_desc
send_tree
static_ltree
compress_block
extra_lbits
extra_dbits
base_dist
base_length
build_tree
bl_order
static_dtree
extra_blbits
mark.2903
.L20
.L21
.L22
.L23
.L24
.L25
.L26
.L27
.L28
.L29
.L30
.L31
.L58
.L33
border
huft_build
cplext
cplens
cpdext
cpdist
fixed_tl
fixed_td
.L16
.L17
.L18
.L19
read_uleb128
read_sleb128
_Unwind_GetGRPtr
read_encoded_value
_Unwind_SetSpColumn
dwarf_reg_size_table
init_dwarf_reg_size_table
execute_cfa_program
uw_frame_state_for
uw_install_context_1
execute_stack_op
uw_update_context_1
uw_init_context_1
once_regsizes.7745
uw_update_context
_Unwind_ForcedUnwind_Phase2
_Unwind_RaiseException_Phase2
_Unwind_DebugHook
.L85
.L49
.L253
.L50
.L51
.L52
.L53
.L54
.L55
.L56
.L57
.L59
.L60
.L61
.L62
.L63
.L64
.L65
.L66
.L67
.L68
.L69
.L70
.L71
.L72
.L73
.L74
.L216
.L217
.L218
.L219
.L226
.L227
.L228
.L229
.L230
.L231
.L232
.L282
.L283
.L284
.L285
.L286
fde_unencoded_compare
frame_downheap
frame_heapsort
size_of_encoded_value
base_from_object
read_encoded_value_with_base
get_cie_encoding
get_fde_encoding
classify_object_over_fdes
fde_single_encoding_compare
fde_mixed_encoding_compare
linear_search_fdes
base_from_cb_data
_Unwind_IteratePhdrCallback
adds.7494
subs.7495
frame_hdr_cache_head
frame_hdr_cache
add_fdes.clone.3
search_object
marker.7235
__gthread_mutex_unlock.clone.4
object_mutex
__gthread_mutex_lock.clone.5
unseen_objects
seen_objects
.L45
.L47
.L48
Grid::ICache::CReadException::CReadException(common::CErrorCodeException::ESpecificType)
common::CThreadSafeCountedPtr<common::CStringTable::CImpl>::~CThreadSafeCountedPtr()
Grid::CAccount::GetAppDependencies(unsigned int, unsigned int*, unsigned int, bool)
common::CMultiFieldBlob::TFieldDescriptor* std::__uninitialized_copy<false>::uninitialized_copy<common::CMultiFieldBlob::TFieldDescriptor*, common::CMultiFieldBlob::TFieldDescriptor*>(common::CMultiFieldBlob::TFieldDescriptor*, common::CMultiFieldBlob::TFieldDescriptor*, common::CMultiFieldBlob::TFieldDescriptor*)
common::CLog::CLog()
typeinfo for Grid::CFileIdChecksumTable::CException
typeinfo for ScopeGuardImpl1<int (*)(char*), char*>
CryptoPP::ByteQueue::Walker::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::~basic_string()
CryptoPP::RandomNumberGenerator::GenerateWord32(unsigned long, unsigned long)
common::CBlobKey::CPublicKey::DeleteSubKey(std::string const&)
common::CBlobKey::RenameSubKey(std::string const&, std::string const&)
Grid::CFsTable::SetClientWorkingDir(unsigned int, std::string const&)
vtable for arg::generic_reference::counted_ptr_body
Grid::GeneralDirectoryServerCommands::FindProxyASClientAuthenticationIPAddrPort(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, unsigned int)
Grid::CClientConnection::HandleGetAppCacheSize()
CMessageBuffer::GetData()
arg::grin_ptr<common::CLog::TLogImpl>::my_copy_ftn(common::CLog::TLogImpl const*)
VTT for CryptoPP::HexDecoder
vtable for Grid::CAllAppsPublicKeysRecord
Grid::InternalSteamGetc(unsigned int, unsigned int, TSteamError*)
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState::~CRecvSizeOfNextCompressedBlockState()
BSL::CTimePrecisionInvalid::CTimePrecisionInvalid(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
CCallbackMgr::~CCallbackMgr()
CryptoPP::ByteQueue::ByteQueue(unsigned int)
typeinfo for Grid::CCacheFileFixedFsTree
CryptoPP::Integer::Integer(unsigned long, unsigned int)
Grid::CAppStatus::DestroyInstance()
vtable for Grid::CReturnBufferItem<unsigned int>
Grid::CFailedToFindMasterAuthenticationServerException::Clone() const
Grid::IManifestIteratorImpl::GetNodeFlags() const
vtable for Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
vtable for common::CMultiFieldBlob::CInvalidSerializedBlobException
CryptoPP::MessageQueue::~MessageQueue()
typeinfo for Grid::CCacheNone
deflateInit_
Grid::CIndexAppIdToSubscriptionIdsRecord::ValidateFields(std::ostream*, unsigned int)
vtable for Grid::CAllDiscountQualifiersRecord
Grid::TAppFilesystemInfo* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<Grid::TAppFilesystemInfo const*, Grid::TAppFilesystemInfo*>(Grid::TAppFilesystemInfo const*, Grid::TAppFilesystemInfo const*, Grid::TAppFilesystemInfo*)
typeinfo for sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>
typeinfo name for CryptoPP::DERGeneralEncoder
typeinfo for Grid::CSubExtendedInfoRecord
DW.ref._ZTIN4Grid23CTicketExpiredExceptionE
Grid::CBadApiArgumentException::~CBadApiArgumentException()
common::CHierarchicalNamedArgs::GetNamespaceValues(std::string const&, common::CNamedArgs&) const
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
CryptoPP::ArraySink::~ArraySink()
typeinfo for Grid::CAllDiscountQualifiersRecord::CValidateFieldsException
Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler::CompleteReadVersionChangeFileIdPurgeList(common::ICloneableException const*, unsigned int)
Grid::IManifestIteratorImpl::GetElementTime() const
Grid::CUnknownInternalException::CUnknownInternalException(std::string const&)
CryptoPP::Integer::Integer(long)
Grid::CAccount::UpdateSubscriptionBillingInfo(common::CCommandStatusControl&, unsigned int, TSteamSubscriptionBillingInfo const*)
construction vtable for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CCacheDescBlock::~CCacheDescBlock()
Grid::CAccountIsDisabledException::~CAccountIsDisabledException()
non-virtual thunk to CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool()
common::CBadAlloc::~CBadAlloc()
VTT for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
common::CCompressionException::~CCompressionException()
Grid::InternalSteamEnumerateSubscriptionDiscount(unsigned int, unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
Grid::CErrnoErrorException::~CErrnoErrorException()
Grid::CAccountUsersRecord::CValidateFieldsException::Clone() const
Grid::CFs::GetAppDirPath(std::string const&, unsigned int)
CryptoPP::StringSource::StringSource(char const*, bool, CryptoPP::BufferedTransformation*)
CryptoPP::primeTable
Grid::CEngineLoopbackConnection::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
Grid::CNewValveCDKeyGenerator::InternalStartVerify(std::string const&, common::CSimpleBitString*, common::CSimpleBitString::iterator*, unsigned int*, unsigned int*, unsigned int*)
Grid::CManifestBinException::Clone() const
common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException::Clone() const
std::allocator<unsigned long>::allocator()
common::CMultiFieldBlob::TFieldDescriptor::~TFieldDescriptor()
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob*, std::string const&, unsigned int, unsigned char const*)
ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>::~ScopeGuardImpl1()
typeinfo name for common::CThreadLocalBase
Grid::CSClient::CLogoutFSM::~CLogoutFSM()
Grid::CClientConnection::ProcessNextCommand()
Grid::CSClient::CService::Startup()
Grid::CClientManager::CImpl::~CImpl()
Grid::CMustBeOnlineException::CMustBeOnlineException()
common::CMultiFieldBlob::SwapKnownPresentFieldData(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, unsigned char*, unsigned int, unsigned int)
vtable for Grid::ICache::CAppIdDoesNotMatchException
Grid::CAccount::GetSubscriptionExtendedInfo(unsigned int, std::string const&, std::string&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>>::~_Rb_tree()
vtable for common::CAdaptPlainToEventLoopFunctor
vtable for common::CNetworkException
Grid::CTicketExpiredException::~CTicketExpiredException()
vtable for common::CConnectException
std::vector<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*>>::reserve(unsigned int)
Grid::CAppRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState
Grid::CCacheFileFixedDirectory::~CCacheFileFixedDirectory()
vtable for Grid::CAccountPrepurchaseInfoRecord
typeinfo for CryptoPP::SHA256
Grid::CClientConnection::HandleMountAppFilesystem()
virtual thunk to CryptoPP::FilterWithBufferedInput::~FilterWithBufferedInput()
Grid::CClientToASProtocolOutOfDateException::CClientToASProtocolOutOfDateException()
common::CMultiFieldBlob::CMultiFieldBlob(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob*, unsigned int, unsigned char const*)
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_base(std::allocator<unsigned long> const&)
typeinfo for ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>
Grid::CMutexGuard::~CMutexGuard()
Grid::CEngineConnection::WasBlobRegistryDeleted(int*, TSteamError*)
CryptoPP::ModularArithmetic::SimultaneousExponentiate(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::PK_FixedLengthEncryptor::~PK_FixedLengthEncryptor()
Grid::CAuthenticationServerIsNotMasterException::Clone() const
Grid::CEngineConnection::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for Grid::CIndexAppIdToSubscriptionIdsRecord
common::CTypeMismatchException::~CTypeMismatchException()
common::CMultiFieldBlob::CFieldDoesNotExistException::~CFieldDoesNotExistException()
Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::~ObjFunctorImpl0()
common::CConfigDatabase::GetValueAsString(char const*) const
typeinfo name for ScopeGuardImpl1<bool (*)(std::string const&), char const*>
std::pair<common::CThreadSafeCountedPtr<common::IFunctor>, common::CThreadSafeCountedPtr<common::IFunctor>>::~pair()
vtable for Grid::IManifestIteratorImpl
common::CSendException::~CSendException()
CryptoPP::SHA256::~SHA256()
typeinfo for common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CSClient::CSession*>, std::_Select1st<std::pair<unsigned int const, Grid::CSClient::CSession*>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CSClient::CSession*>>>::~_Rb_tree()
common::CExceptionHolder::CExceptionHolder(common::CExceptionHolder const&)
typeinfo for Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState
Grid::CCacheQueueManager::GetEntryResults(unsigned int, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*) const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>*)
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::~_Rb_tree()
Grid::ICache::CCacheKeysNotAvailableException::ThrowSelf() const
common::CObjFunctor<Grid::CAccount::CImpl>::~CObjFunctor()
Grid::CAllDiscountQualifiersRecord::~CAllDiscountQualifiersRecord()
Grid::CAccountExternalBillingInfoRecord::ValidateFields(std::ostream*, unsigned int)
common::CBlobRegistry::CBlobRegistry(std::string const&, bool, unsigned int)
common::CLogGroup::NewLogContext(char const*, bool)
CryptoPP::HexDecoder::~HexDecoder()
_beginthreadex(void*, unsigned int, unsigned int (*)(void*), void*, unsigned int, unsigned int*)
CryptoPP::BitBucket::Put(unsigned char)
Grid::CClientConnection::HandleEnumerateAppDependency()
_FillFindDataStruct(_finddata_t*)
common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>::operator()()
CryptoPP::SHA::Transform(unsigned long*, unsigned long const*)
typeinfo for common::CCommandStatusControl
typeinfo for CryptoPP::RandomPool
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_unique(std::pair<std::string const, std::string> const&)
std::_Rb_tree<unsigned long long, unsigned long long, std::_Identity<unsigned long long>, std::less<unsigned long long>, std::allocator<unsigned long long>>::_M_erase(std::_Rb_tree_node<unsigned long long>*)
VTT for CryptoPP::HashFilter
common::CErrorCodeException::~CErrorCodeException()
ScopeGuardImpl1<void (*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
Grid::CAppIconsRecord::ValidateFields(std::ostream*, unsigned int)
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
std::list<std::string, std::allocator<std::string>>::push_back(std::string const&)
Grid::CFs::CSeekException::~CSeekException()
Grid::CClientContentTicket::~CClientContentTicket()
Grid::CCacheQueueManager::BQueueIsEmpty()
Grid::CFailedToFindMasterAuthenticationServerException::~CFailedToFindMasterAuthenticationServerException()
Grid::CCacheFileFixedDirectory::FixUpBlock()
typeinfo for Grid::CShippingInfoRecord
Grid::CSClient::CConnectionPool::~CConnectionPool()
Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CReadManifestFSM::CSendRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
std::vector<iovec, std::allocator<iovec>>::~vector()
typeinfo name for Grid::ICache::CResourceIsNotFile
Grid::CCacheNone::GetUserConfigFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, common::CBlobKey*>>, std::pair<std::string const, common::CBlobKey*> const&)
DW.ref._ZTIN4Grid6ICache10CExceptionE
Grid::CAppVersionInfoRecord::CValidateFieldsException::Clone() const
std::vector<BSL::CTime, std::allocator<BSL::CTime>>::~vector()
vtable for ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>
Grid::ICache::COpenException::~COpenException()
Grid::CNotFoundException::~CNotFoundException()
vtable for ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>
Grid::InternalSteamSetCacheDefaultDirectory(unsigned int, char const*, TSteamError*)
typeinfo name for common::ILogFunctor
vtable for BSL::CTimePrecisionInvalid
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, Grid::TCacheDescriptor> const&)
common::CMultiFieldBlob::RecursivelyCollapseAllDescendants()
typeinfo for ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>
typeinfo for Grid::CAppVersionsRecord::CValidateFieldsException
common::CHierarchicalNamedArgs::CHierarchicalNamedArgs(common::CNamedArgs const&)
common::CConfigDatabase::Get(std::string const&, unsigned int*)
Grid::CCacheDataBlock::Update(unsigned int, unsigned int, unsigned int, unsigned char const*)
Grid::CEngineLoopbackConnection::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
typeinfo name for CAppSystem
typeinfo name for Grid::CFailedToFindMasterAuthenticationServerException
Grid::ICache::CCacheNeedsRepairException::~CCacheNeedsRepairException()
typeinfo for Grid::CAllAppsRecord::CValidateFieldsException
Grid::ICommandState::StartRequestAccountsByCdKeyEmail(std::string const&)
typeinfo name for common::CThreadSafeAutoSeededRandomPoolSingleton
common::CSocketCommandAbortedByCallerException::~CSocketCommandAbortedByCallerException()
CryptoPP::StringSource::PumpMessages(unsigned int)
vtable for CryptoPP::NonblockingRng
vtable for Grid::ICache::CCacheKeysNotAvailableException
vtable for Grid::CFs::CEndOfFileException
vtable for Grid::CMutexGuard::CTimeoutException
Grid::CAccountUserPasswordsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CService::~CService()
Grid::GeneralDirectoryServerCommands::FindAllCSERServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
CryptoPP::Source::Put(unsigned char const*, unsigned int)
typeinfo name for CryptoPP::ModularArithmetic
CryptoPP::FileSink::OpenErr::~OpenErr()
Grid::CResourceFile::CResourceFile(Grid::CSplitPath const&, unsigned long long, Grid::CCacheGroupIterator&)
virtual thunk to CryptoPP::CBCPaddedDecryptor::~CBCPaddedDecryptor()
Grid::CSClient::CBlockingLogoutCompletionHandler::~CBlockingLogoutCompletionHandler()
Grid::CCacheOneFileFixedBlock::GetManifestIterator(std::string const&)
common::CThreadSafeCountedPtr<common::CConfigTree>::~CThreadSafeCountedPtr()
common::CBlobRegistry::CreateSubKey(std::string const&, bool)
typeinfo name for Grid::CNotSubscribedException
Grid::ICommandState::StartRefreshLogin(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, bool)
typeinfo name for Grid::CLauncher
ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::~ObjScopeGuardImpl0()
typeinfo for CryptoPP::AbstractGroup<CryptoPP::Integer>
sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::getdest() const
Grid::CFsTable::~CFsTable()
Grid::CCacheFileFixedFsTree::~CCacheFileFixedFsTree()
common::ISubKeyIteratorImpl::~ISubKeyIteratorImpl()
Grid::CEngineLoopbackConnection::GetAccountStatus(unsigned int*, TSteamError*)
deflateInit2_
Grid::IManifestIteratorImpl::IsFile() const
CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>::Run(void*, bool, unsigned long long)
vtable for sigslot::multi_threaded_local
Grid::CTicketCache::EndAccess(unsigned int)
vtable for Grid::CFileHandleList
virtual thunk to CryptoPP::AES_PHM_Decryption::~AES_PHM_Decryption()
Grid::CEngineLoopbackConnection::OpenFile64(char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)
Grid::CSClient::CSessionDestroyedException::~CSessionDestroyedException()
sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::operator()(ESteamNotificationCallbackEvent, unsigned int)
Grid::CEngineLoopbackConnection::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
Grid::CCacheManifestOnly::GetCacheFileDescriptor(std::string const&, Grid::TCacheDescriptor*)
typeinfo for Grid::CFs::CBadMountException
CryptoPP::SHA256::~SHA256()
CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation(CryptoPP::Integer const&)
Grid::CClientManager::CImpl::s_uNewClientConnectedCode
Grid::ICache::CNotFoundException::~CNotFoundException()
typeinfo for Grid::CAccountUserPasswordsRecord
Grid::GetCurrentServerTimeEstimate()
typeinfo name for Grid::CVTSIPAddressCache
Grid::CEngineLoopbackConnection::IsSecureComputer(int*, TSteamError*)
typeinfo name for Grid::CSClient::CReadPurgeListFSM
Grid::CClientToASProtocolOutOfDateException::ThrowSelf() const
typeinfo name for CryptoPP::StringSinkTemplate<std::string>
CryptoPP::InvertibleTrapdoorFunction::~InvertibleTrapdoorFunction()
common::CErrorCodeException::what() const
vtable for common::CExceptionHolder
typeinfo name for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState
Grid::InternalSteamFlushFile(unsigned int, unsigned int, TSteamError*)
Grid::CEngineLoopbackConnection::FindClose(unsigned int, TSteamError*)
vtable for Grid::CAllAppsRecord::CValidateFieldsException
Grid::InternalSteamEnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
Grid::IServerAddressCache::EndAccess()
typeinfo name for common::IFunctor
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
vtable for Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException
common::CBlobKey::CPublicKey::DeleteValueNoThrow(std::string const&)
Grid::CCacheDataBlock::Read(unsigned int, unsigned int, unsigned int, unsigned char*)
Grid::CSClient::CSession::CompleteRecv(unsigned int, bool*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>> const&)
common::CBlobKey::CPublicKey::RenameSubKey(std::string const&, std::string const&)
CryptoPP::ModularArithmetic::Reduce(CryptoPP::Integer&, CryptoPP::Integer const&) const
vtable for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState::~CRecvSessionLoginReplyStatusState()
std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>>::_M_insert_unique(int const&)
common::CFastThreadMutex::release()
typeinfo for Grid::CAccountUsersRecord
non-virtual thunk to Grid::CClientConnection::~CClientConnection()
Grid::ICommandState::StartSetAppVersion(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, unsigned int)
Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CActivityLog::CreateNewContext(char const*, common::CLogGroup*)
CAsyncIOManager::CAsyncIOManager()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int>>>::~_Rb_tree()
Grid::CCachePreLoader::Disable()
Grid::CFsCacheGroup::CImpl::AllocateNewFileHandle(char const*, unsigned long long, char const*, int, Grid::CCacheGroupIterator&, _IO_FILE*)
Grid::CFsTable::IsAppRunning(unsigned int)
typeinfo for ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
typeinfo for common::CEventLoopThread
BSL::CTime::Day()
Grid::CReturnBufferItem<TSteamUpdateStats>::~CReturnBufferItem()
vtable for CryptoPP::StringSinkTemplate<std::string>
CryptoPP::FirstPrime(CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CFsCacheGroup::CImpl::Stat(Grid::CSplitPath const&, bool, TSteamElemInfo64*)
common::CPeerGracefullyClosedConnectionCommException::Clone() const
Grid::CClientConnection::HandleGetNumAccountsWithEmailAddress()
Grid::CClientConnection::HandleLoadFileToCache()
Grid::CSClient::CConnection::UnbindClientServerSessionHandles(unsigned int, unsigned int)
Grid::CEngineConnection::WaitForResources(unsigned int, bool, char const*, TSteamError*)
Grid::CFs::LoadFileToApp(std::string const&, unsigned int, std::string const&, void const*, unsigned int, unsigned long long)
Grid::CSClient::CLogoutFSM::DoFinish()
Grid::CPipeComm::DisconnectReadSide()
typeinfo name for CryptoPP::FileStore
Grid::CAccountSubscriptionBillingInfoRecord::~CAccountSubscriptionBillingInfoRecord()
Grid::CClientConnection::HandleSetUser()
Grid::CFs::CBadHandleException::ThrowSelf() const
BSL::CUnpackedTime::CFromStringInvalidCharacter::DefaultMessage() const
Grid::CCacheDescBlock::SetCacheWriteFlag(bool)
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::~_Vector_base()
common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>::operator()()
Grid::SetError(TSteamError*, std::exception const&)
common::CNamedArgsInsertException::ThrowSelf() const
Grid::CSClient::CInvalidSessionHandleException::~CInvalidSessionHandleException()
vtable for Grid::ICommandState
vtable for Grid::CSClient::IProtocolFSM
typeinfo name for Grid::CManifestChecksumException
Grid::CSClient::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*)
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState::~CRecvSizeOfNextCompressedBlockChunkState()
CryptoPP::BufferedTransformation::Attachable()
typeinfo for CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
vtable for Grid::ICache::CInvalidResourceOffset
CryptoPP::ModularArithmetic::Subtract(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CFsCacheGroup::~CFsCacheGroup()
Grid::SetClientIPAddresses(unsigned int, unsigned int)
common::CMultiFieldBlob::InternalTrimSpareCapacityByReducingSizeOfBlob(unsigned int)
std::vector<Grid::CCacheFileFixedDirectory::TEntry, std::allocator<Grid::CCacheFileFixedDirectory::TEntry>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheFileFixedDirectory::TEntry*, std::vector<Grid::CCacheFileFixedDirectory::TEntry, std::allocator<Grid::CCacheFileFixedDirectory::TEntry>>>, Grid::CCacheFileFixedDirectory::TEntry const&)
CryptoPP::ModularArithmetic::~ModularArithmetic()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::~_Rb_tree()
Grid::CFsCacheGroup::CImpl::AllocateNewFindHandle(Grid::CSplitPath const&, long)
typeinfo name for Grid::CSClient::IBlockingCompletionHandler
Grid::InternalSteamSizeFile(unsigned int, unsigned int, TSteamError*)
typeinfo for common::CValueDoesNotExistException
typeinfo for CryptoPP::PK_Verifier
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~CryptoSystemBaseTemplate()
std::auto_ptr<common::CThreadSafeCountedPtr<Grid::CSClient::CSendCompletionDemuxInfo>>::~auto_ptr()
std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, TPreloaderInfo const&)
common::CFileUtil::SetFileAttributes(std::string const&, bool, bool, bool)
vtable for Grid::CDiscountQualifierRecord::CValidateFieldsException
CryptoPP::AbstractRing<CryptoPP::Integer>::Exponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CCacheFileFixedFsTree::GetManifestIterator(char const*) const
typeinfo name for Grid::CReturnBufferItem<TSteamUpdateStats>
typeinfo for CryptoPP::HashModuleWithTruncation
common::CThread::Wait(unsigned int, bool)
Grid::CManifestChecksumException::ThrowSelf() const
Grid::CAppRecord::IsManifestOnlyApp()
Grid::ICommandState::Process(unsigned int, TSteamProgress*, unsigned int, unsigned int*, std::string*)
Grid::CSClient::CService::Cleanup()
Grid::CNewValveCDKeyGenerator::~CNewValveCDKeyGenerator()
Grid::CAllDiscountQualifiersRecord::~CAllDiscountQualifiersRecord()
Grid::CClientConnection::HandleEnumerateSubscription()
Grid::CEngineLoopbackConnection::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
CryptoPP::Integer* std::__uninitialized_move_a<CryptoPP::Integer*, CryptoPP::Integer*, std::allocator<CryptoPP::Integer>>(CryptoPP::Integer*, CryptoPP::Integer*, CryptoPP::Integer*, std::allocator<CryptoPP::Integer>&)
typeinfo for CryptoPP::AES_PHM_Encryption
common::CEventLoopThread::RemoveEvent(void*)
Grid::CFileHandleList::~CFileHandleList()
typeinfo for Grid::CCacheServerSessionMgr
typeinfo name for common::CMultiFieldBlob::index_iterator
Grid::CFsTable::CImpl::TakeMultipleCacheLocks(std::vector<std::string, std::allocator<std::string>> const&, unsigned int)
vtable for CryptoPP::AES_PHM_Decryption
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::_Rep::_S_empty_rep_storage
Grid::CCannotCreateCacheFileException::~CCannotCreateCacheFileException()
vtable for CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>> const&)
Grid::CSClient::ICompletionHandler::CompleteReadVersionChangeFileIdPurgeList(common::ICloneableException const*, unsigned int)
Grid::CFs::DestroyPreloader(std::string const&, unsigned int)
non-virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
Grid::CAccountUserRecord::CValidateFieldsException::Clone() const
typeinfo for Grid::CFs::CException
DW.ref._ZTIN4Grid27CClientAuthenticationTicket24CValidateFieldsExceptionE
Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::BERGeneralDecoder::~BERGeneralDecoder()
typeinfo name for sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
virtual thunk to CryptoPP::InvertibleTrapdoorFunction::~InvertibleTrapdoorFunction()
Grid::CFsCacheGroup::IsFileImmediatelyAvailable(Grid::CSplitPath const&)
CryptoPP::Source::PumpAll()
Grid::CCachePreLoader::CImpl::CImpl(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int)
Grid::CCannotCreateCacheFileException::CCannotCreateCacheFileException(std::string const&)
common::CBlobKey::EndSubKeyIteration()
typeinfo name for Grid::CCacheBatBlock
std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>::~vector()
Grid::CRateLimitRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CClientConnection::HandleGetAccountStatus()
Grid::CEngineLoopbackConnection::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
Grid::CClientAuthenticationTicket::GetSerializedVersion(unsigned int*) const
vtable for CBlockingUDPSocket
typeinfo for CryptoPP::CBCPaddedEncryptor
common::CThreadSafeCountedPtr<common::CFileUtil::IFindFile>::dispose()
construction vtable for CryptoPP::Source-in-CryptoPP::StringSource
arg::typed_reference<Grid::IResourceList>::do_delete(void*)
Grid::CClientConnection::HandleSubscribe()
Grid::CResourceListNodes::~CResourceListNodes()
construction vtable for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
__wrap_mkfifo
sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>::slot_duplicate(sigslot::has_slots<sigslot::multi_threaded_local> const*, sigslot::has_slots<sigslot::multi_threaded_local>*)
common::CAdaptPlainToEventLoopFunctor::~CAdaptPlainToEventLoopFunctor()
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_M_deallocate(unsigned long*, unsigned int)
CryptoPP::BERGeneralDecoder::MessageEnd(int)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>*)
typeinfo name for Grid::ICache::CWriteException
Grid::CAccount::CImpl::GetUserType()
Grid::ICommandState::StartFlushCache(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
unsigned long* std::copy<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
Grid::CCacheManifestOnly::CImpl::WorkThreadProc(void*)
Grid::CResourceFile::~CResourceFile()
common::DoBlockingSend(int, common::CWSABUFWrapper&)
Grid::CFs::CException::~CException()
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::_M_insert_unique(std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>> const&)
std::vector<_IO_FILE*, std::allocator<_IO_FILE*>>::~vector()
Grid::CFsCacheGroup::FindFirst(Grid::CSplitPath const&, ESteamFindFilter, TSteamElemInfo64*, unsigned int*)
std::vector<unsigned long, std::allocator<unsigned long>>::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long>>>, unsigned long const&)
Grid::CEngineConnection::ChangeEmailAddress(char const*, TSteamError*)
typeinfo name for Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException
Grid::InternalSteamChangeAccountName(unsigned int, char const*, char const*, TSteamError*)
typeinfo name for Grid::CCacheDescBlock
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::~_Rb_tree()
common::CTypeMismatchException::CTypeMismatchException(std::string const&, std::string const&, std::string const&, std::string const&)
Grid::ICache::CMultipleCacheInstanceException::ThrowSelf() const
common::CBlobKey::CPublicKey::GetValue(std::string const&, void*, unsigned int, unsigned int*)
Grid::CCacheOneFileFixedBlock::CImpl::AddCacheEntry(unsigned char*, unsigned char*, Grid::CCacheQueueEntry::TFileReqEntry const&, Grid::CManifestIterator&, unsigned int)
BSL::isdigit(unsigned char)
vtable for Grid::CCacheNone
vtable for common::CCompressionException
typeinfo name for Grid::CAppRecord
Grid::CLocalClockSkewException::~CLocalClockSkewException()
Grid::CClientConnection::HandleFindApp()
Grid::CAppRecord::~CAppRecord()
Grid::CClientConnection::HandleOpenTmpFile()
typeinfo name for ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>
typeinfo for common::CLogContextFunctor
_Unwind_GetLanguageSpecificData
typeinfo for ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>
std::_Vector_base<std::string, std::allocator<std::string>>::_Vector_base(unsigned int, std::allocator<std::string> const&)
_FileFilter(dirent const*)
Grid::CClientBinaryManifestRecord::~CClientBinaryManifestRecord()
Grid::CFileIdChecksumTable::CException::~CException()
Grid::CAppStatus::~CAppStatus()
Grid::CTicketCache::CImpl::s_sTGTValueName
_findfirst(char const*, _finddata_t*)
typeinfo for common::CMultiFieldBlob::CFieldDoesNotExistException
common::CNetworkException::~CNetworkException()
Grid::CEngineConnection::IsLoggedIn(int*, TSteamError*)
Grid::CAccount::CImpl::GetSubscriptionPurchaseCountry(unsigned int, int*)
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
Grid::IManifestIteratorImpl::AdvanceToNextSibling()
vtable for CryptoPP::BufferedTransformation::Err
arg::generic_reference::~generic_reference()
common::ISubKeyIteratorImpl::~ISubKeyIteratorImpl()
Grid::CClientAuthenticationTicket::CValidateFieldsException::~CValidateFieldsException()
vtable for sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
Grid::CTicketCache::CImpl::TAppData::TAppData(Grid::CTicketCache::CImpl::TAppData const&)
Grid::CSClient::CManifestFingerprintMistatchOnReconnectException::Clone() const
ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>::ExecuteNowIfNotDismissed() const
typeinfo for common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
Grid::CAccountUserPasswordRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CFsTable::CImpl::DisablePreloader(std::string const&, unsigned int)
Grid::GetGeneralDirectoryServer_FindServerIPAddrPorts()
Grid::CUnknownReadException::~CUnknownReadException()
ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
typeinfo for Grid::CClientConnection
typeinfo name for Grid::CAccountUsersRecord
DW.ref._ZTIN6common19ICloneableExceptionE
typeinfo name for Grid::CAppSubscriptionIdsRecord::CValidateFieldsException
typeinfo name for Grid::CAppVersionsRecord::CValidateFieldsException
common::CInUseException::~CInUseException()
common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException::ThrowSelf() const
std::set<unsigned long, std::less<unsigned long>, std::allocator<unsigned long>>::~set()
typeinfo name for IAppSystem
common::CDefaultAssertCatcher::Impl::RegisterAssertObserver(common::IAssertObserver*)
CryptoPP::Rijndael::~Rijndael()
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, Grid::TCacheDescriptor>>*)
common::CThreadSafeCountedPtr<common::IRegistry>::dispose()
typeinfo for CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>
Grid::CCacheManifestOnly::~CCacheManifestOnly()
Grid::ICommandState::Cleanup()
common::CSimpleBitString::GetByteChecksumFromStart(unsigned int) const
Grid::CFsBuffer::SetFileInfo(unsigned int, char const*, bool, bool, unsigned long long, int)
BSL::InitExceptionParams(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&)
inflate_blocks_sync_point
CryptoPP::Integer::operator-=(CryptoPP::Integer const&)
virtual thunk to CryptoPP::BufferedTransformationWithAutoSignal::~BufferedTransformationWithAutoSignal()
typeinfo name for Grid::CSClient::CReadFileFSM
Grid::CAppRegionRecord::~CAppRegionRecord()
Grid::CFs::CCannotWriteNonUserConfigFile::CCannotWriteNonUserConfigFile(common::CErrorCodeException::ESpecificType)
common::CFileUtil::RemoveDirectoryTree(char const*)
CryptoPP::Rijndael::Td0
Grid::ICacheGroupIteratorImpl::GetManifestIterator() const
CryptoPP::MDC<CryptoPP::SHA>::~MDC()
arg::grin_ptr<common::CLogContext::TLogContextImpl>::my_delete_ftn(common::CLogContext::TLogContextImpl*)
Grid::CFsCacheGroup::CImpl::DeallocateFindHandle(unsigned int)
common::DoSelectedConnectToServer(common::CIPAddrPort const&, common::CCommandStatusControl*)
Grid::CClientConnection::HandleGetSubscriptionPurchaseCountry()
CryptoPP::RecursiveInverseModPower2(unsigned long*, unsigned long*, unsigned long const*, unsigned int)
CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>::~CCallback()
typeinfo name for CryptoPP::FileSink::WriteErr
common::CLog::~CLog()
Grid::ICommandState::StartRepairOrDecryptCaches(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, int)
typeinfo name for Grid::CAppVersionInfoRecord::CValidateFieldsException
_FixSlashes(std::string const&, std::string&)
Grid::CSubscriptionAppIdsRecord::~CSubscriptionAppIdsRecord()
Grid::CFsTable::CImpl::ResumePausedPreloaders()
Grid::CEngineLoopbackConnection::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
Grid::CFsCacheGroup::Getc(unsigned int)
vtable for common::CMultiFieldBlob::CBlobException
Grid::CEngineLoopbackConnection::AckSubscriptionReceipt(unsigned int, TSteamError*)
vtable for Grid::ICacheGroupIteratorImpl::CInvalidCache
vtable for Grid::CSClient::CBlockingReadFileChecksumTableHandler
virtual thunk to CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
BSL::CTime::CTimeToPackOutOfRange::DefaultMessage() const
_chmod
typeinfo name for Grid::CSClient::CReadPurgeListFSM::CSendRequestState
common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException::~CFieldNameNotNumeriCBlobException()
Grid::CEngineConnection::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
vtable for sigslot::has_slots<sigslot::multi_threaded_local>
_tr_flush_block
Grid::CEngineConnection::OpenTmpFile(TSteamError*)
CryptoPP::Integer::PositiveCompare(CryptoPP::Integer const&) const
Grid::CTicketCache::CImpl::TAppData::TAppData(Grid::CTicketCache::CImpl::TAppData const&)
Grid::CAllAppsPublicKeysRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for CryptoPP::StringStore
Grid::CShippingInfoRecord::~CShippingInfoRecord()
Grid::CCacheFileFixedDirectoryEntry::~CCacheFileFixedDirectoryEntry()
Grid::CCachePreLoader::~CCachePreLoader()
common::CSendException::ThrowSelf() const
Grid::CSClient::CReadFileFSM::CReadFileFSM(Grid::CSClient::CSession&, unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::InternalSteamStopLoadingCache(unsigned int, unsigned int, TSteamError*)
Grid::CLibraryNotInitializedException::ThrowSelf() const
sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~signal2()
ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>::~ObjScopeGuardImpl0()
common::CMultiFieldBlob::index_iterator_impl::~index_iterator_impl()
Grid::CCacheNone::AddFileChunkToCache(Grid::CManifestIterator&, void const*, unsigned long long, unsigned long long)
CryptoPP::PK_Verifier::VerifyMessage(unsigned char const*, unsigned int, unsigned char const*) const
Grid::CManifestBin::IsPurgeAll() const
CryptoPP::MessageQueue::~MessageQueue()
Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CFsTable::Checkout(std::vector<std::string, std::allocator<std::string>> const&)
CryptoPP::StringStore::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
void std::_Construct<std::string, std::string>(std::string*, std::string const&)
Grid::CClientManager::CImpl::~CImpl()
CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::Encrypt(CryptoPP::RandomNumberGenerator&, unsigned char const*, unsigned int, unsigned char*)
arg::grin_ptr<common::CLogFile::TLogFileImpl>::my_delete_ftn(common::CLogFile::TLogFileImpl*)
typeinfo for sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
Grid::InternalSteamUpdateAccountBillingInfo(unsigned int, TSteamPaymentCardInfo const*, TSteamError*)
typeinfo for Grid::CAllAppsPublicKeysRecord
Grid::CAppSubscriptionIdsRecord::~CAppSubscriptionIdsRecord()
Grid::CBufferTable::~CBufferTable()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>*)
vtable for Grid::CAppIconsRecord
CryptoPP::PKCS_DigestDecoration<CryptoPP::SHA>::length
Grid::CAllAppsRecord::~CAllAppsRecord()
common::CFastThreadMutex::acquire()
vtable for ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
vtable for Grid::CAccountSubscriptionsRecord
Grid::CReturnBufferData::Receive(Grid::CPipeComm*)
WSAGetOverlappedResult(int, Overlapped_t*, unsigned int*, int, unsigned int*)
CryptoPP::TrapdoorFunction::~TrapdoorFunction()
Grid::CCacheManifestOnly::CImpl::ValidateData(unsigned char const*, unsigned long long, unsigned long long, Grid::CManifestIterator&, std::vector<unsigned int, std::allocator<unsigned int>> const&)
vtable for CryptoPP::Integer::DivideByZero
Grid::CAllDiscountsRecord::~CAllDiscountsRecord()
Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
common::CMultiFieldBlob::MoveFieldsAfterThisFieldBy(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, int)
std::_Vector_base<std::string, std::allocator<std::string>>::_M_get_Tp_allocator() const
typeinfo name for ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>
Grid::IServerAddressCache::InsideMutexFetchListOfAddresses()
common::CNamedArgsInsertException::~CNamedArgsInsertException()
typeinfo for Grid::CReturnBufferItem<int>
std::vector<TSteamAppDependencyInfo, std::allocator<TSteamAppDependencyInfo>>::~vector()
CMessageBuffer::~CMessageBuffer()
typeinfo name for Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler
typeinfo for Grid::CFs::CConfigException
Grid::CSClient::CBlockingReadFileChecksumTableHandler::CompleteReadFileChecksumTable(common::ICloneableException const*, unsigned int)
common::CMultiFieldBlob::RecursivelyNotifyBlobAndChildrenThatMemoryHasMoved(unsigned char*)
common::CHierarchicalNamedArgs::operator[](std::string const&) const
CryptoPP::BERGeneralDecoder::EndReached() const
CryptoPP::MontgomeryRepresentation::ConvertOut(CryptoPP::Integer const&) const
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Add(CryptoPP::Integer const&, CryptoPP::Integer const&) const
typeinfo for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>
typeinfo name for Grid::CLibraryAlreadyInitializedException
typeinfo name for ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>
DW.ref._ZTIN4Grid6ICache26CCacheNeedsRepairExceptionE
typeinfo name for common::CCommandStatusControlAutoTimeoutIfStalled
Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
typeinfo for CryptoPP::CipherMode
Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CCacheManifestOnly::CImpl::HasFileVersionRolled(Grid::CManifestIterator&, Grid::CManifestIterator&, Grid::CFileIdChecksumTable const*, common::CCommandStatusControl*)
Grid::InternalSteamDefragCaches(unsigned int, unsigned int, TSteamError*)
Grid::CReturnBufferData::CReturnBufferData(char*, unsigned int)
Grid::CPreauthenticationFailedException::CPreauthenticationFailedException()
Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::ICache::ICacheCompletionHandler::CompleteRead(common::ICloneableException const*, unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>*)
Grid::CAccountUserPasswordRecord::~CAccountUserPasswordRecord()
common::CLogContext::WriteNoFormat(unsigned int, char const*)
_tr_align
Grid::CFileIdChecksumTable::Get(unsigned int, std::vector<unsigned int, std::allocator<unsigned int>>&) const
Grid::CEngineConnection::GetAppDir(unsigned int, char*, TSteamError*)
vtable for Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException
Grid::CEngineConnection::MoveApp(unsigned int, char const*, TSteamError*)
std::auto_ptr<common::CUsedAuthenticatorTimestampsCache>::~auto_ptr()
Grid::CFsTable::CImpl::AppLock(std::string const&, unsigned int)
vtable for Grid::CReturnBufferItem<int>
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~CryptoSystemBaseTemplate()
CryptoPP::AES_PHM_Decryption::AES_PHM_Decryption(unsigned char const*, unsigned int, CryptoPP::BufferedTransformation*)
void sigslot::signal1<unsigned int, sigslot::multi_threaded_local>::connect<Grid::CAccount::CImpl>(Grid::CAccount::CImpl*, void (Grid::CAccount::CImpl::*)(unsigned int))
Grid::CValidationLogger::GetFileCount(unsigned int*, unsigned int*) const
CMessageBuffer::CMessageBuffer(unsigned int)
Grid::CTicketCache::CImpl::ClearUser()
Grid::CAppVersionLaunchOptionIdsRecord::~CAppVersionLaunchOptionIdsRecord()
Grid::CEngineConnection::ReadFile64(void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)
CryptoPP::StringSource::~StringSource()
Grid::CAccountExternalBillingInfoRecord::~CAccountExternalBillingInfoRecord()
typeinfo name for common::CValueDoesNotExistException
typeinfo for sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>
Grid::CSClient::CConnection::DownloadRateBlockTransferStarted()
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::operator=(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>> const&)
Grid::ICache::DefragCache(common::CCommandStatusControl*)
CryptoPP::Integer::Divide(CryptoPP::Integer&, CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
vtable for Grid::CUnknownReadException
typeinfo name for sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>
Grid::CManifestBin::~CManifestBin()
Grid::CEngineConnection::CreateCachePreloaders(TSteamError*)
Grid::CEngineLoopbackConnection::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
CopyFileEx(char const*, char const*, unsigned int (*)(_LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, unsigned int, unsigned int, void*, void*, void*), void*, int*, unsigned int)
typeinfo name for Grid::CSubscriberAccountRecord::CValidateFieldsException
typeinfo name for ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>
common::CValueIterator::operator++()
vtable for common::CBlobValueIterator
Grid::CAccount::GetSubscriptionIds(unsigned int*, unsigned int)
CryptoPP::BufferedTransformation::SkipAll()
typeinfo for Grid::CSClient::CReadPurgeListFSM::CSendRequestState
vtable for Grid::CFs::CCannotWriteNonUserConfigFile
common::CWin32CurrentUserRegistry::Instance()
CallbackMgr_RegisterCallback(CCallbackBase*, int)
typeinfo for Grid::CNotFoundException
vtable for common::CMainConfigDatabase
Grid::CUserAppAccessRightsRecord::~CUserAppAccessRightsRecord()
Grid::CFsTable::CreateClientViewOfMount(std::string const&, unsigned int, std::string const&, std::string const&)
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::~map()
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::~MultiplicativeGroupT()
Grid::CAccount::GetAppIds(unsigned int*, unsigned int)
Grid::CResourceFile::CResourceFile(Grid::CSplitPath const&, unsigned long long, Grid::CCacheGroupIterator&)
Grid::CCannotCreateCacheFileException::Clone() const
_Unwind_Resume
compress
typeinfo for Grid::ICache::CCacheNeedsRepairException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>*)
CryptoPP::PositiveAdd(CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CCacheOneFileFixedBlock::CImpl::ChecksumCacheData(common::CCommandStatusControl*, Grid::ICacheCallback*, Grid::CValidationLogger*)
Grid::CAccount::Logout(common::CCommandStatusControl&)
typeinfo for Grid::ICache::CCacheNeedsDecryptionException
common::CConfigTree::~CConfigTree()
vtable for ISteamInterface
Grid::CFsTable::CImpl::AppUnlock(std::string const&)
CryptoPP::BufferedTransformation::MessageEnd(int)
CryptoPP::Integer::operator!() const
vtable for CryptoPP::StringSource
Grid::InternalSteamGetCacheDecryptionKey(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for sigslot::_signal_base<sigslot::multi_threaded_local>
Grid::CFs::CBadArgException::CBadArgException(common::CErrorCodeException::ESpecificType)
Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState::~CRecvSessionLogoutReplyState()
CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::Decrypt(unsigned char const*, unsigned char*)
CryptoPP::IteratedHash<unsigned long, false, 64u>::HashBlock(unsigned long const*)
SafeStrncat
typeinfo name for Grid::CFsTable::IMountedCache
typeinfo for Grid::CSClient::CBlockingReadManifestHandler
typeinfo name for CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
non-virtual thunk to CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
void std::_Destroy_aux<false>::__destroy<Grid::CFsTable::CImpl::TAppLock*>(Grid::CFsTable::CImpl::TAppLock*, Grid::CFsTable::CImpl::TAppLock*)
vtable for common::CLogContext
std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>::~vector()
Grid::CFsCacheGroup::CImpl::FindCloseLocal(unsigned int)
VTT for CryptoPP::FileSource
Grid::CNotSubscribedException::CNotSubscribedException()
CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>::~CmdAdaptor()
typeinfo name for CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>
Grid::CCacheFileFixedDirectory::CCacheFileFixedDirectory(_IO_FILE*)
Grid::CSClient::CReadManifestFSM::s_RecvRespFlagState
Grid::CAllAppsEncryptedPrivateKeysRecord::~CAllAppsEncryptedPrivateKeysRecord()
Grid::ICommandState::StartSetAppCacheSize(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, unsigned int, bool)
Grid::CClientConnection::HandleGetCacheDefaultDirectory()
Grid::CCannotCreateCacheFileException::ThrowSelf() const
CryptoPP::MessageQueue::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
Grid::CFs::CConfigException::Clone() const
std::vector<common::RemoteFileHarvest::EFileType, std::allocator<common::RemoteFileHarvest::EFileType>>::~vector()
Grid::CDiscountRecord::~CDiscountRecord()
Grid::CSClient::IProtocolFSM::IProtocolFSM(char const*, common::CLogContext*, Grid::CSClient::ICompletionHandler*, unsigned int, Grid::CSClient::IProtocolState const&, Grid::CSClient::CSession&, unsigned int, unsigned int)
Grid::CFs::CConfigException::ThrowSelf() const
construction vtable for CryptoPP::DigestVerifier-in-CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CAllDiscountQualifiersRecord::~CAllDiscountQualifiersRecord()
common::CMultiFieldBlob::index_iterator::~index_iterator()
virtual thunk to CryptoPP::PK_Verifier::~PK_Verifier()
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::CipherTextLength() const
vtable for Grid::ICache::CWriteException
CryptoPP::CFBDecryption::ProcessString(unsigned char*, unsigned char const*, unsigned int)
Grid::CCacheOneFileFixedBlock::CImpl::~CImpl()
common::CThreadSafeCountedPtr<Grid::ICache>::CThreadSafeCountedPtr(Grid::ICache*)
Grid::CFsCacheGroup::DvrOpen(Grid::CSplitPath const&, bool*, TSteamElemInfo&)
Grid::CClientConnection::HandleCloseFile()
Grid::CFsCacheGroup::CFsCacheGroup(unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&)
Grid::ICacheGroupIteratorImpl::CInvalidCache::Clone() const
typeinfo for Grid::CNoContentServerAvailableException
Grid::CCacheDataBlock::~CCacheDataBlock()
Grid::CEngineConnection::SizeFile(unsigned int, TSteamError*)
typeinfo for CryptoPP::CFBEncryption
typeinfo name for Grid::CIndexAppIdToSubscriptionIdsRecord
Grid::TPreloaderCacheInfo* std::__uninitialized_copy<false>::uninitialized_copy<Grid::TPreloaderCacheInfo*, Grid::TPreloaderCacheInfo*>(Grid::TPreloaderCacheInfo*, Grid::TPreloaderCacheInfo*, Grid::TPreloaderCacheInfo*)
Grid::CFs::CMountInUseException::Clone() const
common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException::Clone() const
std::vector<std::string, std::allocator<std::string>>::operator=(std::vector<std::string, std::allocator<std::string>> const&)
common::CBlobKey::~CBlobKey()
Grid::CCacheOneFileFixedBlock::GetSponsorUrl()
Grid::CEngineLoopbackConnection::CreateCachePreloaders(TSteamError*)
typeinfo name for CryptoPP::SHA
common::CBlobKey::DeleteValue(std::string const&)
typeinfo for Grid::CDiscountRecord
arg::generic_reference::decrement_strong_references() const
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Inverse(CryptoPP::Integer const&) const
common::CConfigDatabase::GetNamespaceValues(char const*) const
Grid::CCacheFileFixedChecksum::CCacheFileFixedChecksum(_IO_FILE*)
DW.ref._ZTIN6common33CUsedAuthenticatorTimestampsCache56CNoAuthenticatorTimestampsRecordedForThisClientExceptionE
CryptoPP::RandomPool::~RandomPool()
Grid::CPipeComm::~CPipeComm()
sigslot::has_slots<sigslot::multi_threaded_local>::~has_slots()
std::auto_ptr<common::CThreadSafeCountedPtr<common::CThread::CImpl>>::~auto_ptr()
typeinfo for Grid::CSimpleErrorCodeException
Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState::~CSendRequestState()
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob::index_iterator const&, unsigned int, unsigned char const*)
vtable for CryptoPP::BitBucket
Grid::CMustBeOnlineException::ThrowSelf() const
common::CMallocedBlock::Realloc(unsigned int)
GetCurrentProcessId()
__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>> std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>)
Grid::CAccount::CImpl::GetAppStateFromOwnedSubscriptionOverride(std::vector<unsigned int, std::allocator<unsigned int>> const&)
CryptoPP::SecBlock<unsigned long>::~SecBlock()
Grid::CBinaryLogFile::m_tsrcpSingleton
Grid::CClientContentTicket::~CClientContentTicket()
Grid::CAccountSubscriptionRecord::~CAccountSubscriptionRecord()
typeinfo name for Grid::CAccountUserPasswordsRecord
typeinfo name for ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>
common::CMultiFieldBlob::RecurseUpwardsToEnsureHaveNonPreprocessedVersion(common::CMultiFieldBlob::ECacheCommand, bool, bool)
typeinfo name for Grid::ICache::CBadArgException
common::CThreadLocalPtr<Grid::IEngineConnection>::OnThreadDetach()
Grid::InternalSteamRepairOrDecryptCaches(unsigned int, unsigned int, int, TSteamError*)
Grid::CAppStatus::SetAppDLCDownloaded(unsigned int, unsigned int)
common::CNamedArgsUndefinedNameException::ThrowSelf() const
Grid::CAllAppsPublicKeysRecord::~CAllAppsPublicKeysRecord()
std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int>>::~_Rb_tree()
typeinfo for Grid::CAccountExternalBillingInfoRecord
__gnu_cxx::new_allocator<unsigned long>::new_allocator()
vtable for Grid::CEngineLoopbackConnection
typeinfo for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState
Grid::CCacheOneFileFixedBlock::Flush()
Grid::CClientConnection::HandleReadFile()
Grid::CEngineLoopbackConnection::AbortCall(unsigned int, TSteamError*)
CryptoPP::PK_FixedLengthCryptoSystem::~PK_FixedLengthCryptoSystem()
CryptoPP::Store::~Store()
virtual thunk to CryptoPP::HexEncoder::Put(unsigned char)
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::~vector()
Grid::CAppFilesystemsRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CUnknownReadException::ThrowSelf() const
Grid::CAccount::GetSubscriptionStats(TSteamSubscriptionStats*)
Grid::CCSERServerAddressCache::~CCSERServerAddressCache()
Grid::CFsCacheGroup::CImpl::~CImpl()
Grid::CSClient::CConnection::~CConnection()
typeinfo for Grid::CAppLaunchOptionsRecord
Grid::CDiscountQualifierRecord::CValidateFieldsException::~CValidateFieldsException()
sigslot::_signal_base<sigslot::multi_threaded_local>::~_signal_base()
Grid::GeneralDirectoryServerCommands::FindAllRDKFMasterServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
_Unwind_RaiseException
typeinfo name for common::CConnectException
CryptoPP::ModularArithmetic::Inverse(CryptoPP::Integer const&) const
virtual thunk to CryptoPP::BufferedTransformationWithAutoSignal::GetAutoSignalPropagation() const
Grid::CFs::ChangeSelectedAppVersion(std::string const&, unsigned int, unsigned int, common::CCommandStatusControl*)
std::vector<Grid::CContentServerIdWithIPAddrPort, std::allocator<Grid::CContentServerIdWithIPAddrPort>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CContentServerIdWithIPAddrPort*, std::vector<Grid::CContentServerIdWithIPAddrPort, std::allocator<Grid::CContentServerIdWithIPAddrPort>>>, Grid::CContentServerIdWithIPAddrPort const&)
Grid::CEngineLoopbackConnection::~CEngineLoopbackConnection()
Grid::CFs::CNotFoundException::CNotFoundException(common::CErrorCodeException::ESpecificType)
vtable for Grid::CReturnBufferAggregate
Grid::CFs::LogoutUser(std::string const&, unsigned int)
Grid::CSubscriberAccountRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::StringSinkTemplate<std::string>::Put(unsigned char const*, unsigned int)
typeinfo for common::CNamedArgsUndefinedNameException
std::map<unsigned int, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::operator[](unsigned int const&)
common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException::~CFlushMemoryMappedFileFailedException()
ICmd_::~ICmd_()
CompressionAlgs::GetSizeOfUncompressedEncryptedFile(unsigned char const*)
typeinfo for Grid::IResourceList
typeinfo name for CryptoPP::StringSource
typeinfo name for common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
Grid::CEngineConnection::VerifyPassword(char const*, int*, TSteamError*)
Grid::CClientConnection::HandleIsFileImmediatelyAvailable()
Grid::CTicketExpiredException::ThrowSelf() const
std::vector<unsigned short, std::allocator<unsigned short>>::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short>>>, unsigned short const&)
InterlockedIncrement(long volatile*)
Grid::CCacheQueueManager::WorkerThreadEndItemService(unsigned int, common::ICloneableException const*)
common::CMultiFieldBlob::InternalUpdateKnownPresentField(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, unsigned int, unsigned char const*, unsigned int)
vtable for Grid::CClientConnection
Grid::OfflineStatus::SetCurrentContentFailsafeInfo(bool, unsigned int, unsigned int)
_Unwind_DeleteException
common::CMainConfigTree::s_tsrcpConfigTree
arg::counted_ptr<Grid::IResourceList>::~counted_ptr()
common::CErrorCodeException::~CErrorCodeException()
CryptoPP::BufferedTransformation::Peek(unsigned char&) const
CryptoPP::BufferedTransformation::Get(unsigned char&)
Grid::CEngineConnection::RequestEmailAddressVerificationEmail(TSteamError*)
Grid::ICache::CFingerPrintDoesNotMatchException::~CFingerPrintDoesNotMatchException()
std::auto_ptr<Grid::CCacheBatBlock>::reset(Grid::CCacheBatBlock*)
common::LockGuard<common::CFastThreadMutex>::ManualReacquireNow()
std::_Deque_base<Grid::ICommandState*, std::allocator<Grid::ICommandState*>>::~_Deque_base()
common::CThread::CException::~CException()
common::CThreadSafeCountedPtr<Grid::CActivityLog>::dispose()
Grid::CCacheOneFileFixedBlock::CImpl::Serialize()
std::vector<unsigned int, std::allocator<unsigned int>>::reserve(unsigned int)
Grid::CCacheQueueManager::RemoveItem(unsigned int)
typeinfo name for Grid::CPipeComm::CBrokenPipeException
std::string BSL::I2STemplate<std::string, BSL::ETimePrecision>(BSL::ETimePrecision, int, int)
typeinfo for Grid::CCacheDataBlock
CAsyncIOManager::aio_write(aiocb*)
CryptoPP::FilterWithBufferedInput::MessageEnd(int)
std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState*&, Grid::ICommandState**> std::copy<Grid::ICommandState*>(std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState* const&, Grid::ICommandState* const*>, std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState* const&, Grid::ICommandState* const*>, std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState*&, Grid::ICommandState**>)
std::allocator<unsigned long>::~allocator()
ScopeGuardImpl1<bool (*)(std::string const&), std::string>::~ScopeGuardImpl1()
non-virtual thunk to CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::operator=(std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&)
Grid::CEngineLoopbackConnection::SizeFile(unsigned int, TSteamError*)
vtable for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CCacheOneFileFixedBlock::GetCountFragmentedFiles(unsigned int*, unsigned int*)
Grid::CCacheOneFileFixedBlock::CImpl::CommitBatEntry(unsigned int, unsigned int)
Grid::CVTSIPAddressCache::~CVTSIPAddressCache()
Grid::CFs::GetTotalUpdateStats(TSteamUpdateStats*)
CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
common::CBlobKey::DeleteSubKeyNoThrow(std::string const&)
common::CLogFile::~CLogFile()
Grid::CAppVersionsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CFs::CAppHasNoCacheFileException::Clone() const
CryptoPP::FileSink::Put(unsigned char)
typeinfo name for Grid::CAppVersionLaunchOptionIdsRecord
ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::~ScopeGuardImpl2()
Grid::CAccountUserPasswordRecord::~CAccountUserPasswordRecord()
typeinfo for CryptoPP::FileSink::WriteErr
common::CRecvException::~CRecvException()
typeinfo name for std::iterator<std::random_access_iterator_tag, std::string, int, std::string*, std::string&>
CryptoPP::IteratedHashBase<unsigned long>::Reinit()
CryptoPP::Source::~Source()
vtable for CryptoPP::PublicKeyBaseTemplate<CryptoPP::InvertibleRSAFunction>
typeinfo name for common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>
Grid::IManifestIteratorImpl::GetFileTime() const
Grid::InternalSteamRequestAccountsByEmailAddressEmail(unsigned int, char const*, TSteamError*)
BSL::CTime::CPackingException::~CPackingException()
ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
Grid::CContentDescriptionDBCache::s_sSerializedBlobRegistryValueName
std::_Rb_tree<common::CThreadLocalBase*, common::CThreadLocalBase*, std::_Identity<common::CThreadLocalBase*>, std::less<common::CThreadLocalBase*>, std::allocator<common::CThreadLocalBase*>>::_M_insert_unique(common::CThreadLocalBase* const&)
Grid::CNotLoggedInException::~CNotLoggedInException()
unsigned long* std::__uninitialized_move_a<unsigned long*, unsigned long*, std::allocator<unsigned long>>(unsigned long*, unsigned long*, unsigned long*, std::allocator<unsigned long>&)
zlibVersion
std::vector<common::CLogGroup*, std::allocator<common::CLogGroup*>>::~vector()
common::CStringTable::CImpl::GetString(unsigned int)
inflate_copyright
Grid::CSClient::CConnection::TranslateServerToClientSessionHandle(unsigned int)
typeinfo for ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>
virtual thunk to CryptoPP::StringStore::~StringStore()
typeinfo name for ScopeGuardImpl1<int (*)(int), long>
Grid::ICache::CException::~CException()
common::CBlobKey::CPublicKey::SetValue(std::string const&, unsigned int)
Grid::CLockedCDDBCache::s_Mutex
vtable for Grid::CAppIconsRecord::CValidateFieldsException
typeinfo for CryptoPP::PublicKeyBaseTemplate<CryptoPP::InvertibleRSAFunction>
typeinfo name for Grid::CCacheOneFileFixedBlock::CImpl::CCacheLockHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
Grid::CReturnBufferAggregate::~CReturnBufferAggregate()
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
OutputDebugString(char const*)
vtable for Grid::CCacheOneFileFixedBlock::CImpl::CCacheLockHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
Grid::CManifestIterator::CManifestIterator(Grid::CManifestIterator const&)
common::CMultiFieldBlob::CInvalidMemoryMappedFileException::Clone() const
typeinfo for CryptoPP::NonblockingRng
common::DoBlockingConnectionShutdown(int, common::CWSABUFWrapper&)
_Unwind_FindEnclosingFunction
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::_M_insert_unique(std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>> const&)
Grid::CCacheFileFixedDirectory::GetLocationInChain(unsigned int, unsigned int, unsigned int, unsigned int*, bool*)
Grid::ICache::COpenException::Clone() const
Grid::CAccount::FindApp(std::string const&, unsigned int*, bool)
Grid::CClientConnection::HandleMoveApp()
Grid::CTicketCache::SetUser(std::string const&, common::CMallocedBlock*, common::CCommandStatusControl*)
Grid::CLockedCDDBCache::s_vecSubcriptionIds
virtual thunk to CryptoPP::RSAFunction::ImageBound() const
common::CPeerGracefullyClosedConnectionCommException::~CPeerGracefullyClosedConnectionCommException()
Grid::CAccountPrepurchaseInfoRecord::~CAccountPrepurchaseInfoRecord()
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Add(CryptoPP::Integer const&, CryptoPP::Integer const&) const
typeinfo name for Grid::CReturnBufferAggregate
typeinfo name for Grid::CClientAgentThread
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>> const&)
vtable for Grid::CAccountSubscriptionRecord::CValidateFieldsException
ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>::~ScopeGuardImpl1()
ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
common::CCompressionException::~CCompressionException()
typeinfo for common::CMultiFieldBlob::CPreprocessingFailedException
vtable for Grid::CAccount::CImpl
Grid::CEngineLoopbackConnection::SeekFile64(unsigned int, long long, ESteamSeekMethod, TSteamError*)
common::CBlobRegistry::DeleteSubKeyTreeNoThrow(std::string const&)
common::CCommandStatusControlAutoTimeout::~CCommandStatusControlAutoTimeout()
vtable for Grid::CAllDiscountQualifiersRecord::CValidateFieldsException
DW.ref._ZTIN4Grid34CNoContentServerAvailableExceptionE
common::CThreadSafeCountedPtr<Grid::CClientAgentThread>::dispose()
Grid::CEngineConnection::AbortCall(unsigned int, TSteamError*)
CryptoPP::PK_CryptoSystem::~PK_CryptoSystem()
Grid::CSClient::CException::~CException()
Grid::CDiscountRecord::CValidateFieldsException::ThrowSelf() const
CryptoPP::IsStrongLucasProbablePrime(CryptoPP::Integer const&)
Grid::CFs::CMountInUseException::CMountInUseException(common::CErrorCodeException::ESpecificType)
Grid::GeneralDirectoryServerCommands::FindAllHLMasterServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
typeinfo for common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException
Grid::CLockedCDDBCache::CLockedCDDBCache(bool, bool*, common::CCommandStatusControl*)
typeinfo for Grid::ICache::CCorruptionException
typeinfo name for Grid::CSClient::CLogoutFSM
std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::~PKCS_DecoratedHashModule()
std::vector<unsigned char, std::allocator<unsigned char>>::~vector()
common::CCompressionException::ThrowSelf() const
Grid::CSClient::CBlockingReadFileCompletionHandler::CompleteReadFile(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
common::CLogFile::~CLogFile()
Grid::CSplitPath::GetFullPath() const
common::CThread::CException::Clone() const
typeinfo name for ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>
Grid::CSClient::CInvalidSessionHandleException::Clone() const
Grid::InternalSteamGetCachePercentFragmentation(unsigned int, unsigned int, unsigned int*, TSteamError*)
common::CCompressionException::~CCompressionException()
typeinfo for Grid::CSClient::CReadFileFSM
CryptoPP::MontgomeryRepresentation::ConvertIn(CryptoPP::Integer const&) const
vtable for Grid::CNoContentServerAvailableException
CryptoPP::Integer::DivideByZero::~DivideByZero()
Grid::CFsCacheGroup::Tell(unsigned int)
typeinfo for ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>
common::CBlobValueIterator::IsSameAs(common::IValueIteratorImpl*) const
Grid::CCacheDescBlock::~CCacheDescBlock()
vtable for common::CThread::CException
Grid::CSClient::CReadFileFSM::CSendRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
Grid::CAppStatus::BAppDLCDownloaded(unsigned int, unsigned int)
Grid::CCacheDataBlock::GetDiskFixedSize()
typeinfo for common::CLogGroup
typeinfo for Grid::CBadApiArgumentException
typeinfo for Grid::CAccountPaymentCardInfoRecord
BSL::CUnpackedTime::CFromStringInvalidLength::~CFromStringInvalidLength()
non-virtual thunk to CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
Grid::CSClient::CReadPurgeListFSM::~CReadPurgeListFSM()
Grid::CCacheGroupIterator::~CCacheGroupIterator()
typeinfo for common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException
common::CThreadSafeQueue<unsigned int>::~CThreadSafeQueue()
Grid::ICommandState::StartAckSubscriptionReceipt(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
typeinfo name for Grid::CSClient::CReadManifestFSM
typeinfo name for Grid::CAppVersionsRecord
Grid::ICache::CWriteException::ThrowSelf() const
common::CFileUtil::GetFileSize(std::string const&)
vtable for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState
vtable for ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>
std::_Rb_tree<unsigned long, std::pair<unsigned long const, CAsyncIOManager::data_t*>, std::_Select1st<std::pair<unsigned long const, CAsyncIOManager::data_t*>>, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, CAsyncIOManager::data_t*>>>::~_Rb_tree()
Grid::CAppStatus::SaveAppStatus(unsigned int, unsigned long long, unsigned long long)
Grid::CPreauthenticationFailedException::Clone() const
common::CMainConfigDatabase::~CMainConfigDatabase()
common::CThreadLocalPtr<std::string>::~CThreadLocalPtr()
Grid::CCacheManifestOnly::GetUserConfigFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
typeinfo for Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>
Grid::CUserAppAccessRightsRecord::CValidateFieldsException::ThrowSelf() const
typeinfo name for Grid::CActivityLog::CAssertObserver
std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::IAssertObserver**, std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>>, common::IAssertObserver* const&)
std::map<unsigned int, Grid::CLockedCDDBCache::LocalAppRecord_t, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>>::~map()
common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>::~ObjFunctorImpl8()
Grid::InternalSteamGetNumAccountsWithEmailAddress(unsigned int, char const*, unsigned int*, TSteamError*)
PeekNamedPipe(void*, void*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
common::CBadAlloc::CBadAlloc(char const*, bool)
typeinfo for Grid::ICache
Grid::CBadCallHandleException::ThrowSelf() const
Grid::CEngineLoopbackConnection::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for common::CMultiFieldBlob::index_iterator_impl
Grid::CFs::CAppHasNoCacheFileException::~CAppHasNoCacheFileException()
std::vector<CryptoPP::WindowSlider, std::allocator<CryptoPP::WindowSlider>>::reserve(unsigned int)
CryptoPP::DERGeneralEncoder::~DERGeneralEncoder()
typeinfo for CryptoPP::PK_SignatureSystem
Grid::CAccount::CImpl::GetSubsForApp(unsigned int, std::vector<unsigned int, std::allocator<unsigned int>>&)
Grid::CCacheFileFixedFsTree::GetBinarySize() const
Grid::CEngineConnection::Uninstall(TSteamError*)
common::FinishedExtracting(unsigned char*, unsigned char*)
Grid::CReturnBufferItem<unsigned int>::Send(Grid::CPipeComm*)
std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>::operator=(std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>> const&)
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::CipherTextLength() const
Grid::CEngineLoopbackConnection::TellFile(unsigned int, TSteamError*)
vtable for common::CLogGroup
Grid::CFsCacheGroup::CImpl::GetFlags(Grid::CSplitPath const&, unsigned int*)
Grid::CEngineConnection::GetCacheDecryptionKey(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
Grid::CFs::PreloaderExists(std::string const&, unsigned int)
vtable for common::CFileUtil::IFindFile
CryptoPP::PK_Decryptor::~PK_Decryptor()
Grid::CClientConnection::HandleRemoveAppDependency()
Grid::CClientRegistry::CreateCacheKeyName(unsigned int, bool)
BSL::CUnpackedTime::CFromStringException::CFromStringException(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
Grid::CSClient::CReadFileFSM::CRecvInitialReplyState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
typeinfo name for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState
common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>::CThreadSafeCountedPtr(Grid::CClientAuthenticationTicket*)
common::IFunctor::~IFunctor()
Grid::InternalSteamWaitForAppReadyToLaunch(unsigned int, unsigned int, TSteamError*)
common::CTypeMismatchException::CTypeMismatchException(std::string const&, std::string const&, std::string const&, std::string const&)
Grid::CFsTable::CImpl::PauseAllPreloaders()
Grid::CLockedCDDBCache::GetCachedSubscriptionRecord(unsigned int)
Grid::CContentDescriptionRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for common::IValueIteratorImpl
void std::sort<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
Grid::InternalSteamGetAppDir(unsigned int, unsigned int, char*, TSteamError*)
Grid::CAccountUserPasswordRecord::CValidateFieldsException::Clone() const
typeinfo name for Grid::CAccountOrUserDoesNotExistException
vtable for sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CSClient::IBlockingCompletionHandler::~IBlockingCompletionHandler()
ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>::~ScopeGuardImpl3()
construction vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>-in-CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
typeinfo name for Grid::CDiscountRecord::CValidateFieldsException
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
common::CLog::EnableThreadId()
vtable for common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>
void std::_Destroy_aux<false>::__destroy<std::pair<common::RemoteFileHarvest::EFileType, std::string>*>(std::pair<common::RemoteFileHarvest::EFileType, std::string>*, std::pair<common::RemoteFileHarvest::EFileType, std::string>*)
Grid::CStalledCallException::CStalledCallException()
std::vector<unsigned long, std::allocator<unsigned long>>::~vector()
common::CNamedArgs::CNamedArgs()
std::vector<std::string, std::allocator<std::string>>::max_size() const
std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int>>::~_Rb_tree()
Grid::IServerAddressCache::RemoveAllAddresses()
Grid::CClientConnection::HandleGetUserType()
VTT for CryptoPP::BERGeneralDecoder
typeinfo name for common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException
Grid::CManifestIterator::operator=(Grid::CManifestIterator const&)
typeinfo for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState
Grid::CCacheQueueManager::GetNextItemToService()
Grid::CSClient::CService::ReconnectThreadInit()
common::CBlobKey::SubKeyExists(std::string const&)
Grid::CAccountUserRecord::~CAccountUserRecord()
Grid::CAllAppsPublicKeysRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CAccount::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*)
Grid::CClientConnection::HandleFlushCache()
typeinfo for Grid::CCachePreLoader::CImpl::CReadCompletionHandler
Grid::CAccount::ChangeForgottenPassword(common::CCommandStatusControl&, std::string const&, std::string const&, std::string const&, std::string const&)
CryptoPP::AES_PHM_GenerateIvFromSeed(unsigned char const*, unsigned char*)
Grid::CCacheNone::~CCacheNone()
CryptoPP::HashFilter::Put(unsigned char)
CryptoPP::PK_FixedLengthCryptoSystem::CipherTextLength(unsigned int) const
common::CFileUtil::CreateDirIfNotExists(std::string const&)
Grid::CMustBeOnlineException::~CMustBeOnlineException()
Grid::CShippingInfoRecord::CValidateFieldsException::ThrowSelf() const
Grid::CSClient::CReadPurgeListFSM::DoFinish()
Grid::CFs::ReadFileFromCache(std::string const&, unsigned int, unsigned int, std::string const&, common::CMallocedBlock&, common::CCommandStatusControl*)
Grid::CFsTable::GetPreloaderMFPFileList(std::string const&, unsigned int)
common::CNamedArgs::IsInCache(std::string const&) const
Grid::ICommandState::~ICommandState()
CryptoPP::FileSink::WriteErr::~WriteErr()
construction vtable for CryptoPP::Filter-in-CryptoPP::CBCPaddedEncryptor
virtual thunk to CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
Grid::CCacheFileFixedDirectory::SerializeEntry(unsigned int, _IO_FILE*)
CMessageBuffer::GetCurSize()
Grid::CLocalClockSkewException::~CLocalClockSkewException()
Grid::CCacheExceptionTranslator::~CCacheExceptionTranslator()
fstat64
Grid::CBinaryLogFile::~CBinaryLogFile()
DisconnectNamedPipe(void*)
Grid::CSubscriberAccountRecord::~CSubscriberAccountRecord()
common::CThread::CThread(std::string const&, bool, common::CThread::EPriority)
Grid::CMasterResourceList::CMasterResourceList(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::string const&)
std::map<unsigned int, Grid::CLockedCDDBCache::LocalAppRecord_t, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>>::~map()
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl()
Grid::InternalSteamSetMaxStallCount(unsigned int, TSteamError*)
typeinfo name for common::IRegistry
Grid::CContentDescriptionDBCache::CContentDescriptionDBCache()
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::~map()
unsigned long* std::uninitialized_copy<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
common::CBlobKey::CPublicKey::GetValue(std::string const&, unsigned int*)
Grid::CResourceListStrings::~CResourceListStrings()
ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>::~ObjScopeGuardImpl0()
vtable for ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>
typeinfo name for common::CTypeMismatchException
vtable for sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CFileIdChecksumTable::CCorruptSerializedVersionException::~CCorruptSerializedVersionException()
construction vtable for CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
Grid::CEngineConnection::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
CryptoPP::Store::~Store()
Grid::CEngineConnection::AckSubscriptionReceipt(unsigned int, TSteamError*)
Grid::CEngineLoopbackConnection::MountAppFilesystem(unsigned int, unsigned int, TSteamError*)
Grid::CNotLoggedInException::CNotLoggedInException()
FindNextFile(void*, _finddata_t*)
common::CMultiFieldBlob::CPreprocessingFailedException::~CPreprocessingFailedException()
_Unwind_ForcedUnwind
std::string BSL::I2STemplate<std::string, int>(int, int, int)
typeinfo for common::IAssertObserver
__gnu_cxx::__normal_iterator<char*, std::string>::operator++(int)
typeinfo name for Grid::CFsTable
Grid::CAccountPrepurchaseInfoRecord::~CAccountPrepurchaseInfoRecord()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>*)
CryptoPP::ArrayXorSink::~ArrayXorSink()
common::CMultiFieldBlob::CInvalidSerializedBlobException::ThrowSelf() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::~_Rb_tree()
std::vector<Grid::CSClient::TClientBandwidthStats, std::allocator<Grid::CSClient::TClientBandwidthStats>>::~vector()
Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException::ThrowSelf() const
g_pSteam2Bridge
vtable for Grid::CSClient::ICompletionHandler
typeinfo name for Grid::CDiscountQualifierRecord
common::CValue::GetString() const
Grid::CAuthenticationServerIsNotMasterException::~CAuthenticationServerIsNotMasterException()
typeinfo name for common::CNetworkException
Grid::CFs::CFileAccessRightsException::~CFileAccessRightsException()
typeinfo name for Grid::CFs::CMountInUseException
Grid::CAccount::RequestAccountsByEmailAddressEmail(common::CCommandStatusControl&, std::string const&)
Grid::CCacheFileFixedDirectoryEntry::SetCompressionType(unsigned int)
std::map<unsigned long, unsigned short, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned short>>>::~map()
vtable for common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>
common::CLog::EnableElapsedTime()
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Zero() const
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_copy(std::_Rb_tree_node<std::pair<std::string const, std::string>> const*, std::_Rb_tree_node<std::pair<std::string const, std::string>>*)
Grid::CFs::Cleanup()
common::SetSocketToAbortWhenClosed(int)
unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)
Grid::CEngineConnection::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
Grid::CFsBuffer::Seek(long long, int)
Grid::CClientConnection::HandleGetAppPurchaseCountry()
CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>::~AbstractEuclideanDomain()
Grid::CSubscriptionAppIdsRecord::~CSubscriptionAppIdsRecord()
Grid::ICommandState::s_uMaxNumCalls
vtable for CryptoPP::IteratedHash<unsigned long, false, 64u>
Grid::IResourceList::GetPriority()
Grid::CNotFoundException::CNotFoundException()
Grid::CAccountUserRecord::~CAccountUserRecord()
common::CNetworkException::Clone() const
Grid::CAccount::GetUserType()
ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
std::vector<Grid::CCacheFileFixedDirectory::TEntry_mini, std::allocator<Grid::CCacheFileFixedDirectory::TEntry_mini>>::~vector()
Grid::CFsTable::CreatePreloader(std::string const&, unsigned int, std::string const&, std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>> const&, std::string const&, bool)
common::CBlobKey::ValueExists(std::string const&)
typeinfo for Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler
CryptoPP::RijndaelDecryption::RijndaelDecryption(unsigned char const*, unsigned int)
typeinfo for Grid::ICache::CResourceChecksumFailure
Grid::IManifestIteratorImpl::ConstructName(char*, unsigned int, unsigned int) const
ISteamInterface::~ISteamInterface()
Grid::operator==(Grid::TPreloaderCacheInfo const&, Grid::TPreloaderCacheInfo const&)
typeinfo name for CryptoPP::PK_Verifier
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(char const*, Grid::CCacheGroup*, unsigned int)
std::_Vector_base<std::string, std::allocator<std::string>>::_Vector_impl::_Vector_impl(std::allocator<std::string> const&)
std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>::~pair()
CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
Grid::CCacheOneFileFixedBlock::CImpl::CreateRequestList(unsigned int, unsigned int, Grid::CManifestIterator&, std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>&)
Grid::ICommandState::StartChangeForgottenPassword(std::string const&, std::string const&, std::string const&, std::string const&, int*)
Grid::CClientConnection::HandleChangeEmailAddress()
Grid::CSClient::CService::ReconnectThreadDeinit()
CryptoPP::SecBlock<unsigned char>::~SecBlock()
Grid::CCacheManifestOnly::CImpl::CImpl(std::string const&, std::string const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int, bool)
ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
Grid::CManifestReadException::ThrowSelf() const
CryptoPP::FileSink::FileSink(char const*, bool)
Grid::CFsTable::InvalidateUser(std::string const&, unsigned int)
Grid::CMasterResourceList::Add(std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>&, Grid::ContentPriority::ERequestLevel, bool, bool)
CryptoPP::PK_FixedLengthDecryptor::~PK_FixedLengthDecryptor()
virtual thunk to CryptoPP::PK_Decryptor::~PK_Decryptor()
std::vector<std::vector<unsigned int, std::allocator<unsigned int>>, std::allocator<std::vector<unsigned int, std::allocator<unsigned int>>>>::~vector()
virtual thunk to CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::Verify(CryptoPP::HashModule*, unsigned char const*) const
typeinfo name for Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException
__gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned int)
typeinfo for Grid::CSClient::CReadManifestFSM::CSendRequestState
VTT for CryptoPP::FilterWithBufferedInput
typeinfo name for sigslot::_signal_base<sigslot::multi_threaded_local>
Grid::CClientConnection::s_ReturnBufferTableLock
common::ICloneableException::~ICloneableException()
virtual thunk to CryptoPP::Filter::Attachable()
common::CMultiFieldBlob::CInvalidMemoryMappedFileException::~CInvalidMemoryMappedFileException()
Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState::~CSendSessionLogoutRequestState()
common::CBlobKey::CPublicKey::~CPublicKey()
vtable for BSL::CTime::CPackingException
Grid::CReadFileChecksumFailedException::~CReadFileChecksumFailedException()
Grid::ICache::CCacheKeysNotAvailableException::Clone() const
common::CSubKeyIterator::~CSubKeyIterator()
ResumeThread(void*)
Grid::CPipeComm::RecvData(void*, unsigned int)
std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::~map()
vtable for Grid::CSClient::CReadFileFSM::CRecvInitialReplyState
common::CMultiFieldBlob::CMultiFieldBlob(char const*, common::CMultiFieldBlob::EMemoryMappedFileAccessMode, unsigned int, unsigned int, unsigned char const*)
Grid::CAccountSubscriptionsBillingInfoRecord::~CAccountSubscriptionsBillingInfoRecord()
CryptoPP::CFBDecryption::~CFBDecryption()
Grid::CCacheOneFileFixedBlock::CImpl::CImpl(std::string const&, std::vector<std::string, std::allocator<std::string>> const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int)
CryptoPP::PK_SignatureSystem::~PK_SignatureSystem()
common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException::ThrowSelf() const
Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>
Grid::CManifestBinException::~CManifestBinException()
typeinfo for CryptoPP::HashModule
CBlockingUDPSocket::SendSocketMessage(sockaddr_in const&, unsigned char const*, unsigned int)
Grid::CNotFoundException::Clone() const
CryptoPP::Integer::Negate()
Grid::CCacheOneFileFixedBlock::FlushFile(Grid::CManifestIterator&)
common::CBlobValueIterator::~CBlobValueIterator()
Grid::CCacheGroup::GenerateAppStatus(unsigned int, Grid::CNodeGroup*, Grid::CAppStatus*, Grid::CCacheGroupIterator, unsigned long long*, unsigned long long*)
std::vector<std::string, std::allocator<std::string>>::operator[](unsigned int) const
typeinfo name for common::CBlobRegistry
BSL::CException::~CException()
Grid::CFsTable::IMountedCache::~IMountedCache()
CryptoPP::HMAC<CryptoPP::SHA>::~HMAC()
typeinfo for CryptoPP::BlockTransformation
common::CMultiFieldBlob::sc_DefaultConstructedBlob
CryptoPP::BufferedTransformation::PeekWord16(unsigned short&, bool)
Grid::CEngineConnection::VerifyEmailAddress(char const*, TSteamError*)
vtable for ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
typeinfo for Grid::CFs::CFileAccessRightsException
Grid::CCacheGroup::AddCache(Grid::CCacheGroup::TCacheGroupEntry&)
typeinfo for Grid::CFs::CBadHandleException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::_M_insert_unique(std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>> const&)
CryptoPP::BitPrecision(unsigned long)
DW.ref._ZTIN4Grid8CSClient28CSessionLoginFailedExceptionE
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::ICommandState>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>>::~map()
common::CThreadSafeAutoSeededRandomPoolSingleton::~CThreadSafeAutoSeededRandomPoolSingleton()
Grid::CAllAppsRecord::CValidateFieldsException::~CValidateFieldsException()
common::CBadAlloc::Clone() const
Grid::CEngineConnection::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
Grid::CSClient::CLoginFSM::~CLoginFSM()
typeinfo for Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState
Grid::CClientManager::CImpl::s_uPipeToken
Grid::CCacheFileFixedFsTree::GetManifestIterator(unsigned int) const
Grid::CCellIDManager::Instance()
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, common::CBlobKey*>>*)
__wrap_rmdir
CryptoPP::AbstractGroup<CryptoPP::Integer>::~AbstractGroup()
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::~_Rb_tree()
typeinfo for ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>
Grid::CAllAppsRecord::CValidateFieldsException::Clone() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CSClient::CSession*>, std::_Select1st<std::pair<unsigned int const, Grid::CSClient::CSession*>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CSClient::CSession*>>>::~_Rb_tree()
Grid::CAccountPaymentCardReceiptRecord::~CAccountPaymentCardReceiptRecord()
Grid::CMultipleCacheLock::ManuallyReleaseLocksNow()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>> const*, std::_Rb_tree_node<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>*)
Grid::CEngineNotRunningException::~CEngineNotRunningException()
Grid::CEngineLoopbackConnection::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
common::CThreadSafeCountedPtr<common::CFastThreadMutex>::dispose()
CryptoPP::IteratedHash<unsigned long, false, 64u>::~IteratedHash()
Grid::CFsTable::MountExists(std::string const&) const
common::IFunctor::~IFunctor()
Grid::CAccountEmptyReceiptRecord::~CAccountEmptyReceiptRecord()
CryptoPP::BERGeneralDecoder::~BERGeneralDecoder()
Grid::CCacheManifestOnly::CancelRead(unsigned int)
Grid::CAccount::GetUserID(TSteamGlobalUserID&)
Grid::CEngineLoopbackConnection::GetCurrentCellID(unsigned int*, unsigned int*, TSteamError*)
Grid::CFs::CMountInUseException::~CMountInUseException()
common::CFileUtil::CreateDirectoriesInPath(std::string const&)
typeinfo for common::CMultiFieldBlob::CFieldAlreadyExistsException
void std::_Destroy_aux<false>::__destroy<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>*>(common::CThreadSafeCountedPtr<common::IEventLoopFunctor>*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>*)
Grid::CSClient::CManifestFingerprintMistatchOnReconnectException::~CManifestFingerprintMistatchOnReconnectException()
Grid::CClientConnection::ObserveCallbackEvent(ESteamNotificationCallbackEvent, unsigned int)
Grid::CTicketCache::~CTicketCache()
CryptoPP::ByteQueue::Walker::MaxRetrievable() const
typeinfo name for ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>
Grid::CTicketExpiredException::CTicketExpiredException()
Grid::IManifestIteratorImpl::IsLaunchFile() const
void sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>::connect<Grid::CAccount::CImpl>(Grid::CAccount::CImpl*, void (Grid::CAccount::CImpl::*)(std::string const&, unsigned int))
typeinfo name for Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState
Grid::CSClient::CReadManifestFSM::~CReadManifestFSM()
Grid::CSClient::CLogoutFSM::CLogoutFSM(Grid::CSClient::CSession&, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CNamedArgsUndefinedNameException::Clone() const
Grid::ICache::ICacheCompletionHandler::ICacheCompletionHandler()
Grid::CCommandThreadPool::~CCommandThreadPool()
typeinfo for Grid::CSClient::CBlockingReadFileChecksumTableHandler
common::CThread::CImpl::Thread()
Grid::CSClient::CConnection::CompleteHeaderRecv()
construction vtable for CryptoPP::Filter-in-CryptoPP::CBCPaddedDecryptor
std::auto_ptr<Grid::CResourceFile>::~auto_ptr()
CryptoPP::RSAFunction::~RSAFunction()
std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldDescriptor*, std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>>>, common::CMultiFieldBlob::TFieldDescriptor const&)
Grid::CCacheDataBlock::Write(unsigned int, unsigned int, unsigned int, unsigned char const*)
Grid::CFsTable::CacheUnlock(std::string const&)
Grid::CSClient::CBlockingReadFileChecksumTableHandler::~CBlockingReadFileChecksumTableHandler()
Grid::CEngineConnection::~CEngineConnection()
common::CBlobException::~CBlobException()
Grid::ICache::GetMaxEntries()
common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>::dispose()
Grid::CCachePreLoader::CImpl::ReadHandlerProc(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
CryptoPP::Integer::ByteCount() const
Grid::ICacheGroupIteratorImpl::CInvalidCache::~CInvalidCache()
common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>::~ObjFunctorImpl0()
std::map<unsigned int, std::string, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::~map()
typeinfo name for Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException
common::CExceptionHolder::CExceptionHolder()
typeinfo name for Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException
ScopeGuardImpl1<int (*)(int), long>::ExecuteNowIfNotDismissed() const
Grid::GeneralDirectoryServerCommands::FindAllCSDSFindContentServersIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
typeinfo for CryptoPP::RijndaelDecryption
Grid::CFsBuffer::Getc()
typeinfo for Grid::CPreauthenticationFailedException
Grid::CSClient::CReadManifestFSM::CReadManifestFSM(Grid::CSClient::CSession&, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CCacheOneFileFixedBlock::CImpl::Resize(unsigned long long)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>*)
Grid::CAccountSubscriptionBillingInfoRecord::~CAccountSubscriptionBillingInfoRecord()
Grid::CCacheManifestOnly::CImpl::UpgradeFsTree(Grid::CCacheFileFixedFsTree*, Grid::CCacheFileFixedChecksum*, common::CCommandStatusControl*, bool)
Grid::CEngineLoopbackConnection::ForgetAllHints(unsigned int, TSteamError*)
Grid::CFsTable::Checkin(bool)
Grid::CCacheFileFixedDirectoryEntry::GetCompressionType() const
vtable for common::CMultiFieldBlob::index_iterator
BSL::CUnpackedTime::ToStr(unsigned char*) const
std::allocator<std::string>::allocator(std::allocator<std::string> const&)
typeinfo for Grid::CLocalClockSkewException
CryptoPP::Integer::operator<<=(unsigned int)
construction vtable for CryptoPP::PK_Verifier-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
sigslot::signal1<unsigned int, sigslot::multi_threaded_local>::~signal1()
CryptoPP::DERGeneralEncoder::DERGeneralEncoder(CryptoPP::BufferedTransformation&, unsigned char)
Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState::~CSendSessionLoginRequestState()
Grid::CEngineConnection::IsFileNeededByApp(unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)
common::CThreadLocalBase::~CThreadLocalBase()
Grid::CSClient::CService::ReadManifest(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo for ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>
std::vector<__gnu_cxx::_Hashtable_node<std::pair<int const, Handle_t*>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<int const, Handle_t*>>*>>::~vector()
Grid::CSClient::CSession::MarkForDestruction()
Grid::ICache::GetDecryptionKey() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CSClient::CSession*>, std::_Select1st<std::pair<unsigned int const, Grid::CSClient::CSession*>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CSClient::CSession*>>>::_M_insert_unique(std::pair<unsigned int const, Grid::CSClient::CSession*> const&)
Grid::CAppFilesystemsRecord::~CAppFilesystemsRecord()
Grid::CClientAgentThread::~CClientAgentThread()
Grid::CAccount::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*)
typeinfo for Grid::CManifestBinException
Grid::CEngineLoopbackConnection::FindFirst64(char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)
Grid::ICache::~ICache()
uncompress
Grid::CCacheManifestOnly::~CCacheManifestOnly()
CryptoPP::StringSinkTemplate<std::string>::~StringSinkTemplate()
CryptoPP::RecursiveMultiplyBottom(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
SafeStrncpy
Grid::InternalSteamChangePersonalQA(unsigned int, char const*, char const*, char const*, TSteamError*)
Grid::ICache::CCacheNeedsRepairException::CCacheNeedsRepairException()
Grid::CReturnBufferItem<char [256]>::~CReturnBufferItem()
Grid::CSubscriptionAppIdsRecord::CValidateFieldsException::ThrowSelf() const
std::vector<__gnu_cxx::_Hashtable_node<std::pair<unsigned int const, common::CIPAddrPort>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<unsigned int const, common::CIPAddrPort>>*>>::~vector()
typeinfo for Grid::CSClient::CSessionDestroyedException
Grid::CRateLimitRecord::CValidateFieldsException::Clone() const
Grid::InternalSteamGetCurrentAppId(unsigned int, unsigned int*, TSteamError*)
Grid::ICommandState::s_ObjectList
Grid::CFs::CReadException::CReadException(common::CErrorCodeException::ESpecificType)
CryptoPP::HashModule::VerifyDigest(unsigned char const*, unsigned char const*, unsigned int)
vtable for BSL::CUnpackedTime::COutOfRange
common::CThread::CThreadAlreadyRunningException::~CThreadAlreadyRunningException()
std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long>&, std::pair<aiocb*, unsigned long>*> std::copy_backward<std::pair<aiocb*, unsigned long>>(std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long> const&, std::pair<aiocb*, unsigned long> const*>, std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long> const&, std::pair<aiocb*, unsigned long> const*>, std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long>&, std::pair<aiocb*, unsigned long>*>)
common::CUsedAuthenticatorTimestampsCache::CUsedAuthenticatorTimestampsCache(BSL::CTime const&, unsigned int)
Grid::IClientConnection::~IClientConnection()
Grid::CAppFilesystemsRecord::~CAppFilesystemsRecord()
CryptoPP::InvertibleRSAFunction::InvertibleRSAFunction(CryptoPP::RandomNumberGenerator&, unsigned int, CryptoPP::Integer const&)
Grid::ICache::CCacheNeedsRepairException::ThrowSelf() const
typeinfo for CryptoPP::PK_Encryptor
Grid::CSubscriberAccountRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::RijndaelEncryption::~RijndaelEncryption()
Grid::CSClient::CReadFileFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
__moddi3
common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException::~CFieldNameNotNumeriCBlobException()
CryptoPP::AES_PHM_Decryption::InvalidCiphertextOrKey::~InvalidCiphertextOrKey()
BSL::CTime::CTimeToPackNegative::DefaultMessage() const
Grid::CCacheDataBlock::GetDataStart() const
WSASocket(int, int, int, void*, void*, unsigned int)
Grid::IManifestIteratorImpl::operator=(Grid::IManifestIteratorImpl const&)
Grid::CContentDescriptionRecord::GetStrippedDownSerializedVersion(unsigned int*) const
ScopeGuardImpl1<bool (*)(std::string const&), std::string>::ExecuteNowIfNotDismissed() const
typeinfo for Grid::CAccountUserRecord
CryptoPP::DERGeneralEncoder::MessageEnd(int)
Grid::CEngineLoopbackConnection::StartLoadingCache(unsigned int, TSteamError*)
Grid::CPipeComm::CBrokenPipeException::~CBrokenPipeException()
vtable for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>
Grid::CNoContentServerAvailableException::~CNoContentServerAvailableException()
CryptoPP::HMAC<CryptoPP::SHA>::TruncatedFinal(unsigned char*, unsigned int)
common::CFileUtil::RemoveFile(std::string const&)
Grid::CCachePreLoader::CImpl::CReadCompletionHandler::~CReadCompletionHandler()
Grid::CAccount::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*)
virtual thunk to CryptoPP::PK_Encryptor::~PK_Encryptor()
Grid::CClientConnection::HandleGetFlags()
Grid::CAppSubscriptionIdsRecord::ValidateFields(std::ostream*, unsigned int)
common::CMultiFieldBlob::CFieldDoesNotExistException::ThrowSelf() const
common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::operator()()
Grid::CSClient::CReadFileFSM::s_RecvSizeOfNextCompressedBlockState
Grid::CCacheManifestOnly::GetPerfStats(TSteamUpdateStats*)
typeinfo for sigslot::_connection_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
common::IValueIteratorImpl::IValueIteratorImpl()
typeinfo name for ScopeGuardImpl1<int (*)(char*), char*>
common::CTypeMismatchException::~CTypeMismatchException()
CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
common::CCommandStatusControl::Cancel()
Grid::ICommandState::s_CleanupListLock
typeinfo for common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>
CDirPtr::Close()
Grid::CCacheOneFileFixedBlock::GetMaxEntries()
common::CStringTable::Instance()
Grid::CFsCacheGroup::GetSize(unsigned int)
typeinfo name for BSL::CTime::CTimeToPackOutOfRange
Grid::CAccount::StartCacheLoadingSubscribedAppsOnLoginOrSetUser(common::CCommandStatusControl*)
vtable for CryptoPP::PK_CryptoSystem
Grid::CFs::GetRootDirPath()
Grid::CCacheQueueManager::CCacheQueueManager(unsigned int, unsigned int (*)(void*), void*)
CryptoPP::OID::DecodeValue(CryptoPP::BufferedTransformation&, unsigned long&)
common::CWSABUFWrapper::ResetToEmpty()
std::_Bit_iterator std::__find<std::_Bit_iterator, bool>(std::_Bit_iterator, std::_Bit_iterator, bool const&, std::random_access_iterator_tag)
ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
Grid::CSClient::IProtocolState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CFs::CException::Clone() const
Grid::CFs::SeekFromCurrent(unsigned int, unsigned int, long long)
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::PaddedBlockBitLength() const
Grid::CAppSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::BufferedTransformationWithAutoSignal::~BufferedTransformationWithAutoSignal()
common::CFileUtil::SplitFileNameFromPath(std::string const&, std::string&, std::string&)
Grid::CCacheOneFileFixedBlock::CImpl::BIsEncrypted(unsigned int) const
common::GetIPAddrPortsFromString(std::string const&, unsigned int, unsigned short)
Grid::CEngineLoopbackConnection::ChangePassword(char const*, char const*, TSteamError*)
Grid::CCacheManifestOnly::GetMinimumFootprintFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
Grid::CFsBuffer::SetvBuf(unsigned char*, int, unsigned int)
sigslot::_signal_base<sigslot::multi_threaded_local>::~_signal_base()
common::CMultiFieldBlob::CMultiFieldBlob(unsigned int, unsigned int)
Grid::CLockedCDDBCache::s_AllAppsMap
typeinfo name for Grid::CMutexGuard::CTimeoutException
typeinfo for ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>
Grid::CFsTable::~CFsTable()
CryptoPP::BERLengthDecode(CryptoPP::BufferedTransformation&, unsigned int&)
typeinfo for common::CBlobKey
vtable for common::ICloneableException
typeinfo for BSL::CUnpackedTime::CFromStringInvalidCharacter
std::pair<common::CThreadSafeCountedPtr<common::IFunctor>, common::CThreadSafeCountedPtr<common::IFunctor>>::~pair()
Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CTicketCache::CImpl::s_sClockSkewValueName
void std::_Destroy<std::string*>(std::string*, std::string*)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int, TPreloaderInfo>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int, int, TPreloaderInfo)
Grid::CCacheFileFixedDirectory::GetNextFreeEntry()
Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
Grid::CSClient::ConnectToCSWithTimeout(common::CIPAddrPort const&, common::CCommandStatusControl*)
common::CMultiFieldBlob::UnpreprocessBlob(unsigned char const*)
Grid::CEngineConnection::Stat64(char const*, TSteamElemInfo64*, TSteamError*)
Grid::CResourceListNodes::GetPriority()
Grid::CFileIdChecksumTable::s_cu32FormatCode
ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>(Grid::CBufferTable&, void (Grid::CBufferTable::*)(unsigned int), unsigned int)
Grid::CAccount::CImpl::OnPreloaderPause(unsigned int)
typeinfo for Grid::CAccount::CImpl
Grid::CFs::CEndOfFileException::Clone() const
CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
Grid::InternalSteamLaunchApp(unsigned int, unsigned int, unsigned int, char const*, TSteamError*)
Grid::CContentDescriptionRecord::CValidateFieldsException::~CValidateFieldsException()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::~_Rb_tree()
typeinfo name for Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException
common::CBlobKey::CBlobKey(common::CMultiFieldBlob*, std::string const&, common::CBlobRegistry&, common::CFastThreadMutex&, bool)
Grid::CCacheGroup::TCacheGroupEntry* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*>(Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*)
vtable for common::CBlobKey::CPublicKey
Grid::IEngineConnection::~IEngineConnection()
Grid::CClientConnection::HandleGetAppUserDefinedRecord()
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::Final(unsigned char*)
Grid::CFs::SeekFromEnd(unsigned int, unsigned int, long long)
Grid::ICache::CInternalErrorException::Clone() const
Grid::CAccount::CImpl::GetBetaPassword(unsigned int)
common::CEventLoopThread::FinishThreadHelper()
BSL::isdigit(char)
Grid::CAppFilesystemRecord::CValidateFieldsException::Clone() const
Grid::CFs::CBadHandleException::~CBadHandleException()
typeinfo name for Grid::CSClient::ICompletionHandler
Grid::CFsTable::GetClientWorkingDir(unsigned int)
Grid::CFileHandleList::~CFileHandleList()
DW.ref._ZTIN6common17CNetworkExceptionE
ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>::ExecuteNowIfNotDismissed() const
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(unsigned int, Grid::CCacheGroup*, unsigned int)
virtual thunk to CryptoPP::Store::NumberOfMessages() const
vtable for common::ILogFunctor
typeinfo name for Grid::CSClient::CReadFileChecksumTableFSM
construction vtable for CryptoPP::Source-in-CryptoPP::FileSource
typeinfo for common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException
Grid::CAccount::CImpl::ClearLoggedInIndicators()
typeinfo name for common::CMultiFieldBlob::CPreprocessingFailedException
common::CLogFile::Flush() const
CreateDirectory(char const*, void*)
typeinfo for CryptoPP::BlockingRng
Grid::ICacheGroupIteratorImpl::AdvanceToParentWithinManifest()
vtable for Grid::CAccountUsersRecord::CValidateFieldsException
common::GenerateSaltedPassphraseDigest(std::string const&, unsigned char (*) [8], unsigned char (*) [20])
arg::counted_ptr<Grid::IResourceList>::~counted_ptr()
Grid::InternalSteamIsLoggedIn(unsigned int, int*, TSteamError*)
CryptoPP::BufferedTransformation::SkipMessages(unsigned int)
vtable for Grid::CSClient::CReadManifestFSM::CSendRequestState
_FixSlashes(std::string&)
typeinfo name for common::IEventLoopFunctor
vtable for Grid::CCachePreLoader::CImpl::CReadCompletionHandler
void std::__move_median_first<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
vtable for Grid::CNotSubscribedException
Grid::ICache::CMultipleCacheInstanceException::~CMultipleCacheInstanceException()
typeinfo name for common::CObjFunctor<Grid::CAccount::CImpl>
Grid::CCacheOneFileFixedBlock::CImpl::FixUpCacheArrays()
typeinfo name for Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException
Grid::IManifestIteratorImpl::GetNode() const
vtable for common::CMultiFieldBlob
Grid::CClientConnection::HandleCreateCachePreloaders()
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, common::CNamedArgs>>*)
_tr_init
typeinfo name for common::CErrorCodeException
Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
inflate_blocks_free
Grid::CFs::ForgetAllHints(std::string const&, unsigned int)
Grid::CCacheDescBlock::CCacheDescBlock(_IO_FILE*)
Grid::CFsTable::CImpl::~CImpl()
Grid::CSClient::CService::CleanupConnections()
vtable for Grid::CBadLaunchConfigException
common::CLog::DisableContextName()
typeinfo name for Grid::CResourceListFile
Grid::CClientConnection::HandleAckSubscriptionReceipt()
typeinfo for Grid::CAccountUserRecord::CValidateFieldsException
typeinfo name for Grid::CFs::CSeekException
Grid::CTicketCache::ClearContentTickets()
Grid::CAccount::RequestForgottenPasswordEmail(common::CCommandStatusControl&, std::string const&, char*)
ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>::~ScopeGuardImpl1()
Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState::~CSendSessionLogoutRequestState()
BSL::CTime::CTimeToPackNegative::CTimeToPackNegative(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
RemoveDirectory(char const*)
Grid::CFsTable::PauseAllPreloaders()
Grid::CTicketCache::CImpl::EndAccess(unsigned int)
common::CWin32Event::~CWin32Event()
Grid::CFsCacheGroup::Open(Grid::CSplitPath const&, char const*, int, bool&, bool&, unsigned long long&)
typeinfo for Grid::IClientConnection
Grid::InternalGetEncryptedUserIDTicketToSendToAppServer(void const*, unsigned int, void*, unsigned int, unsigned int*, common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket> const&)
common::CCommandStatusControl::SetPercentDone(double)
typeinfo name for BSL::CException
VTT for CryptoPP::CBCPaddedEncryptor
common::CBlobKey::CPublicKey::CreateSubKey(std::string const&, bool)
common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::~ObjFunctorImpl0()
common::CCommandStatusControl::GetCurrentStatusMessage() const
common::CMultiFieldBlob::CMultiFieldBlob(char const*, common::CMultiFieldBlob::EMemoryMappedFileAccessMode, unsigned int, unsigned int, unsigned char const*)
virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>::ExecuteNowIfNotDismissed() const
DW.ref._ZTIN4Grid24CBadApiArgumentExceptionE
common::ExtractNext(unsigned char*, unsigned int, unsigned char**, unsigned char*)
Grid::CSClient::CConnection::SendKeepAlive()
Grid::CErrnoErrorException::~CErrnoErrorException()
Grid::CClientAuthenticationTicket::CClientAuthenticationTicket(unsigned short, std::string const&, std::string const&, unsigned short, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned short, unsigned int, unsigned short, unsigned char const*, BSL::CTime, BSL::CTime, unsigned short, unsigned char const*, unsigned int)
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob::EMemoryOwnership, unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned char const*)
typeinfo name for Grid::ICache::CFingerPrintDoesNotMatchException
Grid::CMustBeOnlineException::~CMustBeOnlineException()
sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~signal2()
common::IValueIteratorImpl::~IValueIteratorImpl()
Grid::CFsTable::CImpl::DestroyPreloader(std::string const&, unsigned int)
typeinfo for CryptoPP::HexEncoder
Grid::CEngineLoopbackConnection::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
common::CMultiFieldBlob::CPreprocessingFailedException::ThrowSelf() const
std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>)
CryptoPP::Source::Put(unsigned char)
Grid::CAccount::CImpl::GetAppGameState(unsigned int)
typeinfo name for ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock> const&)
std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>::~pair()
vtable for Grid::CCacheExceptionTranslator
Grid::CBadCallHandleException::CBadCallHandleException()
Grid::CFsCacheGroup::CImpl::OpenTmp(char const*)
typeinfo for Grid::ICache::CBadArgException
common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException::~CAttemptToUpdateFieldWithRegisteredChildException()
CryptoPP::BufferedTransformation::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
Grid::CEngineLoopbackConnection::GetCurrentAppId(unsigned int*, TSteamError*)
typeinfo name for arg::generic_reference
typeinfo for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CEngineDisconnectException::~CEngineDisconnectException()
common::DoNonBlockingReceive(int, common::CWSABUFWrapper&, common::CCommandStatusControl*)
Grid::CEngineConnection::UnmountAppFilesystem(unsigned int, TSteamError*)
Grid::CAccount::CImpl::CImpl(Grid::CAccount&)
Grid::CClientToASProtocolOutOfDateException::CClientToASProtocolOutOfDateException()
Grid::CCacheFileFixedFsTree::CBadFormatVersionException::~CBadFormatVersionException()
Grid::CClientAuthenticationTicket::CValidateFieldsException::~CValidateFieldsException()
Grid::CAppStatus::ObserveDownload(unsigned int, unsigned int, unsigned int, bool)
CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>::Run(void*, bool, unsigned long long)
Grid::CClientManager::CImpl::WaitForDataOnPipe(Grid::CPipeComm*)
common::CBlobRegistry::DeleteSubKeyTree(std::string const&)
CryptoPP::ModularArithmetic::Equal(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CFailedToFindMasterAuthenticationServerException::~CFailedToFindMasterAuthenticationServerException()
void std::swap<TPreloaderInfo>(TPreloaderInfo&, TPreloaderInfo&)
vtable for BSL::CException
Grid::CFsTable::CImpl::GetCacheGroup(unsigned int)
__gnu_cxx::hashtable<std::pair<int const, Handle_t*>, int, __gnu_cxx::hash<int>, std::_Select1st<std::pair<int const, Handle_t*>>, std::equal_to<int>, std::allocator<Handle_t*>>::find_or_insert(std::pair<int const, Handle_t*> const&)
CryptoPP::BufferedTransformation::TransferAllTo(CryptoPP::BufferedTransformation&)
CCallbackMgr::~CCallbackMgr()
Grid::ICache::CCacheNeedsDecryptionException::CCacheNeedsDecryptionException()
Grid::CCachePreLoader::Enable()
vtable for common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException
Grid::CVTSIPAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
Grid::CManifestBin::GetUserConfigFiles(std::vector<unsigned int, std::allocator<unsigned int>>&) const
vtable for CryptoPP::Filter
vtable for Grid::CAccountPaymentCardReceiptRecord
Grid::ICacheGroupIteratorImpl::BytesNotPresent(unsigned long long, unsigned long long, unsigned long long*)
Grid::CEngineConnection::DeleteAccount(TSteamError*)
BSL::CUnpackedTime::CUnpackedTimeException::~CUnpackedTimeException()
typeinfo name for common::CNamedArgsInsertException
Grid::CEngineLoopbackConnection::GetLocalFileCopy(char const*, TSteamError*)
std::_Rb_tree<sigslot::_signal_base<sigslot::multi_threaded_local>*, sigslot::_signal_base<sigslot::multi_threaded_local>*, std::_Identity<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::less<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::allocator<sigslot::_signal_base<sigslot::multi_threaded_local>*>>::_M_erase(std::_Rb_tree_node<sigslot::_signal_base<sigslot::multi_threaded_local>*>*)
Grid::IFsStrategy::~IFsStrategy()
Grid::CTicketCache::~CTicketCache()
virtual thunk to CryptoPP::CBCPaddedEncryptor::~CBCPaddedEncryptor()
Grid::CCacheQueueManager::CancelItem(unsigned int)
common::CConfigDatabase::Set(std::string const&, std::string const&)
DW.ref._ZTIN4Grid6ICache23CInternalErrorExceptionE
DW.ref._ZTIN4Grid6ICache31CCacheKeysNotAvailableExceptionE
Grid::CValidationLogger::Reset()
Grid::CSClient::LogFailedFindSession(unsigned int, common::CLogContext*)
typeinfo name for Grid::ICommandState
deflate
common::CLogGroup::GetDesc() const
CAsyncIOManager::~CAsyncIOManager()
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>::ExecuteNowIfNotDismissed() const
Grid::CDiscountQualifierRecord::CValidateFieldsException::Clone() const
Grid::InternalSteamStat64(unsigned int, char const*, TSteamElemInfo64*, TSteamError*)
Grid::CCacheGroupIterator::~CCacheGroupIterator()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>>::~_Rb_tree()
vtable for Grid::CAccountExternalBillingInfoRecord
typeinfo for Grid::ICache::CWriteException
Grid::CSClient::CLogoutFSM::~CLogoutFSM()
construction vtable for CryptoPP::Filter-in-CryptoPP::Source
Grid::CClientConnection::HandleCreateAccount()
typeinfo for Grid::CFileHandleList
Grid::CAccount::GetAppUserDefinedRecord(unsigned int, common::CMallocedBlock&)
typeinfo name for Grid::CSubscriptionAppIdsRecord::CValidateFieldsException
vtable for Grid::CSClient::CBlockingReadFileCompletionHandler
Grid::CAccount::CAccount()
VTT for CryptoPP::PK_FixedLengthEncryptor
common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException::~CNoAuthenticatorTimestampsRecordedForThisClientException()
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
arg::typed_reference<Grid::IResourceList>::~typed_reference()
Grid::CTicketCache::ClearUsers()
CryptoPP::Filter::~Filter()
Grid::CAccount::IsSecureComputer() const
Grid::InternalSteamGetCurrentCellID(unsigned int, unsigned int*, unsigned int*, TSteamError*)
Grid::CBadApiArgumentException::CBadApiArgumentException()
typeinfo for Grid::CAccountSubscriptionBillingInfoRecord
construction vtable for CryptoPP::Store-in-CryptoPP::BERGeneralDecoder
typeinfo for common::ISubKeyIteratorImpl
Grid::ICache::CAppIdDoesNotMatchException::~CAppIdDoesNotMatchException()
typeinfo name for CryptoPP::Rijndael
Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::CSClient::CSession::HandleConnectionFailed(common::ICloneableException const&)
Grid::CErrnoErrorException::CErrnoErrorException()
common::CBlobException::CBlobException(std::string const&)
Grid::InternalSteamFindNext(unsigned int, unsigned int, TSteamElemInfo*, TSteamError*)
common::CThreadSafeCountedPtr<Grid::CClientContentTicket>* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*>(common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*)
virtual thunk to CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
Grid::CFs::EnableCachePreloading(std::string const&, unsigned int)
std::vector<iovec, std::allocator<iovec>>::~vector()
Grid::CAccountUserPasswordsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CCacheOneFileFixedBlock::BytesNotPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long, unsigned long long*)
CryptoPP::ArrayXorSink::Put(unsigned char const*, unsigned int)
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>::ExecuteNowIfNotDismissed() const
Grid::CAppRecord::GetBetaVersionId()
vtable for CryptoPP::MontgomeryRepresentation
Grid::CAccountPrepurchaseReceiptRecord::~CAccountPrepurchaseReceiptRecord()
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::_M_insert_unique(std::pair<int const, LicenseInfo_t> const&)
vtable for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState
vtable for Grid::CStalledCallException
Grid::CClientConnection::HandleSeekFile64()
vtable for Grid::IServerAddressCache
Grid::CAccountUserPasswordsRecord::~CAccountUserPasswordsRecord()
CryptoPP::ByteQueue::Put(unsigned char const*, unsigned int)
BSL::InitExceptionParams(std::string const&, std::string const&)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, int, common::CMultiFieldBlob::TFieldHeaderOffset, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, int, int, common::CMultiFieldBlob::TFieldHeaderOffset, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
vtable for Grid::CDiscountRecord::CValidateFieldsException
vtable for common::CBadAlloc
virtual thunk to CryptoPP::BufferedTransformationWithAutoSignal::SetAutoSignalPropagation(int)
vtable for Grid::CAccountSubscriptionRecord
vtable for ScopeGuardImpl1<int (*)(char*), char*>
std::map<std::string, Grid::CFsTable::CImpl::TAppLock, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::operator[](std::string const&)
vtable for CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
Grid::CSClient::CService::Instance()
ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>::~ScopeGuardImpl2()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>>::_M_insert_unique(std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData> const&)
typeinfo name for Grid::ICache::CAppIdDoesNotMatchException
Grid::CCacheDataBlock::~CCacheDataBlock()
Grid::CAccountPendingException::~CAccountPendingException()
Grid::CSubscriberAccountRecord::ValidateFields(bool, unsigned char const*, std::ostream*, unsigned int)
Grid::CFsCacheGroup::GetFlags(Grid::CSplitPath const&, unsigned int*)
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::_M_erase(std::_Rb_tree_node<std::pair<int const, LicenseInfo_t>>*)
BSL::CUnpackedTime::CFromStringInvalidCharacter::~CFromStringInvalidCharacter()
Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException
typeinfo name for Grid::CSClient::IProtocolState
Grid::InternalSteamProcessCall(unsigned int, unsigned int, TSteamProgress*, TSteamError*)
common::CMultiFieldBlob::InternalFindFieldDataOrInsertPos(unsigned short, unsigned char const*, unsigned int*, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>*)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
std::vector<std::string, std::allocator<std::string>>::~vector()
VTT for CryptoPP::InvertibleRSAFunction
Grid::CAppRegionRecord::CValidateFieldsException::ThrowSelf() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::~_Rb_tree()
deflateSetDictionary
Grid::CManifestBin::GetManifestIterator(std::string const&) const
CryptoPP::ModularArithmetic::ConvertOut(CryptoPP::Integer const&) const
Grid::CCachePreLoader::CImpl::LoadResource(unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, Grid::CCacheGroupIterator&, unsigned int*)
vtable for Grid::CResourceListNodes
Grid::CBadCallerErrorStructPtrException::CBadCallerErrorStructPtrException()
Grid::CCacheOneFileFixedBlock::CImpl::ValidateCacheData(unsigned char const*, unsigned char const*, Grid::CCacheQueueEntry::TFileReqEntry const&, Grid::CManifestIterator&)
CryptoPP::ByteQueue::Walker::Put(unsigned char const*, unsigned int)
Grid::CSubscriptionRecord::~CSubscriptionRecord()
common::CFileUtil::DirExists(std::string const&)
Grid::CCacheManifestOnly::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*)
Grid::CSClient::CReadFileFSM::~CReadFileFSM()
Grid::CEngineLoopbackConnection::ReadFile64(void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)
CryptoPP::Rijndael::Td3
typeinfo name for Grid::CAppStatus
vtable for Grid::CMustBeOnlineException
Grid::ICache::ICacheCompletionHandler::~ICacheCompletionHandler()
Grid::CClientConnection::HandleGenerateSuggestedAccountNames()
CryptoPP::MD5::~MD5()
common::CObjFunctor<Grid::CAccount::CImpl>::~CObjFunctor()
typeinfo for sigslot::_connection_base1<unsigned int, sigslot::multi_threaded_local>
typeinfo for CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
Grid::CManifestBin::GetNode(unsigned int) const
Grid::StartupNetworkIfNecessary(bool)
Grid::CEngineLoopbackConnection::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
typeinfo name for CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::getdest() const
CryptoPP::BERGeneralDecoder::~BERGeneralDecoder()
std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>::~vector()
typeinfo for Grid::CNotLoggedInException
Grid::CFs::CNotFoundException::~CNotFoundException()
VTT for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CContentDescriptionRecord::~CContentDescriptionRecord()
Grid::CAllSubscriptionsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAccount::CImpl::ThreadCreatePreloader(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int)
ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>::ExecuteNowIfNotDismissed() const
vtable for Grid::CAppLaunchOptionRecord::CValidateFieldsException
Grid::CCachePreLoader::QueueList(std::vector<std::string, std::allocator<std::string>>&, Grid::ContentPriority::ERequestLevel, bool)
Grid::CFs::IsFileNeededByApp(std::string const&, unsigned int, std::string const&, unsigned long long, unsigned int*)
Grid::CCacheQueueEntry::CCacheQueueEntry()
ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
Grid::CSClient::CReadManifestFSM::CSendRequestState::~CSendRequestState()
Grid::CSClient::ICompletionHandler::CompleteReadFile(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
common::CCommandStatusControl::SetCurrentStatusMessage(std::string const&)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>::~ScopeGuardImpl1()
Grid::CSClient::CReadFileFSM::CRecvInitialReplyState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
vtable for CryptoPP::BERGeneralDecoder
typeinfo name for common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException
typeinfo for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>
Grid::CCacheGroup::RemoveCache(unsigned int)
Grid::InternalSteamSetUser(unsigned int, char const*, int*, TSteamError*)
common::CThreadSafeCountedPtr<common::ISubKeyIteratorImpl>::dispose()
Grid::CReturnBufferItem<unsigned int>::Receive(Grid::CPipeComm*)
typeinfo for ISteamInterface
Grid::CEngineConnection::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
CryptoPP::CBCPaddedDecryptor::~CBCPaddedDecryptor()
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::PK_FixedLengthDecryptor
ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
vtable for sigslot::_signal_base<sigslot::multi_threaded_local>
std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::TPreloaderCacheInfo*, std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>>>, Grid::TPreloaderCacheInfo const&)
common::CBlobKey::CPublicKey::~CPublicKey()
Grid::CAccountUserPasswordsRecord::CValidateFieldsException::Clone() const
typeinfo for CryptoPP::InvertibleRSAFunction
Grid::CSClient::CReadFileChecksumTableFSM::~CReadFileChecksumTableFSM()
common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::operator()()
typeinfo for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string>>*)
Grid::CClientConnection::HandleLoadCacheFromDir()
common::IRegistry::~IRegistry()
typeinfo name for Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>
common::CReadWriteThreadMutex::GetReadLock()
Grid::CAccount::CImpl::OnPreloaderStart(unsigned int)
Grid::CSClient::CSession::DiscardContentTicketOnLoginFailed()
__wrap_rename
Grid::CEngineConnection::FindFirst64(char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)
CWrap::~CWrap()
typeinfo name for sigslot::_connection_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>
vtable for ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>
common::CCommandStatusControlAutoTimeout::~CCommandStatusControlAutoTimeout()
Grid::CFsTable::CImpl::TClientInfo::TClientInfo()
Grid::CBadCallerErrorStructPtrException::~CBadCallerErrorStructPtrException()
common::CNamedArgs::operator[](std::string const&) const
__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>::base() const
typeinfo name for common::CRegistryException
Grid::CAccountUserPasswordRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for Grid::CClientContentTicket
virtual thunk to CryptoPP::HexEncoder::~HexEncoder()
typeinfo name for Grid::CShippingInfoRecord
Grid::CEngineConnection::FlushCache(unsigned int, TSteamError*)
std::vector<unsigned long, std::allocator<unsigned long>>::vector(std::allocator<unsigned long> const&)
Grid::CTicketExpiredException::CTicketExpiredException()
Grid::CCacheQueueManager::CImpl::CancelItem(unsigned int)
CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
typeinfo for Grid::ICache::ICacheCompletionHandler
vtable for ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>
Grid::ICommandState::StartChangeEmailAddress(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Equal(CryptoPP::Integer const&, CryptoPP::Integer const&) const
common::ISubKeyIteratorImpl::~ISubKeyIteratorImpl()
Grid::CEngineDisconnectException::ThrowSelf() const
vtable for Grid::CCacheFileFixedFsTree::CBadFormatVersionException
Grid::CClientConnection::HandleGetCurrentAppId()
sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
common::IValueIteratorImpl::IValueIteratorImpl()
common::CNetworkException::~CNetworkException()
Grid::CAccountPendingException::CAccountPendingException()
common::CWSABUFWrapper::~CWSABUFWrapper()
CryptoPP::HashModuleWithTruncation::TruncatedVerify(unsigned char const*, unsigned int)
vtable for Grid::CReturnBufferData
Grid::CResourceListStrings::IsDone()
Grid::CTicketCache::CImpl::LoadFromTGS(std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>&, unsigned int, unsigned int)
CryptoPP::Filter::Detach(CryptoPP::BufferedTransformation*)
Grid::CEngineConnection::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
virtual thunk to CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::MaxDigestLength() const
Grid::CEngineNotRunningException::Clone() const
sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::~_Rb_tree()
Grid::CNoContentServerAvailableException::~CNoContentServerAvailableException()
vtable for sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
CryptoPP::BufferedTransformation::NumberOfMessages() const
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::_Rep::_S_terminal
DW.ref._ZTIN4Grid23CCacheFileFixedChecksum26CBadFormatVersionExceptionE
Grid::CEngineConnection::ForgetAllHints(unsigned int, TSteamError*)
CryptoPP::ArraySink::Put(unsigned char)
Grid::CAccountUserPasswordRecord::~CAccountUserPasswordRecord()
common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException::Clone() const
common::CWSABUFWrapper::PrepareToReceive(unsigned int)
Grid::CAccountPaymentCardInfoRecord::~CAccountPaymentCardInfoRecord()
BSL::CTime::CTime(BSL::CUnpackedTime const&)
typeinfo for Grid::CCacheQueueManager
typeinfo for CryptoPP::FeedBackMode
__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>::operator++()
typeinfo for Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException
Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState::~CRecvSessionLogoutReplyState()
common::CCommandStatusControlAutoTimeout::IsCancelled() const
common::CThread::CImpl::CImpl(std::string const&, common::CThread::EPriority)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData> const&)
__gnu_cxx::__stl_next_prime(unsigned long)
typeinfo name for Grid::CBadLaunchConfigException
CryptoPP::FileSource::FileSource(char const*, bool, CryptoPP::BufferedTransformation*)
std::vector<common::CLogContext*, std::allocator<common::CLogContext*>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CLogContext**, std::vector<common::CLogContext*, std::allocator<common::CLogContext*>>>, common::CLogContext* const&)
Grid::CFsTable::CImpl::CacheUnlock(std::string const&)
common::CBlobKey::CPublicKey::EndSubKeyIteration()
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
typeinfo name for CryptoPP::BufferedTransformation
typeinfo for common::CObjFunctor<Grid::CSClient::CConnection>
std::allocator<std::string>::allocator(std::allocator<std::string> const&)
Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>::CCacheReadHandlerFunctor(Grid::CCacheOneFileFixedBlock::CImpl*, void (Grid::CCacheOneFileFixedBlock::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
std::vector<unsigned long, std::allocator<unsigned long>>::push_back(unsigned long const&)
Grid::CManifestBin::SimplifyPath(char*) const
ScopeGuardImpl1<bool (*)(std::string const&), char const*>::~ScopeGuardImpl1()
CryptoPP::PKCS_SignaturePaddingScheme::Unpad(unsigned char const*, unsigned int, unsigned char*) const
ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::ExecuteNowIfNotDismissed() const
Grid::CFsCacheGroup::CImpl::DeallocateFileHandle(unsigned int)
typeinfo name for common::CRuntimeError
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>*)
FreeEnvironmentStrings(char*)
Grid::CClientRegistry::Instance()
CryptoPP::Jacobi(CryptoPP::Integer const&, CryptoPP::Integer const&)
_Unwind_GetRegionStart
typeinfo for Grid::CAccountOrUserDoesNotExistException
CryptoPP::HMAC<CryptoPP::SHA>::DigestSize() const
typeinfo name for Grid::CEngineLoopbackConnection
Grid::CCacheGroup::~CCacheGroup()
Grid::CEngineConnection::SetUser2(char const*, TSteamError*)
Grid::CAccountUsersRecord::CValidateFieldsException::~CValidateFieldsException()
common::CFindFile::~CFindFile()
vtable for CryptoPP::ByteQueue
Grid::CEngineConnection::IsSubscribed(unsigned int, int*, int*, TSteamError*)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>::ExecuteNowIfNotDismissed() const
typeinfo for ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>
common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException::ThrowSelf() const
Grid::CSClient::CBlockingReadFileCompletionHandler::~CBlockingReadFileCompletionHandler()
typeinfo name for Grid::CStalledCallException
std::auto_ptr<common::CWin32Event>::~auto_ptr()
typeinfo name for common::CNamedArgsUndefinedNameException
Grid::ICache::CResourceChecksumFailure::Clone() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>> const&)
Grid::CCacheOneFileFixedBlock::GetUserConfigFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
Grid::CFs::CNotFoundException::ThrowSelf() const
Grid::CFs::CBadHandleException::CBadHandleException(common::CErrorCodeException::ESpecificType)
Grid::CCacheNone::CancelRead(unsigned int)
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::_M_insert_unique(std::pair<std::string const, common::CNamedArgs> const&)
common::CThreadSafeCountedPtr<Grid::CClientContentTicket>::dispose()
typeinfo for Grid::CAccountUserPasswordRecord::CValidateFieldsException
Grid::CClientManager::CImpl::MasterChannelThreadProc()
Grid::CManifestBinException::CManifestBinException(std::string const&)
Grid::CEngineConnection::GetCachePercentFragmentation(unsigned int, unsigned int*, TSteamError*)
__DTOR_END__
Grid::CLibraryAlreadyInitializedException::Clone() const
ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>::~ObjScopeGuardImpl0()
__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>> std::unique<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::CTestEqualityOfTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::CTestEqualityOfTFieldHeaderOffsetsByFieldName)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::~_Rb_tree()
CryptoPP::BufferedTransformation::Err::~Err()
Grid::IManifestIteratorImpl::GetNodeName() const
Grid::CCacheOneFileFixedBlock::~CCacheOneFileFixedBlock()
Grid::CAppFilesystemRecord::IsValidForOS(char const*)
Grid::CEngineLoopbackConnection::HintResourceNeed(unsigned int, char const*, int, TSteamError*)
Grid::CCachePreLoader::SignalAppDownloadingPaused
std::vector<CryptoPP::WindowSlider, std::allocator<CryptoPP::WindowSlider>>::~vector()
vtable for Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler
Grid::CClientConnection::HandleFindClose()
CAsyncIOManager::CThreadSafeLockableQueue<std::pair<aiocb*, unsigned long>>::~CThreadSafeLockableQueue()
common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException::Clone() const
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::~vector()
CryptoPP::BlockTransformation::~BlockTransformation()
Grid::CSClient::CService::ReadFileChecksumTable(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CAppVersionsRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CManifestChecksumException::~CManifestChecksumException()
std::string BSL::I2ES<unsigned long>(unsigned long, int, int)
common::ISubKeyIteratorImpl::ISubKeyIteratorImpl()
typeinfo name for common::CCommandStatusControl
Grid::CFsCacheGroup::CImpl::Write(unsigned int, unsigned int, unsigned char const*)
CryptoPP::InvertibleTrapdoorFunction::~InvertibleTrapdoorFunction()
Grid::CBufferTable::SetvBuf(unsigned int, unsigned char*, int, unsigned int)
Grid::CSClient::CService::~CService()
guard variable for Grid::CCacheServerSession::IsExpired()::s_ctimeConnectionTimeout
Grid::CTicketCache::BeginAccess(unsigned int)
Grid::CCacheManifestOnly::LoadCacheFromDir(std::string const&, common::CCommandStatusControl*)
typeinfo for common::CExceptionHolder
typeinfo for Grid::CReadFileChecksumFailedException
common::CFileUtil::IsFat32FileSystem()
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::PaddedBlockBitLength() const
typeinfo for Grid::CAccountSubscriptionRecord::CValidateFieldsException
Grid::CEngineConnection::IsFileNeededByCache(unsigned int, char const*, unsigned long long, TSteamError*)
DW.ref._ZTIN4Grid6ICache16CBadArgExceptionE
virtual thunk to CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestSignatureSystemBaseTemplate()
Grid::CFsCacheGroup::Write(unsigned int, unsigned int, unsigned char const*)
common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>::~ObjFunctorImpl0()
common::CThreadLocalPtr<std::string>::OnThreadDetach()
CryptoPP::Integer::Randomize(CryptoPP::RandomNumberGenerator&, unsigned int)
construction vtable for CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>-in-CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException::~CFieldNameNotNumeriCBlobException()
common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException::Clone() const
Grid::CCacheReplacementLru::GetDiskPerEntrySize()
common::CThread::CException::~CException()
CryptoPP::Integer::operator+=(CryptoPP::Integer const&)
Grid::CEngineDisconnectException::CEngineDisconnectException()
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Double(CryptoPP::Integer const&) const
std::vector<unsigned long, std::allocator<unsigned long>>::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long>>>, unsigned int, unsigned long const&)
Grid::ICommandState::StartLogin(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, std::string const&, bool)
Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>::operator()(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) const
typeinfo name for CryptoPP::RSAFunction
BSL::CTime::Now()
common::CEventLoopThread::CException::~CException()
Grid::InternalSteamChangeOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)
CryptoPP::BERGeneralDecoder::CheckByte(unsigned char)
CryptoPP::HashFilter::Put(unsigned char const*, unsigned int)
Grid::CEngineConnection::HintResourceNeed(unsigned int, char const*, int, TSteamError*)
Grid::CSplitPath::reset(char const*, char const*)
typeinfo name for Grid::CSimpleErrorCodeException
common::ConvertStringToSignedInt32(char const*)
Grid::CFs::SetRootDirPath(std::string const&)
Grid::ICommandState::StartRequestEmailAddressVerificationEmail(common::CThreadSafeCountedPtr<Grid::CAccount> const&)
Grid::CSClient::CDownloadRateEstimator::Timer_t::~Timer_t()
vtable for Grid::CReadFileChecksumFailedException
CAsyncIOManager::aio_read(aiocb*)
vtable for common::CBlobException
CryptoPP::IteratedHash<unsigned long, false, 64u>::TruncatedFinal(unsigned char*, unsigned int)
CryptoPP::Integer::Modulo(CryptoPP::Integer const&) const
vtable for Grid::CFsTable::IMountedCache
vtable for Grid::CCacheGroup
Grid::CSClient::CBlockingReadFileChecksumTableHandler::~CBlockingReadFileChecksumTableHandler()
vtable for ScopeGuardImpl0<void (*)()>
Grid::CSClient::CSession::ReadFileChecksumTable(common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo name for Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState
ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
typeinfo name for CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>
virtual thunk to CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
vtable for Grid::CSClient::CSessionLoginFailedException
Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState::~CRecvNextCompressedBlockChunkState()
common::CThreadLocalRegistrar::Instance()
Grid::InternalSteamGetAppStats(unsigned int, TSteamAppStats*, TSteamError*)
common::CWSABUFWrapper::IsReadCompleteAfterSuccessfullyReceivingBytes(unsigned int)
common::CConfigDatabase::CConfigDatabase(char const*, bool)
CryptoPP::Rijndael::Td2
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>> const&)
Grid::CAuthenticationServerIsNotMasterException::~CAuthenticationServerIsNotMasterException()
Grid::CAccount::GetAppGameState(unsigned int)
typeinfo name for common::CMultiFieldBlob::CUnableToGrowBlobException
__wrap_open64
typeinfo name for Grid::CCacheOneFileFixedBlock
std::map<std::string, Grid::TCacheDescriptor, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::~map()
typeinfo for CryptoPP::ArraySink
Grid::CCacheDescBlock::Serialize(_IO_FILE*)
typeinfo for common::CBlobSubKeyIterator
Grid::CEngineLoopbackConnection::Uninstall(TSteamError*)
Grid::CCacheQueueManager::CImpl::~CImpl()
vtable for common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::~_Rb_tree()
Grid::CClientConnection::HandleRefreshMinimumFootprintFiles()
CryptoPP::PKCS_DigestDecoration<CryptoPP::SHA>::decoration
Grid::IManifestIteratorImpl::IsLocked() const
Grid::CEngineLoopbackConnection::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned int, TSteamError*)
Grid::CReturnBufferAggregate::CReturnBufferAggregate()
Grid::CCacheOneFileFixedBlock::LoadCacheFromDir(std::string const&, common::CCommandStatusControl*)
CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
vtable for CryptoPP::FileSink::WriteErr
sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~signal2()
arg::generic_reference::~generic_reference()
ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::erase(unsigned int const&)
Grid::CClientConnection::HandleIsSubscribed()
Grid::CClientConnection::HandleLogout()
compress2
ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::ExecuteNowIfNotDismissed() const
Grid::CLocalClockSkewException::CLocalClockSkewException(BSL::CTime const&)
Grid::VerifyProtocolAndReceiveClientExternalIPAddr(int, unsigned char, unsigned int, common::CCommandStatusControl*, unsigned int*)
CryptoPP::Integer::SquareRoot() const
CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
Grid::CActivityLog::CAssertObserver::operator()(char const*, char const*, char const*, char const*, unsigned int)
Grid::CSClient::CConnection::CConnection(unsigned int, common::CIPAddrPort const&, unsigned int, common::CCommandStatusControl*)
CryptoPP::Integer::Integer(CryptoPP::Integer const&)
vtable for CryptoPP::PK_SignatureSystem
typeinfo for Grid::CFs::CReadException
Grid::CEngineConnection::Putc(int, unsigned int, TSteamError*)
arg::counted_ptr<Grid::IResourceList>::~counted_ptr()
Grid::CEngineLoopbackConnection::NumAppsRunning(TSteamError*)
Grid::CNotLoggedInException::CNotLoggedInException()
typeinfo name for CryptoPP::NonblockingRng
virtual thunk to CryptoPP::InvertibleTrapdoorFunction::~InvertibleTrapdoorFunction()
typeinfo for common::ILogFunctor
Grid::CSClient::CConnection::RemoveSession(unsigned int)
typeinfo name for common::CMultiFieldBlob::CRequiresDecryptionKeyException
Grid::CAllAppsRecord::~CAllAppsRecord()
Grid::CSClient::CSession::PrepareForRecv(unsigned int, void**, common::CWSABUFWrapper**)
Grid::CClientConnection::HandleGetContentServerInfo()
Grid::CManifestReadException::~CManifestReadException()
Grid::CFsCacheGroup::SetvBuf(unsigned int, unsigned char*, int, unsigned int)
Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::CEngineConnection::SetAppVersion(unsigned int, unsigned int, TSteamError*)
Grid::CCacheNone::Stat(Grid::CManifestIterator&, TSteamElemInfo64*, bool*)
virtual thunk to CryptoPP::PK_FixedLengthEncryptor::~PK_FixedLengthEncryptor()
typeinfo name for Grid::CAccountSubscriptionRecord
Grid::CStalledCallException::Clone() const
CryptoPP::FileStore::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
CryptoPP::FileStore::ReadErr::~ReadErr()
Grid::CEngineConnection::Stat(char const*, TSteamElemInfo*, TSteamError*)
Grid::CEngineConnection::s_ReturnBufferTableLock
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>>*)
Grid::CCacheServerSessionMgr::EstablishSessions(unsigned int, unsigned int, unsigned int*, std::string const&, unsigned int, std::string*, common::CCommandStatusControl*)
Grid::UpdateClockSkewWithServerTime(BSL::CTime const&)
Grid::CEngineConnection::FindNext(unsigned int, TSteamElemInfo*, TSteamError*)
vtable for Grid::CAppSubscriptionIdsRecord
typeinfo name for CryptoPP::Filter
Grid::CLauncher::CImpl::~CImpl()
common::CThreadSafeCountedPtr<Grid::IFsStrategy>::dispose()
Grid::ICacheGroupIteratorImpl::GetDirCount() const
common::CMultiFieldBlob::CUnableToGrowBlobException::~CUnableToGrowBlobException()
CryptoPP::FilterWithBufferedInput::BlockQueue::BlockQueue(unsigned int, unsigned int)
Grid::CCacheNone::IsPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
common::CLogContext::Write(char const*, ...)
Grid::CSClient::CManifestFingerprintMistatchOnReconnectException::~CManifestFingerprintMistatchOnReconnectException()
Grid::CAuthenticationServerIsNotMasterException::ThrowSelf() const
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, std::string> const&)
vtable for Grid::ICacheGroupIteratorImpl
std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>::~vector()
Grid::CSClient::ReadFile(unsigned int, unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, unsigned int*, unsigned int*, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CFileUtil::GetCurrentDirectory()
Grid::ClearError(TSteamError*)
Grid::CAccountOrUserDoesNotExistException::Clone() const
common::CLogContextFunctor::~CLogContextFunctor()
std::exception::exception()
Grid::CSClient::CException::~CException()
std::vector<std::string, std::allocator<std::string>>::size() const
common::CRegistryException::~CRegistryException()
typeinfo name for common::CFileUtil::IFindFile
vtable for Grid::ICache::CCacheNeedsRepairException
Grid::CEngineConnection::SizeFile64(unsigned int, TSteamError*)
Grid::CClientManager::~CClientManager()
CryptoPP::MontgomeryRepresentation::MultiplicativeInverse(CryptoPP::Integer const&) const
CryptoPP::MDC<CryptoPP::SHA>::~MDC()
__dso_handle
vtable for Grid::CFs::CConfigException
ICmd_::~ICmd_()
virtual thunk to CryptoPP::BufferedTransformationWithAutoSignal::~BufferedTransformationWithAutoSignal()
CBlockingUDPSocket::~CBlockingUDPSocket()
vtable for CryptoPP::DERSequenceEncoder
Grid::CIndexAppIdToSubscriptionIdsRecord::~CIndexAppIdToSubscriptionIdsRecord()
DW.ref._ZTIN4Grid33CBadCallerErrorStructPtrExceptionE
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState::~CRecvDataChunkState()
typeinfo name for common::CLog
common::CBlobKey::DeleteSubKeyTree(std::string const&)
ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>::ExecuteNowIfNotDismissed() const
Grid::IManifestIteratorImpl::AdvanceToParent()
Grid::CAccount::EnumerateApp(unsigned int, TSteamApp*)
CryptoPP::Store::CopyMessagesTo(CryptoPP::BufferedTransformation&, unsigned int) const
CryptoPP::PK_FixedLengthCryptoSystem::~PK_FixedLengthCryptoSystem()
ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>::~ScopeGuardImpl1()
Grid::CReturnBufferData::CReturnBufferData(char*, unsigned int)
Grid::ICache::CFingerPrintDoesNotMatchException::ThrowSelf() const
std::vector<Grid::CFsCacheGroup::CImpl::CFindHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry*, std::vector<Grid::CFsCacheGroup::CImpl::CFindHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry>>>, Grid::CFsCacheGroup::CImpl::CFindHandleEntry const&)
Grid::CSClient::IProtocolFSM::IProtocolFSM(char const*, common::CLogContext*, Grid::CSClient::ICompletionHandler*, unsigned int, Grid::CSClient::IProtocolState const&, Grid::CSClient::CSession&, unsigned int, unsigned int)
Grid::CCacheDataBlock::SetFile(_IO_FILE*)
typeinfo for Grid::CAppIconsRecord
std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
Grid::CSClient::IBlockingCompletionHandler::IBlockingCompletionHandler(unsigned int)
Grid::CEngineLoopbackConnection::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
CryptoPP::Lucas(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&)
common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>::operator()()
Grid::CCacheFileFixedFsTree::CCacheFileFixedFsTree(_IO_FILE*, long, bool)
DW.ref._ZTIN4Grid3CFs27CAppHasNoCacheFileExceptionE
vtable for ScopeGuardImpl1<void (*)(unsigned int), unsigned int>
typeinfo name for common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>
non-virtual thunk to CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
typeinfo for CryptoPP::FilterWithBufferedInput
Grid::CEngineConnection::SetUser(char const*, int*, TSteamError*)
typeinfo name for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>
common::CThread::CThreadCreateException::ThrowSelf() const
common::CMainConfigDatabase::~CMainConfigDatabase()
vtable for ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>
CryptoPP::AES_PHM_Encryption::Put(unsigned char)
common::CBlobException::~CBlobException()
typeinfo for common::CLog
typeinfo for Grid::CDiscountQualifierRecord::CValidateFieldsException
vtable for Grid::CNotLoggedInException
Grid::CSClient::CSession::GetSponsorUrl() const
Grid::CUserAppAccessRightsRecord::~CUserAppAccessRightsRecord()
std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>::~pair()
Grid::CFs::CAppHasNoCacheFileException::CAppHasNoCacheFileException()
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Accumulate(CryptoPP::Integer&, CryptoPP::Integer const&) const
typeinfo for CryptoPP::RandomNumberGenerator
std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int>>::insert(unsigned int const&)
Grid::CSClient::CConnection::CompleteSend(int, unsigned int, Grid::CSClient::CSendCompletionDemuxInfo*)
typeinfo name for CryptoPP::CFBEncryption
BSL::CUnpackedTime::COutOfRange::~COutOfRange()
Grid::CClientConnection::HandleFlushFile()
CryptoPP::MontgomeryReduce(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned long const*, unsigned int)
Grid::CSClient::CReadFileChecksumTableFSM::CReadFileChecksumTableFSM(Grid::CSClient::CSession&, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CClientConnection::HandleSizeFile64()
vtable for Grid::CManifestBinException
common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>::~ObjFunctorImpl1()
CryptoPP::RandomNumberGenerator::~RandomNumberGenerator()
Grid::CFs::CReadException::ThrowSelf() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::_M_insert_unique(std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>> const&)
virtual thunk to CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::Encrypt(CryptoPP::RandomNumberGenerator&, unsigned char const*, unsigned int, unsigned char*)
Grid::CAllAppsPublicKeysRecord::~CAllAppsPublicKeysRecord()
AcquireMutex(void*, unsigned int)
typeinfo name for common::ICloneableException
common::CThreadLocalPtr<std::string>::~CThreadLocalPtr()
__udivdi3
construction vtable for CryptoPP::Filter-in-CryptoPP::FilterWithBufferedInput
Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CAccount::GetAppCurrentVersion(unsigned int, std::string*)
CryptoPP::Integer::IsSquare() const
Grid::ICache::CAppIdDoesNotMatchException::Clone() const
typeinfo for ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>
Grid::CManifestFormatException::~CManifestFormatException()
vtable for Grid::CAppFilesystemsRecord
_Unwind_GetIPInfo
sigslot::multi_threaded_local::unlock()
std::vector<common::CLogGroup*, std::allocator<common::CLogGroup*>>::~vector()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>>::~_Rb_tree()
virtual thunk to CryptoPP::FileSource::~FileSource()
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::CipherTextLength() const
Grid::CDiscountRecord::~CDiscountRecord()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>> const&)
vtable for common::CCommandStatusControlAutoTimeoutIfStalled
CryptoPP::PrimeSearchInterval(CryptoPP::Integer const&)
construction vtable for CryptoPP::Filter-in-CryptoPP::HashFilter
common::IEventLoopFunctor::~IEventLoopFunctor()
Grid::InternalSteamFindClose(unsigned int, unsigned int, TSteamError*)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string>>*)
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::FileStore
Grid::CCacheManifestOnly::FlushFile(Grid::CManifestIterator&)
std::vector<Grid::CCacheFileFixedDirectory::TEntry, std::allocator<Grid::CCacheFileFixedDirectory::TEntry>>::~vector()
Grid::OfflineStatus::GetCurrentState()
common::CNetworkException::ThrowSelf() const
typeinfo for CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>
arg::typed_reference<Grid::IResourceList>::~typed_reference()
typeinfo name for CryptoPP::Exception
common::CEventLoopThread::CException::ThrowSelf() const
typeinfo for Grid::CFs::CEndOfFileException
inflate_blocks_reset
Grid::CEngineConnection::NumAppsRunning(TSteamError*)
virtual thunk to CryptoPP::Source::~Source()
typeinfo name for Grid::ICache::CCacheNeedsRepairException
CAppSystem::Disconnect()
BSL::CTime::ToUnpackedTime(BSL::ETimePrecision) const
Grid::CEngineLoopbackConnection::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for BSL::CTime::CPackingException
__wrap_access
BSL::CUnpackedTime::COutOfRange::~COutOfRange()
common::CThreadSafeCountedPtr<Grid::CAppRecord>::dispose()
typeinfo for BSL::CUnpackedTime::COutOfRange
vtable for Grid::CFsTable::CImpl
Grid::CFs::CUnknownException::CUnknownException(common::CErrorCodeException::ESpecificType)
Grid::CAppSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>::ExecuteNowIfNotDismissed() const
std::vector<Grid::CCacheReplacementLru::TLru16, std::allocator<Grid::CCacheReplacementLru::TLru16>>::reserve(unsigned int)
Grid::CCacheFileFixedDirectory::Update(unsigned int, Grid::CCacheFileFixedDirectoryEntry&)
Grid::CEngineConnection::FlushFile(unsigned int, TSteamError*)
std::vector<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*>>::~vector()
Grid::InternalSteamMountFilesystem(unsigned int, unsigned int, char const*, TSteamError*)
CryptoPP::Integer::DEREncode(CryptoPP::BufferedTransformation&) const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CCountedPtr<std::string>>>*)
Grid::CCacheGroup::GetCacheUsageStats(unsigned long long*, unsigned long long*)
Grid::CLauncher::~CLauncher()
Grid::InternalSteamOpenTmpFile(unsigned int, TSteamError*)
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CEngineConnection::FindClose(unsigned int, TSteamError*)
typeinfo for Grid::CManifestBin
Grid::CClientConnection::HandleUnsubscribe()
Grid::CResourceListFile::IsDone()
Grid::CCacheFileFixedDirectory::GetDiskSizePerEntry()
g_bForceLocalProcessEngine
Grid::CCacheServerSessionMgr::DestroyIfExpired()
typeinfo for CryptoPP::MontgomeryRepresentation
typeinfo name for Grid::CCacheGroupIterator
typeinfo for common::CBadAlloc
SetEndOfFile(void*)
common::CGetTokensException::~CGetTokensException()
CryptoPP::ModularArithmetic::CascadeExponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CSClient::CReadManifestFSM::~CReadManifestFSM()
Grid::CSClient::ReadVersionChangeFileIdPurgeList(unsigned int, unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo for Grid::ICacheGroupIteratorImpl::CInvalidCache
SetThreadPriority(void*, int)
typeinfo for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>
typeinfo name for Grid::CCachePreLoader
typeinfo for common::CMultiFieldBlob::CUnableToGrowBlobException
Grid::InternalSteamSizeFile64(unsigned int, unsigned int, TSteamError*)
vtable for BSL::CUnpackedTime::CFromStringException
CryptoPP::ByteQueue::Put(unsigned char)
Grid::ICache::CException::~CException()
vtable for Grid::CAppRegionRecord::CValidateFieldsException
construction vtable for CryptoPP::PK_Decryptor-in-CryptoPP::PK_FixedLengthDecryptor
CryptoPP::NonblockingRng::NonblockingRng()
Grid::CTicketCache::CImpl::CImpl()
Grid::InternalSteamMoveApp(unsigned int, unsigned int, char const*, TSteamError*)
vtable for CryptoPP::RSAFunction
Grid::CEngineConnection::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
std::_Rb_tree<unsigned long, std::pair<unsigned long const, CAsyncIOManager::data_t*>, std::_Select1st<std::pair<unsigned long const, CAsyncIOManager::data_t*>>, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, CAsyncIOManager::data_t*>>>::~_Rb_tree()
typeinfo name for Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException
Grid::InternalSteamGetContentServerInfo(unsigned int, unsigned int, unsigned int*, unsigned int*, TSteamError*)
VTT for CryptoPP::MessageQueue
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CEngineConnection::GetAppUserDefinedRecord(unsigned int, common::CMallocedBlock&, TSteamError*)
typeinfo for Grid::CSClient::CLogoutFSM
common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::~ObjFunctorImpl0()
common::CThreadSafeCountedPtr<sigslot::_connection_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>>::dispose()
Grid::CAppStatus::OnCacheVersionChange(unsigned int)
Grid::CFs::GetAppUpdateStats(std::string const&, EGameState, unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const*, common::CCommandStatusControl*)
Grid::CAccountSubscriptionsRecord::ValidateFields(std::ostream*, unsigned int)
__register_frame_info
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>> const&)
Grid::CEngineLoopbackConnection::BlockingCall(unsigned int, unsigned int, TSteamError*)
typeinfo for Grid::CAppVersionInfoRecord::CValidateFieldsException
Grid::CSClient::CConnection::BindClientServerSessionHandles(unsigned int, unsigned int, unsigned int)
typeinfo name for Grid::CResourceListNodes
CryptoPP::HashFilter::~HashFilter()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>>::~_Rb_tree()
Grid::CCachePreLoader::SignalPreloaderDone
typeinfo name for sigslot::multi_threaded_local
ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
Grid::CContentDescriptionDBCache::GetContentDescriptionRecord(bool, bool*, common::CCommandStatusControl*)
Grid::ICache::CFingerPrintDoesNotMatchException::~CFingerPrintDoesNotMatchException()
Grid::CSClient::CConnection::SponsorUrl() const
vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
vtable for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>
Grid::CPipeComm::Read(void*, unsigned int)
common::CBlobKey::GetValue(std::string const&, std::string&)
vtable for common::CBlobSubKeyIterator
common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>::dispose()
common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException::~CFailedToOpenMemoryMappedFileException()
Grid::ICache::CResourceIsNotFile::~CResourceIsNotFile()
Grid::CSubscriberAccountRecord::CValidateFieldsException::Clone() const
Grid::CResourceListStrings::GetNextResource(Grid::CCacheGroupIterator&, std::string&, unsigned long long*, unsigned long long*, Grid::ContentPriority::ERequestLevel*)
Grid::CCacheOneFileFixedBlock::CImpl::AdjustDataStart(unsigned int)
Grid::CSubscriptionAppIdsRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for CryptoPP::EuclideanDomainOf<CryptoPP::Integer>
typeinfo for common::CCompressionException
Grid::ICache::CCorruptionException::~CCorruptionException()
std::vector<Grid::CFsTable::CImpl::TAppLock, std::allocator<Grid::CFsTable::CImpl::TAppLock>>::~vector()
vtable for ScopeGuardImpl1<bool (*)(std::string const&), std::string>
Grid::CAppIconsRecord::~CAppIconsRecord()
Grid::CAllDiscountQualifiersRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CClientConnection::HandleForceCellId()
Grid::ICache::CInvalidResourceOffset::ThrowSelf() const
Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException::ThrowSelf() const
Grid::IManifestIteratorImpl::~IManifestIteratorImpl()
CryptoPP::ByteQueue::Skip(unsigned long)
ReadFile(void*, void*, unsigned int, unsigned int*, Overlapped_t*)
typeinfo for CryptoPP::BERGeneralDecoder
Grid::CEngineConnection::OpenFile(char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Inverse(CryptoPP::Integer const&) const
typeinfo for CryptoPP::ByteQueue
common::CMallocedBlock::CMallocedBlock(unsigned int)
common::CBlobKey::_OpenSubKey(std::string const&)
Grid::ICacheGroupIteratorImpl::AdvanceToChild()
Grid::CCacheManifestOnly::AddFileChunkToCache(Grid::CManifestIterator&, void const*, unsigned long long, unsigned long long)
typeinfo for CryptoPP::Source
Grid::CNoContentServerAvailableException::~CNoContentServerAvailableException()
deflateEnd
common::CBlobKey::~CBlobKey()
Grid::CClientAuthenticationTicket::CClientAuthenticationTicket(unsigned short, std::string const&, std::string const&, unsigned short, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned short, unsigned int, unsigned short, unsigned char const*, BSL::CTime, BSL::CTime, unsigned short, unsigned char const*, unsigned int)
typeinfo name for common::CThread::CThreadCreateException
typeinfo name for CryptoPP::HashModule
typeinfo name for ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>
common::CValueIterator::~CValueIterator()
std::string* std::__uninitialized_copy<false>::uninitialized_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
Grid::CFs::LoadFileToCache(unsigned int, std::string const&, void const*, unsigned int, unsigned long long)
Grid::CAllDiscountsRecord::ValidateFields(std::ostream*, unsigned int)
common::CMallocedBlock::~CMallocedBlock()
common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException::~CReusedAuthenticatorException()
Grid::CEngineConnection::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
std::auto_ptr<Grid::CCacheDataBlock>::reset(Grid::CCacheDataBlock*)
Grid::CAccount::CImpl::GetUserID(TSteamGlobalUserID&)
Grid::CFsTable::IMountedCache::~IMountedCache()
typeinfo for common::CInUseException
CryptoPP::CFBDecryption::ProcessString(unsigned char*, unsigned int)
CryptoPP::MontgomeryRepresentation::Multiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CSClient::CReadManifestFSM::CRecvDataChunkState::~CRecvDataChunkState()
common::CBlobException::ThrowSelf() const
typeinfo for Grid::CCacheManifestOnly
Grid::CAccount::AckSubscriptionReceipt(common::CCommandStatusControl&, unsigned int)
common::CEventLoopThread::CEventLoopThread(std::string const&, common::CThreadSafeCountedPtr<common::IEventLoopFunctor> const&, unsigned int, unsigned int, common::CThreadSafeCountedPtr<common::ILogFunctor> const&, std::pair<common::CThreadSafeCountedPtr<common::IFunctor>, common::CThreadSafeCountedPtr<common::IFunctor>> const&, bool, bool, bool)
Grid::CEngineLoopbackConnection::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler::CompleteReadFile(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
typeinfo name for common::CThread::CThreadAlreadyRunningException
vtable for Grid::CFs::CUnknownException
typeinfo for common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException
Grid::CClientConnection::HandleBlockingCall()
typeinfo name for sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CSClient::CReadPurgeListFSM::s_SendRequestState
Grid::CCacheServerSessionMgr::ReadFileChecksumTable(common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*>(common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*)
Grid::ICache::CNotFoundException::~CNotFoundException()
Grid::ICache::CBadArgException::Clone() const
SafeVsnprintf
common::CValue::CValue(std::string const&, common::CValue::EType, unsigned char const*, unsigned int)
CryptoPP::NonblockingRng::~NonblockingRng()
Grid::CSClient::HelperTicketCacheEndAccess(std::string const&, unsigned int)
common::CValue::~CValue()
Grid::CCacheServerSessionMgr::ReadFile(unsigned int, unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, unsigned int*, unsigned int*, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::ICache::CCacheNeedsRepairException::Clone() const
virtual thunk to CryptoPP::AES_PHM_Decryption::~AES_PHM_Decryption()
CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>::Gcd(CryptoPP::Integer const&, CryptoPP::Integer const&) const
CreateSemaphore(void*, int, int, char const*)
Grid::CFsCacheGroup::CImpl::AllocateNewFindHandle(Grid::CSplitPath const&, Grid::CCacheGroupIterator&)
typeinfo name for ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>
vtable for ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>
_dist_code
Grid::CSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::DERGeneralEncoder::~DERGeneralEncoder()
Grid::CFs::CSeekException::Clone() const
CryptoPP::BufferedTransformation::GetAutoSignalPropagation() const
Grid::CCacheFileFixedChecksum::CException::ThrowSelf() const
vtable for Grid::CAccountUserPasswordRecord::CValidateFieldsException
common::CMultiFieldBlob::SetAutoZLibCompression(unsigned short)
Grid::CFs::GetCachePercentFragmentation(std::string const&, EGameState, unsigned int, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&)
vtable for Grid::CAppRecord
Grid::InternalSteamIsCacheLoadingEnabled(unsigned int, unsigned int, int*, TSteamError*)
typeinfo name for Grid::CAllAppsRecord
Grid::CVTSIPAddressCache::~CVTSIPAddressCache()
Grid::CFsTable::GetPreloaderCacheGroup(std::string const&, unsigned int)
ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>::ExecuteNowIfNotDismissed() const
Grid::CAccount::CImpl::GetAccountInfoFromServer(common::CCommandStatusControl&)
virtual thunk to CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
Grid::CSClient::CReadFileChecksumTableFSM::s_SendRequestState
vtable for Grid::CSubscriptionAppIdsRecord::CValidateFieldsException
Grid::CAccount::CImpl::OnPreloaderFinish(std::string const&, unsigned int)
construction vtable for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
Grid::ICache::CException::Clone() const
Grid::CCacheServerSession::~CCacheServerSession()
common::CAdaptPlainToEventLoopFunctor::operator()()
common::CEventLoopThread::s_tsrcpNullLogFunctor
Grid::ICache::ICacheCompletionHandler::PostCompleteRead(unsigned long long, common::ICloneableException const*, unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
Grid::CFsCacheGroup::CImpl::SeekFromStart(unsigned int, unsigned long long)
vtable for Grid::CBufferTable
CryptoPP::Integer::operator-() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>> const&)
vtable for common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException
common::CCommandStatusControlAutoTimeoutIfStalled::IsCancelled() const
Grid::CFs::CNotFoundException::Clone() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>*)
typeinfo for CryptoPP::PK_CryptoSystem
Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState::~CSendSessionLogoutRequestState()
common::CInUseException::Clone() const
Grid::CSClient::CSession::ReadFile(unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CLogContext::~CLogContext()
Grid::InternalSteamGetSponsorUrl(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
Grid::CAccountUserPasswordRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CBadLaunchConfigException::ThrowSelf() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::string>>*)
typeinfo name for ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>
CryptoPP::Store::Put(unsigned char const*, unsigned int)
VTT for CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
Grid::CAccount::CImpl::UpdateUserDefinedAppDependencies(unsigned int, std::vector<TSteamAppDependencyInfo, std::allocator<TSteamAppDependencyInfo>> const&)
__gnu_cxx::new_allocator<unsigned long>::allocate(unsigned int, void const*)
typeinfo for common::IValueIteratorImpl
CryptoPP::Rijndael::Te2
std::vector<unsigned char, std::allocator<unsigned char>>::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char>>>, unsigned char const&)
ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::~ObjScopeGuardImpl0()
Grid::CAccountPendingException::Clone() const
Grid::CEngineConnection::GetAppStats(TSteamAppStats*, TSteamError*)
typeinfo for Grid::CAppLaunchOptionRecord
CryptoPP::OS_RNG_Err::~OS_RNG_Err()
common::CErrorCodeException::CErrorCodeException(std::string const&, common::CErrorCodeException::ESpecificType, int, int)
sigslot::signal1<unsigned int, sigslot::multi_threaded_local>::~signal1()
CryptoPP::HexEncoder::Put(unsigned char)
typeinfo name for Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException
Grid::CCacheFileFixedChecksum::GetDiskFixedSize()
CryptoPP::MontgomeryRepresentation::One() const
CryptoPP::RandomPool::GenerateByte()
std::auto_ptr<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs>::~auto_ptr()
void std::__heap_select<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
Grid::CFsCacheGroup::CImpl::CFileHandleEntry::~CFileHandleEntry()
vtable for sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
CryptoPP::BERGeneralDecoder::BERGeneralDecoder(CryptoPP::BERGeneralDecoder&, unsigned char)
typeinfo for CryptoPP::BitBucket
g_uCacheNumServerSessions
common::CThreadSafeCountedPtr<Grid::CAccount>::dispose()
common::CCommandStatusControlAutoTimeoutIfStalled::~CCommandStatusControlAutoTimeoutIfStalled()
BSL::CUnpackedTime::VerifyRange() const
std::operator~(std::_Ios_Fmtflags)
typeinfo name for CryptoPP::FeedBackMode
Grid::CEngineConnection::OpenFile2(char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)
common::CThreadSafeCountedPtr<Grid::CActivityLog>::~CThreadSafeCountedPtr()
common::CBlobRegistry::DeleteSubKeyNoThrow(std::string const&)
std::vector<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::allocator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, std::vector<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::allocator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader> const&)
vtable for common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException
__gnu_cxx::hashtable<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey, common::CUsedAuthenticatorTimestampsCache::CClientUsageInfoKeyHashCompareLessThan, std::_Select1st<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>, std::equal_to<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey>, std::allocator<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>::insert_unique_noresize(std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo> const&)
Grid::CClientConnection::HandleIsCacheLoadingEnabled()
Grid::IResourceList::~IResourceList()
DW.ref._ZTIN4Grid3CFs19CEndOfFileExceptionE
Grid::CClientConnection::HandleIsAccountNameInUse()
Grid::CFsTable::CImpl::GetPreloaderMFPFileList(std::string const&, unsigned int)
Grid::CAppStatus::AddFileDependency(unsigned int, unsigned int, unsigned int, unsigned long long, unsigned long long, bool, bool)
Grid::CFs::CBadHandleException::~CBadHandleException()
Grid::CSplitPath::CSplitPath(char const*, char const*)
typeinfo for Grid::CSClient::ICompletionHandler
common::CBlobKey::CPublicKey::BeginValueIteration()
Grid::CEngineConnection::UpdateSubscriptionBillingInfo(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
typeinfo name for CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
Grid::CFsCacheGroup::CImpl::CheckFileFlags(unsigned int, int)
std::auto_ptr<Grid::CFileIdChecksumTable>::~auto_ptr()
Grid::CEngineNotRunningException::CEngineNotRunningException()
VTT for CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
CryptoPP::BufferedTransformation::ChannelPutWord32(std::string const&, unsigned long, bool)
typeinfo for Grid::CTicketExpiredException
CryptoPP::RSAFunction::DEREncode(CryptoPP::BufferedTransformation&) const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::~_Rb_tree()
Grid::CEngineLoopbackConnection::VerifyEmailAddress(char const*, TSteamError*)
ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>::~ObjScopeGuardImpl0()
std::vector<std::string, std::allocator<std::string>>::push_back(std::string const&)
Grid::CFs::FindClose(unsigned int, unsigned int)
typeinfo name for CryptoPP::CBCPaddedEncryptor
BSL::CCumulativeDays::CCumulativeDays()
typeinfo for Grid::CLibraryAlreadyInitializedException
typeinfo name for CryptoPP::HexDecoder
CryptoPP::AES_PHM_Decryption::Put(unsigned char const*, unsigned int)
vtable for common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException
Grid::CSClient::CConnection::NumSessions() const
typeinfo name for BSL::CTime::CPackingException
__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>::__normal_iterator(std::string* const&)
Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
non-virtual thunk to Grid::CEngineLoopbackConnection::~CEngineLoopbackConnection()
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::_M_insert_unique(std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock> const&)
typeinfo for common::CThreadLocalPtr<std::string>
vtable for common::CLogFile
Grid::CFsCacheGroup::CImpl::Getc(unsigned int)
typeinfo name for Grid::CAllSubscriptionsRecord
CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>::Pad(CryptoPP::RandomNumberGenerator&, unsigned char const*, unsigned int, unsigned char*, unsigned int) const
typeinfo for Grid::CAppRegionRecord
typeinfo name for CryptoPP::Sink
CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>::Run(void*)
common::IKey::IKey(std::string const&)
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(unsigned int, Grid::CCacheGroup*, unsigned int)
Grid::CLibraryNotInitializedException::CLibraryNotInitializedException()
typeinfo name for Grid::CAppIconsRecord::CValidateFieldsException
Grid::CClientConnection::HandleRefreshLogin()
vtable for Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException
common::CFileUtil::CopyAFile(std::string const&, std::string const&)
Grid::CTicketCache::CImpl::CreateFakeUserTicket()
typeinfo name for CryptoPP::BlockingRng
Grid::CCacheGroup::~CCacheGroup()
Grid::CAccount::CImpl::IsAppSubscribed(unsigned int, bool)
CryptoPP::StreamCipher::ProcessString(unsigned char*, unsigned int)
Grid::IResourceList::ParseString(char const*, std::string&, bool&, unsigned long long*, unsigned long long*)
typeinfo name for common::CMultiFieldBlob
CWrap::~CWrap()
Grid::CManifestBin::GetDepotKey() const
Grid::CCacheFileFixedDirectory::CCacheFileFixedDirectory(_IO_FILE*)
ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
Grid::CAllSubscriptionsRecord::CValidateFieldsException::~CValidateFieldsException()
std::vector<__gnu_cxx::_Hashtable_node<std::pair<unsigned int const, common::CIPAddrPort>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<unsigned int const, common::CIPAddrPort>>*>>::~vector()
BSL::g_cumulativeDays
Grid::CSClient::CReadPurgeListFSM::~CReadPurgeListFSM()
Grid::CMutexGuard::~CMutexGuard()
std::vector<unsigned int, std::allocator<unsigned int>>::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int>>>, unsigned int const&)
Grid::CCacheGroupIterator::~CCacheGroupIterator()
Grid::CAccountSubscriptionRecord::ValidateFields(std::ostream*, unsigned int)
common::CConfigDatabase::~CConfigDatabase()
Grid::CFsBuffer::CFsBuffer(Grid::IEngineConnection*)
Grid::CCacheQueueEntry::~CCacheQueueEntry()
CryptoPP::FileStore::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::~_Rb_tree()
vtable for CryptoPP::Rijndael
Grid::CFsTable::CImpl::RemoveMount(std::string const&)
vtable for CryptoPP::AES_PHM_Decryption::InvalidCiphertextOrKey
typeinfo for Grid::CAllAppsEncryptedPrivateKeysRecord
CryptoPP::Integer::GetByte(unsigned int) const
vtable for Grid::CCacheDescBlock
common::CConfigDatabase::Set(std::string const&, unsigned int)
typeinfo for common::CMultiFieldBlob::CBlobException
CryptoPP::PK_Decryptor::~PK_Decryptor()
Grid::CAccountPaymentCardInfoRecord::~CAccountPaymentCardInfoRecord()
Grid::CFs::CBadMountException::~CBadMountException()
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, std::string> const&)
CryptoPP::Integer::Randomize(CryptoPP::RandomNumberGenerator&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::InternalSteamForgetAllHints(unsigned int, unsigned int, TSteamError*)
CryptoPP::BufferedTransformation::~BufferedTransformation()
common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException::~CLoginRateTooHighException()
DW.ref._ZTIN6common7CThread10CExceptionE
Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::CAccount::GenerateSuggestedAccountNames(common::CCommandStatusControl&, std::string const&, std::string const&, std::vector<std::string, std::allocator<std::string>>*)
common::CBlobRegistry::DeleteValue(std::string const&, std::string const&)
Grid::CCacheFileFixedFsTree::SetCacheSearchKey(unsigned int, unsigned int)
Grid::CAccountSubscriptionsRecord::~CAccountSubscriptionsRecord()
CryptoPP::FileStore::MaxRetrievable() const
Grid::CDiscountRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CReadFileFSM::CReadFileFSM(Grid::CSClient::CSession&, unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CAccountOrUserDoesNotExistException::~CAccountOrUserDoesNotExistException()
Grid::CAllAppsRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::FileStore::~FileStore()
common::CMultiFieldBlob::RecursivelyUnlinkDescendentsFromParentsAndResetToEmpty()
common::CEventLoopThread::s_pair_NullThreadInitFunctors
vtable for Grid::CAllAppsEncryptedPrivateKeysRecord
Grid::IManifestIteratorImpl::IsReadOnlyFile() const
CryptoPP::PK_CryptoSystem::~PK_CryptoSystem()
DW.ref.__gxx_personality_v0
Grid::CSClient::CSession::ContentServerId() const
Grid::CClientConnection::HandlePutc()
Grid::IServerAddressCache::~IServerAddressCache()
Grid::CSClient::CReadPurgeListFSM::CSendRequestState::~CSendRequestState()
typeinfo for CryptoPP::BufferedTransformation::Err
Grid::CCacheNone::CCacheNone(unsigned int, unsigned int, std::string const&, std::string const&)
typeinfo name for common::CGetTokensException
Grid::CCacheBatBlock::SerializeEntry(unsigned int, _IO_FILE*)
Grid::CAppVersionsRecord::~CAppVersionsRecord()
Grid::CSClient::CConnection::RecvThreadInit()
vtable for ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>
_Unwind_GetTextRelBase
typeinfo for CryptoPP::RSAFunction
Grid::CCachePreLoader::CImpl::FindNextManifestFile(Grid::CCacheGroupIterator&)
CryptoPP::BufferedTransformation::AttachedTransformation() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>> const*, std::_Rb_tree_node<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>*)
Grid::CFs::CCannotWriteNonUserConfigFile::ThrowSelf() const
vtable for Grid::CSClient::COperationCancelledException
CryptoPP::Crop(unsigned long, unsigned int)
std::_Vector_base<std::string, std::allocator<std::string>>::_Vector_impl::~_Vector_impl()
Grid::CEngineConnection::GetCurrentAppId(unsigned int*, TSteamError*)
DW.ref._ZTIN4Grid9CPipeComm20CBrokenPipeExceptionE
Grid::CFsCacheGroup::FindClose(unsigned int)
Grid::CSClient::IProtocolFSM::~IProtocolFSM()
Grid::CAccount::GetParentApp(unsigned int)
Grid::IClientConnection::NewConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*, void*, unsigned int, std::string const&, std::string const&, std::string const&, sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>&)
vtable for CryptoPP::HexDecoder
Grid::CCellIDManager::CCellIDManager()
common::CMultiFieldBlob::CStringFieldNotTerminatedException::ThrowSelf() const
CryptoPP::ModularArithmetic::Accumulate(CryptoPP::Integer&, CryptoPP::Integer const&) const
ISteamInterface::~ISteamInterface()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::~_Rb_tree()
common::CMultiFieldBlob::~CMultiFieldBlob()
CryptoPP::AES_PHM_Encryption::~AES_PHM_Encryption()
common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>::dispose()
operator new(unsigned int, void*)
Grid::CContentDescriptionDBCache::ReadLocalAppKeysFile()
CAsyncIOManager::CThreadSafeBusySet::~CThreadSafeBusySet()
CryptoPP::FilterWithBufferedInput::BlockQueue::ResetQueue(unsigned int, unsigned int)
Grid::InternalSteamGetAppCacheSize(unsigned int, unsigned int, unsigned int*, TSteamError*)
common::CScopedReadLock::~CScopedReadLock()
vtable for common::CRegistryException
common::CThreadSafeCountedPtr<common::CConfigTree>::dispose()
typeinfo name for Grid::CAccountSubscriptionBillingInfoRecord
common::CMultiFieldBlob::RecurseDownToAutoPreprocessBlobs()
CryptoPP::PrimeSieve::PrimeSieve(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, int)
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
CryptoPP::DERLengthEncode(CryptoPP::BufferedTransformation&, unsigned int)
std::map<std::string, Grid::TCacheDescriptor, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::operator[](std::string const&)
common::CSimpleBitString::AppendBits(unsigned int, unsigned int)
typeinfo for Grid::CFs::CSeekException
Grid::IManifestIteratorImpl::GetDirCount() const
std::vector<std::string, std::allocator<std::string>>::vector(std::allocator<std::string> const&)
Grid::CReturnBufferItem<int>::~CReturnBufferItem()
typeinfo name for Grid::CSClient::CBlockingReadFileCompletionHandler
DW.ref._ZTIN4Grid3CFs26CCacheFileMissingExceptionE
Grid::CBadApiArgumentException::~CBadApiArgumentException()
typeinfo for common::CMultiFieldBlob::CStringFieldNotTerminatedException
arg::generic_reference::generic_reference(void*, void (*)(void*))
Grid::CSClient::DestroySession(unsigned int)
Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
construction vtable for CryptoPP::RSAFunction-in-CryptoPP::InvertibleRSAFunction
Grid::CCacheNone::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long, unsigned int)
typeinfo for CBlockingUDPSocket
Overlapped_t::~Overlapped_t()
Grid::CAppLaunchOptionRecord::ValidateFields(std::ostream*, unsigned int)
GetFullPathName(char const*, unsigned int, char*, char**)
Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException::ThrowSelf() const
SetEvent(void*)
CryptoPP::CFBDecryption::~CFBDecryption()
std::_List_base<common::CThreadSafeCountedPtr<sigslot::_connection_base1<unsigned int, sigslot::multi_threaded_local>>, std::allocator<common::CThreadSafeCountedPtr<sigslot::_connection_base1<unsigned int, sigslot::multi_threaded_local>>>>::_M_clear()
common::ILogFunctor::~ILogFunctor()
Grid::CFsCacheGroup::CImpl::DvrOpen(Grid::CSplitPath const&, bool*, TSteamElemInfo&)
CryptoPP::FilterWithBufferedInput::~FilterWithBufferedInput()
CryptoPP::TrapdoorFunction::MaxImage() const
CryptoPP::RandomNumberGenerator::GenerateBlock(unsigned char*, unsigned int)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_unique(std::pair<std::string const, std::string> const&)
typeinfo name for common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException
Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
CryptoPP::BlockingRng::BlockingRng()
Grid::CManifestBin::GetNode(char const*) const
Grid::CCacheNone::IsAnyPartPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
std::vector<CryptoPP::Integer, std::allocator<CryptoPP::Integer>>::_M_fill_insert(__gnu_cxx::__normal_iterator<CryptoPP::Integer*, std::vector<CryptoPP::Integer, std::allocator<CryptoPP::Integer>>>, unsigned int, CryptoPP::Integer const&)
Grid::InternalSteamRequestAccountsByCdKeyEmail(unsigned int, char const*, TSteamError*)
CryptoPP::AbstractGroup<CryptoPP::Integer>::ScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CAccount::CImpl::HandleContentServerBadProtocolVersion(std::string const&, unsigned int)
Grid::CSClient::GetPerfStats(Grid::CSClient::TPerfStats&)
construction vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>-in-CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
Grid::CSClient::COperationCancelledException::ThrowSelf() const
Grid::CSClient::CConnectionPool::~CConnectionPool()
Grid::CInstallPath::s_sModuleName
CryptoPP::SHA256::K
vtable for CryptoPP::FilterWithBufferedInput
Grid::ConnectToAuthenticationServerWithIPAddrPort(common::CIPAddrPort const&, common::CCommandStatusControl*)
Grid::CEngineConnection::RequestForgottenPasswordEmail(char const*, char*, TSteamError*)
common::CRuntimeError::Clone() const
common::CCountedPtr<std::string>::dispose()
common::CDefaultAssertCatcher::s_bAlreadyDestroyedOnce
typeinfo name for Grid::CReturnBufferData
vtable for Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState
common::CNetworkException::CNetworkException(std::string const&)
vtable for CryptoPP::BufferedTransformation
common::CRecvException::~CRecvException()
vtable for Grid::CAppVersionsRecord::CValidateFieldsException
sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>::duplicate(sigslot::has_slots<sigslot::multi_threaded_local>*)
CryptoPP::CBCPaddedEncryptor::~CBCPaddedEncryptor()
common::CThreadSafeCountedPtr<Grid::ICommandState>::dispose()
typeinfo for ScopeGuardImplBase
Grid::ICache::CResourceChecksumFailure::~CResourceChecksumFailure()
__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long>>>::base() const
std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>::~vector()
Grid::CCacheFileFixedChecksum::GetBinarySize() const
typeinfo name for Grid::CFs::CBadArgException
Grid::CFs::CConfigException::~CConfigException()
DW.ref._ZTIN6common32CNamedArgsUndefinedNameExceptionE
Grid::CEngineLoopbackConnection::GetSubscriptionExtendedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo name for Grid::CCacheManifestOnly
CallbackMgr_UnregisterCallback(CCallbackBase*)
ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>> MakeObjGuard<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>)
Grid::CAllDiscountQualifiersRecord::CValidateFieldsException::Clone() const
common::CThreadLocalPtr<std::string>::~CThreadLocalPtr()
std::string BSL::I2STemplate<std::string, unsigned int>(unsigned int, int, int)
CryptoPP::CipherMode::CipherMode(CryptoPP::BlockTransformation const&, unsigned char const*)
vtable for Grid::CSubscriptionAppIdsRecord
Grid::CBufferTable::GetBuffer(unsigned int)
Grid::CSubExtendedInfoRecord::ValidateFields(std::ostream*, unsigned int)
typeinfo for common::CFindFile
common::CBadAlloc::~CBadAlloc()
typeinfo name for Grid::CCacheFileFixedChecksum::CException
Grid::CNotSubscribedException::~CNotSubscribedException()
Grid::CCacheDataBlock::CCacheDataBlock(unsigned int, unsigned int, unsigned int)
ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::~ObjScopeGuardImpl0()
Grid::CReturnBufferItem<int>::Send(Grid::CPipeComm*)
common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>* std::__uninitialized_copy<false>::uninitialized_copy<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*>(common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*)
Grid::CClientConnection::HandleClientDisconnect()
common::CMultiFieldBlob::CFieldDoesNotExistException::~CFieldDoesNotExistException()
Grid::CShippingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
virtual thunk to CryptoPP::PK_Decryptor::~PK_Decryptor()
std::auto_ptr<Grid::CCacheFileFixedChecksum>::reset(Grid::CCacheFileFixedChecksum*)
vtable for CryptoPP::FileStore::Err
Grid::IManifestIteratorImpl::IManifestIteratorImpl(Grid::IManifestIteratorImpl const&)
Grid::CEngineLoopbackConnection::SetAppVersion(unsigned int, unsigned int, TSteamError*)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::find(std::string const&) const
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::DigestSize() const
vtable for ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>
Grid::CSClient::CBlockingLoginCompletionHandler::CompleteConnect(common::ICloneableException const*, bool, unsigned int, unsigned int, unsigned int)
Grid::CCacheNone::FlushFile(Grid::CManifestIterator&)
common::CCommandStatusControlAutoTimeoutIfStalled::ClearStalled()
Grid::CSClient::ICompletionHandler::CompleteReadManifest(common::ICloneableException const*, unsigned int)
Grid::CSClient::CLoginFSM::DoAbort(common::ICloneableException const&)
common::CThreadLocalRegistrar::RegisterSelf(common::CThreadLocalBase*)
Grid::IServerAddressCache::IServerAddressCache()
vtable for common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>
common::CCommandStatusControl::~CCommandStatusControl()
common::CBlobSubKeyIterator::OpenKey() const
Grid::CDiscountQualifierRecord::~CDiscountQualifierRecord()
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string>>, std::pair<std::string const, std::string> const&)
Grid::CClientRegistry::GetFullRegistryFileName()
construction vtable for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
std::allocator<std::string>::~allocator()
Grid::CClientConnection::HandleGetCacheFilePath()
Grid::ICache::BValidDecryptionKey() const
common::CLog::DisableDate()
Grid::CClientConnection::HandlePauseCachePreloading()
GetFileSize(void*, unsigned int*)
common::CConfigDatabase::CConfigDatabase(char const*, bool)
Grid::CSClient::CSession::~CSession()
Grid::ICacheGroupIteratorImpl::~ICacheGroupIteratorImpl()
std::vector<unsigned short, std::allocator<unsigned short>>::~vector()
Grid::InternalSteamCreateAccount(unsigned int, char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>::operator()(std::string const&, unsigned int)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>>::~_Rb_tree()
Grid::CAccountUserRecord::CValidateFieldsException::ThrowSelf() const
common::CBlobRegistry::SubKeyExists(std::string const&)
crc32
common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException::ThrowSelf() const
Grid::CSClient::ICompletionHandler::~ICompletionHandler()
CryptoPP::IteratedHashBase<unsigned long>::IteratedHashBase(unsigned int, unsigned int)
common::CBlobValueIterator::GetValue() const
Grid::CCacheFileFixedFsTree::Serialize(_IO_FILE*, bool) const
Grid::CFs::CException::ThrowSelf() const
void std::__destroy_aux<std::string*>(std::string*, std::string*, std::__false_type)
unsigned long* std::__copy_backward_aux<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
Grid::GetClientLocalIPAddress()
CryptoPP::CipherMode::~CipherMode()
common::CTypeMismatchException::Clone() const
typeinfo for ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>
non-virtual thunk to Grid::CClientConnection::~CClientConnection()
typeinfo name for Grid::CAppLaunchOptionsRecord
vtable for common::CTypeMismatchException
common::CDefaultAssertCatcher::s_pSingletonInstance
typeinfo for Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState
Grid::CEngineConnection::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
Grid::CManifestBin::~CManifestBin()
Grid::CAppVersionInfoRecord::~CAppVersionInfoRecord()
Grid::CReadFileChecksumFailedException::CReadFileChecksumFailedException()
CryptoPP::RandomNumberGenerator::GenerateBit()
typeinfo name for CryptoPP::FixedBlockSize<20u>
Grid::CClientConnection::HandleEnumerateApp()
common::CBlobKey::DeleteSubKeyTreeNoThrow(std::string const&)
Grid::CManifestChecksumException::~CManifestChecksumException()
CryptoPP::primeTableSize
Grid::CFsBuffer::IsBuffered()
common::CBlobRegistry::OpenSubKey(std::string const&)
Grid::CManifestIterator::CManifestIterator(Grid::CManifestIterator const&)
Grid::CAccount::IsLoggedIn() const
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::_M_insert_unique(std::string const&)
typeinfo for Grid::IFsStrategy
CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
common::CLog::EnableTimestamp()
typeinfo for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState
vtable for ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo> const&)
Grid::CClientAuthenticationTicket::CValidateFieldsException::Clone() const
Grid::CCacheServerSession::~CCacheServerSession()
VTT for CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CFs::CBadHandleException::Clone() const
Grid::CManifestBin::GetCompressionBlkSize() const
Grid::CCacheOneFileFixedBlock::CImpl::CommitCacheSearchKey(unsigned int, unsigned int)
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::ICommandState>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::ICommandState>>>>::~map()
InterlockedDecrement(long volatile*)
Grid::IEngineConnection::NewConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*)
ScopeGuardImpl1<int (*)(void*), void*>::~ScopeGuardImpl1()
WSARecv(int, iovec*, unsigned int, unsigned int*, unsigned int*, Overlapped_t*, void (*)(unsigned int, unsigned int, Overlapped_t*, unsigned int))
typeinfo name for ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>
Grid::CClientManager::ShouldShutdownEngine()
Grid::ICache::CResourceChecksumFailure::~CResourceChecksumFailure()
BSL::CTime::~CTime()
common::CThreadSafeCountedPtr<common::ILogFunctor>::~CThreadSafeCountedPtr()
typeinfo name for Grid::CFs::CReadException
Grid::CFsTable::IsAppDirInUse(std::string const&)
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<int const, LicenseInfo_t>>, std::pair<int const, LicenseInfo_t> const&)
typeinfo name for CBlockingUDPSocket
common::CMultiFieldBlob::CBlobException::CBlobException(char const*)
Grid::CClientConnection::HandleUninstall()
Grid::CFs::CUnknownException::CUnknownException(common::CErrorCodeException::ESpecificType)
Grid::CAccountUserPasswordsRecord::~CAccountUserPasswordsRecord()
typeinfo for Grid::CAppFilesystemRecord::CValidateFieldsException
Grid::CAccount::CImpl::Uninstall(common::CCommandStatusControl&)
Grid::ICacheGroupIteratorImpl::IsPresent(unsigned long long, unsigned long long)
Grid::InternalSteamEndClient(unsigned int)
__register_frame_info_table
Grid::CAccountOrUserDoesNotExistException::~CAccountOrUserDoesNotExistException()
virtual thunk to CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
Grid::CClientManager::CClientManager()
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::InternalSteamUpdateSubscriptionBillingInfo(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
Grid::CPipeComm::CBrokenPipeException::~CBrokenPipeException()
inflateSync
Grid::CNotFoundException::CNotFoundException()
common::CThread::CThreadAlreadyRunningException::~CThreadAlreadyRunningException()
z_errmsg
Grid::ICache::CResourceChecksumFailure::ThrowSelf() const
Grid::CCannotCreateCacheFileException::~CCannotCreateCacheFileException()
typeinfo for Grid::CUnknownInternalException
sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>::~_signal_base1()
vtable for CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
typeinfo for CryptoPP::VariableKeyLength<16u, 16u, 32u, 8u>
Grid::CAccount::CImpl::GameStateFromString(char const*)
std::_Rb_tree<unsigned long, unsigned long, std::_Identity<unsigned long>, std::less<unsigned long>, std::allocator<unsigned long>>::_M_erase(std::_Rb_tree_node<unsigned long>*)
vtable for CryptoPP::DigestSignatureSystem
common::g_cszConfigDatabaseSearchDirectoryModuleName
Grid::CSClient::CConnection::UnbindClientServerSessionHandlesIfPresent(unsigned int, unsigned int)
std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>>::_M_erase(std::_Rb_tree_node<int>*)
Grid::CFsCacheGroup::CImpl::Tell(unsigned int)
Grid::CCachePreLoader::CImpl::CReadCompletionHandler::~CReadCompletionHandler()
Grid::CFs::CReadException::Clone() const
BSL::CTime::CTimeToPackNegative::~CTimeToPackNegative()
Grid::CDiscountQualifierRecord::~CDiscountQualifierRecord()
vtable for Grid::CPreauthenticationFailedException
Grid::CClientConnection::HandleRequestEmailAddressVerificationEmail()
Grid::CFsTable::~CFsTable()
Grid::CAppUserDefinedRecord::~CAppUserDefinedRecord()
typeinfo for Grid::CClientAuthenticationTicket
Grid::CAccount::CheckAppCanBePlayed(unsigned int)
Grid::CCacheQueueManager::CCacheQueueManager(unsigned int, unsigned int (*)(void*), void*)
CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
Grid::ICache::CCorruptionException::ThrowSelf() const
std::deque<std::pair<aiocb*, unsigned long>, std::allocator<std::pair<aiocb*, unsigned long>>>::erase(std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long>&, std::pair<aiocb*, unsigned long>*>)
Grid::CSClient::CBlockingReadFileChecksumTableHandler::~CBlockingReadFileChecksumTableHandler()
virtual thunk to CryptoPP::FileStore::~FileStore()
common::CMultiFieldBlob::CFieldAlreadyExistsException::~CFieldAlreadyExistsException()
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::TFieldHeaderOffset const&)
CryptoPP::OID::~OID()
Grid::ICache::CNotFoundException::~CNotFoundException()
common::CMultiFieldBlob::InternalSwapContentsOfBlobAndCache()
Grid::CClientConnection::HandleGetDepotParent()
common::CStringTable::CImpl::GetWideString(unsigned int)
common::CEventLoopThread::~CEventLoopThread()
std::vector<common::CIPCIDR, std::allocator<common::CIPCIDR>>::~vector()
CryptoPP::HashModule::~HashModule()
vtable for BSL::CUnpackedTime::CFromStringInvalidCharacter
common::CBlobKey::CPublicKey::SubKeyExists(std::string const&)
Grid::CAppStatus::GetOrDestroyInstance(bool)
CryptoPP::OID::DEREncode(CryptoPP::BufferedTransformation&) const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, bool>, std::_Select1st<std::pair<unsigned int const, bool>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>::~_Rb_tree()
Grid::CReadFileChecksumFailedException::~CReadFileChecksumFailedException()
non-virtual thunk to Grid::CEngineLoopbackConnection::~CEngineLoopbackConnection()
Grid::CCacheQueueManager::FastUnlock(unsigned int)
Grid::ICache::CCacheKeysNotAvailableException::~CCacheKeysNotAvailableException()
virtual thunk to CryptoPP::Source::Put(unsigned char const*, unsigned int)
common::CLog::DisableGroupName()
Grid::InternalSteamGetSubscriptionExtendedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo name for Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException
common::CObjFunctor<Grid::CSClient::CService>::~CObjFunctor()
Grid::ICommandState::StartDeleteAccount(common::CThreadSafeCountedPtr<Grid::CAccount> const&)
__gnu_cxx::hashtable<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey, common::CUsedAuthenticatorTimestampsCache::CClientUsageInfoKeyHashCompareLessThan, std::_Select1st<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>, std::equal_to<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey>, std::allocator<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>::clear()
WriteFile(void*, void const*, unsigned int, unsigned int*, Overlapped_t*)
Grid::ICommandState::StartCreateCachePreloaders(common::CThreadSafeCountedPtr<Grid::CAccount> const&)
typeinfo name for Grid::CAccountUserRecord
typeinfo for sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>
typeinfo name for common::CSocketCommandAbortedByCallerException
Grid::CSClient::CReadFileFSM::s_RecvSizeOfNextCompressedBlockChunkState
Grid::ICommandState::StartSetUser2(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&)
sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~signal2()
std::vector<unsigned char, std::allocator<unsigned char>>::~vector()
Grid::CAppFilesystemRecord::~CAppFilesystemRecord()
typeinfo for std::iterator<std::random_access_iterator_tag, std::string, int, std::string*, std::string&>
Grid::CSClient::IProtocolFSM::Abort()
Grid::CFs::CMountInUseException::CMountInUseException(common::CErrorCodeException::ESpecificType)
Grid::CAccount::CImpl::Launch(common::CCommandStatusControl&, unsigned int, unsigned int, std::string const&)
CryptoPP::ASN1::rsaEncryption()
Grid::CPreauthenticationFailedException::CPreauthenticationFailedException()
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState::~CRecvSizeOfNextCompressedBlockChunkState()
Grid::IManifestIteratorImpl::IManifestIteratorImpl(Grid::CManifestBin::TDirNodeBin const*, char const*, unsigned int, long)
DW.ref._ZTIN6common13CRuntimeErrorE
std::vector<Grid::CFsCacheGroup::CImpl::CFileHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry>>::~vector()
Grid::CVTSIPAddressCache::GetStoreToBlobRegistryValueName()
vtable for sigslot::signal1<unsigned int, sigslot::multi_threaded_local>
Grid::InternalSteamOpenFile2(unsigned int, char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)
Grid::CReadFileChecksumFailedException::Clone() const
vtable for Grid::CBadCallerErrorStructPtrException
CryptoPP::StringSinkTemplate<std::string>::~StringSinkTemplate()
vtable for Grid::CUserAppAccessRightsRecord::CValidateFieldsException
std::vector<Grid::CFsCacheGroup::CImpl::CFileHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry*, std::vector<Grid::CFsCacheGroup::CImpl::CFileHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry>>>, Grid::CFsCacheGroup::CImpl::CFileHandleEntry const&)
VTT for CryptoPP::StringSource
Grid::CFs::DisableCachePreloading(std::string const&, unsigned int)
Grid::CCacheNone::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*)
common::CBlobRegistry::DeleteSubKey(std::string const&)
common::CStringTable::CImpl::~CImpl()
Grid::ICache::ICache(Grid::ICache::EType, unsigned int, std::string const&, std::string const&)
vtable for Grid::CSClient::CUnacceptableProtocolVersionException
__deregister_frame_info_bases
Grid::CLibraryAlreadyInitializedException::CLibraryAlreadyInitializedException()
vtable for Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException
vtable for ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>
CryptoPP::FileSource::Pump(unsigned long)
Grid::CClientAuthenticationTicket::CValidateFieldsException::~CValidateFieldsException()
typeinfo name for common::CCommandStatusControlAutoTimeout
common::CThread::CThreadAlreadyRunningException::ThrowSelf() const
CryptoPP::BitBucket::~BitBucket()
std::string* std::__copy_backward_normal<false, false>::__copy_b_n<std::string*, std::string*>(std::string*, std::string*, std::string*)
Grid::CResourceListFile::~CResourceListFile()
Grid::CClientRegistry::CreateUserKeyName(std::string const&)
Grid::CDiscountRecord::CValidateFieldsException::~CValidateFieldsException()
WaitForSingleObjectEx(void*, unsigned int, int)
Grid::CAccount::ChangePassword(common::CCommandStatusControl&, std::string const&, std::string const&)
Grid::CSClient::SignalFingerprintMismatch
common::CThreadSafeCountedPtr<Grid::ICache>::CThreadSafeCountedPtr(common::CThreadSafeCountedPtr<Grid::ICache> const&)
typeinfo for CryptoPP::BufferedTransformationWithAutoSignal
CryptoPP::ByteQueue::CurrentSize() const
_Unwind_Find_FDE
CryptoPP::AbstractGroup<CryptoPP::Integer>::~AbstractGroup()
common::CMultiFieldBlob::CBlobException::~CBlobException()
CryptoPP::BufferedTransformation::PutMessageEnd(unsigned char const*, unsigned int, int)
Grid::CUnknownInternalException::ThrowSelf() const
typeinfo for Grid::CBadLaunchConfigException
Grid::CCacheFileFixedChecksum::CCacheFileFixedChecksum(_IO_FILE*)
Grid::ICache::ICacheCompletionHandler::~ICacheCompletionHandler()
CryptoPP::ModularArithmetic::Add(CryptoPP::Integer const&, CryptoPP::Integer const&) const
vtable for common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException
Grid::IManifestIteratorImpl::IsDir() const
Grid::CResourceFile::~CResourceFile()
Grid::CFsTable::CImpl::GetClientFs(unsigned int)
std::basic_string<char, std::char_traits<char>, std::allocator<char>> std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, char const*)
FindClose(void*)
common::CBlobRegistry::~CBlobRegistry()
Grid::CBinaryLogFile::~CBinaryLogFile()
Grid::ICommandState::StartUninstall()
Grid::InternalSteamGetLocalFileCopy(unsigned int, char const*, TSteamError*)
arg::grin_ptr<common::CLogFile::TLogFileImpl>::my_copy_ftn(common::CLogFile::TLogFileImpl const*)
__wrap_open
ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
std::vector<Grid::CCacheDataBlock::TFileInfo, std::allocator<Grid::CCacheDataBlock::TFileInfo>>::~vector()
Grid::CCacheFileFixedFsTree::CCacheFileFixedFsTree(_IO_FILE*, long, bool)
Grid::CEngineConnection::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
ScopeGuardImpl1<int (*)(int), int>::~ScopeGuardImpl1()
Grid::CClientAuthenticationTicket::~CClientAuthenticationTicket()
Grid::CResourceListNodes::IsDone()
common::CEventLoopThread::Finish()
typeinfo for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState
Grid::CAppStatus::BSignaledAppNeedsConversion(unsigned int)
Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException::~CValidateFieldsException()
common::CMultiFieldBlob::index_iterator::~index_iterator()
std::basic_string<char, std::char_traits<char>, std::allocator<char>> std::operator+<char, std::char_traits<char>, std::allocator<char>>(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)
typeinfo for Grid::CEngineDisconnectException
typeinfo for Grid::IReturnBuffer
CryptoPP::SHA256::Transform(unsigned long*, unsigned long const*)
vtable for Grid::CRateLimitRecord::CValidateFieldsException
Grid::CCacheGroup::GetCacheGroupIterator(char const*)
void std::_Destroy_aux<false>::__destroy<Grid::TRequestInfo_t*>(Grid::TRequestInfo_t*, Grid::TRequestInfo_t*)
Grid::CFsTable::CImpl::~CImpl()
ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>::~ObjScopeGuardImpl0()
common::CThreadSafeCountedPtr<Grid::CSClient::CSession>::dispose()
Grid::IManifestIteratorImpl::GetFileId() const
Grid::CStalledCallException::~CStalledCallException()
Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
VTT for CryptoPP::RSAFunction
arg::grin_ptr<common::CLogGroup::TLogGroupImpl>::my_copy_ftn(common::CLogGroup::TLogGroupImpl const*)
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(char const*, Grid::CCacheGroup*)
Grid::CAccountSubscriptionRecord::CValidateFieldsException::Clone() const
common::CThreadSafeCountedPtr<common::CSemaphore>::dispose()
Grid::CClientConnection::HandleGetAppDLCStatus()
vtable for Grid::CAppRecord::CValidateFieldsException
Grid::CSubscriptionAppIdsRecord::~CSubscriptionAppIdsRecord()
Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>::operator()(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) const
typeinfo name for CryptoPP::PublicKeyBaseTemplate<CryptoPP::InvertibleRSAFunction>
common::CRecvException::Clone() const
Grid::CCacheOneFileFixedBlock::CImpl::CreateCacheFile(char const*, unsigned long long)
Grid::CFs::Mount(unsigned int, std::string const&, std::string const&, unsigned int, unsigned int, std::string const&, std::string const&)
BSL::CTime::~CTime()
common::CMultiFieldBlob::InternalRemoveKnownPresentField(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>)
Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::CIndexAppIdToSubscriptionIdsRecord::~CIndexAppIdToSubscriptionIdsRecord()
Grid::CAppIconsRecord::~CAppIconsRecord()
Grid::CAllSubscriptionsRecord::~CAllSubscriptionsRecord()
vtable for BSL::CUnpackedTime::CUnpackedTimeException
typeinfo name for Grid::CFs::CNotFoundException
std::vector<unsigned short, std::allocator<unsigned short>>::reserve(unsigned int)
vtable for ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
vtable for Grid::ICache::ICacheCompletionHandler
typeinfo name for Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
typeinfo name for ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>
typeinfo for arg::generic_reference::counted_ptr_body
Grid::CValidationLogger::Write(std::string const&) const
CryptoPP::AES_PHM_Encryption::MessageEnd(int)
CryptoPP::FixedBlockSize<20u>::BlockSize() const
virtual thunk to CryptoPP::DigestVerifier::~DigestVerifier()
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::~PKCS_DecoratedHashModule()
Grid::CReturnBufferItem<char [256]>::Send(Grid::CPipeComm*)
vtable for common::CLog
typeinfo name for CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT
Grid::CEngineLoopbackConnection::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
Grid::CUnknownReadException::~CUnknownReadException()
Grid::BuildContentServerLoginMessage(common::CWSABUFWrapper&, unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket> const&, unsigned int, unsigned int, unsigned long long, char const*, common::CMallocedBlock*)
typeinfo name for Grid::CAllSubscriptionsRecord::CValidateFieldsException
vtable for Grid::CDerivedSubscribedAppsRecord
Grid::CCacheFileFixedChecksum::Serialize(_IO_FILE*) const
BSL::InitExceptionParams(std::string const&)
common::CCommandStatusControl::GetPercentDone() const
common::CMallocedBlock::~CMallocedBlock()
CryptoPP::Integer::Minus(CryptoPP::Integer const&) const
Grid::CEngineConnection::SeekFile(unsigned int, long, ESteamSeekMethod, TSteamError*)
Grid::CAccount::RemoveAppDependency(unsigned int, unsigned int)
Grid::ICommandState::StartWaitForAppReadyToLaunch(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
arg::generic_reference::counted_ptr_body::~counted_ptr_body()
Grid::CAccount::CImpl::HandleContentServerConnectionLoss(std::string const&, unsigned int)
Grid::CEngineLoopbackConnection::ForceCellId(unsigned int, TSteamError*)
Grid::CResourceListStrings::~CResourceListStrings()
Grid::CEngineLoopbackConnection::ResumeCachePreloading(unsigned int, TSteamError*)
Grid::CSClient::Startup()
Grid::CCachePreLoader::QueueList(std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>&, Grid::ContentPriority::ERequestLevel, bool)
common::CThreadSafeCountedPtr<Grid::CSClient::CSendCompletionDemuxInfo>::dispose()
typeinfo name for common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>
BSL::CTime::Microsecond()
Grid::ICommandState::StartRefreshMinimumFootprint(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, std::string const&)
typeinfo name for CryptoPP::VariableKeyLength<16u, 16u, 32u, 8u>
common::CThreadSafeCountedPtr<Grid::CCellIDManager>::~CThreadSafeCountedPtr()
common::CThread::CImpl::Start(common::CThreadSafeCountedPtr<common::IFunctor> const&, common::CThreadSafeCountedPtr<common::ExceptionCatcherBase> const&, common::CThreadSafeCountedPtr<common::CThread::CImpl> const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::_M_insert_unique(std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo> const&)
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
construction vtable for CryptoPP::Filter-in-CryptoPP::FileSource
common::CThreadLocalRegistrar::UnregisterSelf(common::CThreadLocalBase*)
Grid::CSClient::CreateSession(std::string const&, unsigned int, unsigned int, unsigned int, unsigned int*, std::string*, common::CCommandStatusControl*, unsigned int)
Grid::CDerivedSubscribedAppsRecord::~CDerivedSubscribedAppsRecord()
vtable for CryptoPP::HMAC<CryptoPP::SHA>
Grid::InternalSteamGetAppDependencies(unsigned int, unsigned int, unsigned int*, unsigned int, bool, TSteamError*)
typeinfo name for CryptoPP::AbstractRing<CryptoPP::Integer>
typeinfo for common::CObjFunctor<Grid::CAccount::CImpl>
sigslot::has_slots<sigslot::multi_threaded_local>::~has_slots()
common::CBlobKey::CPublicKey::DeleteSubKeyTree(std::string const&)
Grid::ICacheGroupIteratorImpl::GetTrueCacheLevel()
Grid::CEngineConnection::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
vtable for common::CThreadLocalBase
CryptoPP::DERSequenceEncoder::~DERSequenceEncoder()
CryptoPP::BERSequenceDecoder::~BERSequenceDecoder()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::~_Rb_tree()
inflate
typeinfo for common::CBlobRegistry
arg::typed_reference<Grid::IResourceList>::~typed_reference()
typeinfo name for Grid::ICache::CException
Grid::CAccount::UpdateAccountBillingInfo(common::CCommandStatusControl&, TSteamPaymentCardInfo const*)
vtable for CryptoPP::RijndaelEncryption
Grid::CReadFileChecksumFailedException::ThrowSelf() const
Grid::CLockedCDDBCache::GetCachedAppRecord(unsigned int)
vtable for sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
CryptoPP::PositiveDivide(CryptoPP::Integer&, CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CAllAppsEncryptedPrivateKeysRecord::~CAllAppsEncryptedPrivateKeysRecord()
typeinfo name for Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException
CryptoPP::ByteQueue::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, unsigned long long>, std::_Select1st<std::pair<unsigned long long const, unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long long>>>::~_Rb_tree()
Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState
typeinfo name for ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::CSession>>>*)
Grid::CFsBuffer::Lock()
Grid::CNewValveCDKeyGenerator::~CNewValveCDKeyGenerator()
common::DoSelectedSendThrowOnAbort(int, common::CWSABUFWrapper&, common::CCommandStatusControl*)
Grid::CCacheFileFixedDirectoryEntry::CCacheFileFixedDirectoryEntry()
typeinfo for Grid::CEngineConnection
ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::ExecuteNowIfNotDismissed() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo> const&)
CryptoPP::BufferedTransformationWithAutoSignal::SetAutoSignalPropagation(int)
typeinfo for Grid::CAccountEmptyReceiptRecord
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::push_back(common::CIPAddrPort const&)
Grid::ICommandState::StartWaitForResources(unsigned int, common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, bool, std::vector<std::string, std::allocator<std::string>> const&)
Grid::CCacheQueueManager::MarkOutstanding(unsigned int, unsigned int)
FindFirstFile(char const*, _finddata_t*)
std::auto_ptr<Grid::CCacheDescBlock>::reset(Grid::CCacheDescBlock*)
std::vector<common::CThreadSafeCountedPtr<common::CThread>, std::allocator<common::CThreadSafeCountedPtr<common::CThread>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CThreadSafeCountedPtr<common::CThread>*, std::vector<common::CThreadSafeCountedPtr<common::CThread>, std::allocator<common::CThreadSafeCountedPtr<common::CThread>>>>, common::CThreadSafeCountedPtr<common::CThread> const&)
CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::RSAPublicKeyTemplate(CryptoPP::BufferedTransformation&)
Grid::CEngineConnection::StopLoadingCache(unsigned int, TSteamError*)
Grid::CCacheOneFileFixedBlock::CImpl::LocalReadRequest(Grid::CCacheQueueEntry&)
Grid::CAppLaunchOptionRecord::CValidateFieldsException::~CValidateFieldsException()
CMessageBuffer::MSG_WriteFloat(float)
CryptoPP::OS_RNG_Err::~OS_RNG_Err()
std::vector<Grid::CCacheFileFixedDirectory::TEntry, std::allocator<Grid::CCacheFileFixedDirectory::TEntry>>::reserve(unsigned int)
__wrap_mkdir
void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>)
common::OutputXMLOpenTag(char const*, std::ostream&, unsigned int)
Grid::CClientConnection::HandleChangePassword()
Grid::CPipeComm::Reset()
Grid::CAccountUserPasswordRecord::CValidateFieldsException::~CValidateFieldsException()
_threadEntry(void*)
Grid::CFsCacheGroup::CImpl::CFindHandleEntry::~CFindHandleEntry()
typeinfo name for BSL::CTime::CTimeToPackNegative
Grid::CClientConnection::HandleUpdateAccountBillingInfo()
CryptoPP::Integer::Gcd(CryptoPP::Integer const&, CryptoPP::Integer const&)
common::CConfigDatabase::GetNamespace(std::string const&)
common::CThread::CThreadCreateException::Clone() const
common::CThreadSafeCountedPtr<common::CThread>::dispose()
std::_Rb_tree<sigslot::_signal_base<sigslot::multi_threaded_local>*, sigslot::_signal_base<sigslot::multi_threaded_local>*, std::_Identity<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::less<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::allocator<sigslot::_signal_base<sigslot::multi_threaded_local>*>>::~_Rb_tree()
Grid::CEngineConnection::GetDepotParent(unsigned int, unsigned int*, TSteamError*)
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
Grid::CCacheOneFileFixedBlock::GetPerfStats(TSteamUpdateStats*)
CryptoPP::BERGeneralDecoder::BERGeneralDecoder(CryptoPP::BufferedTransformation&, unsigned char)
Grid::CClientConnection::HandleGetEncryptedUserIDTicket()
typeinfo name for ScopeGuardImpl1<int (*)(int), int>
CryptoPP::RijndaelEncryption::~RijndaelEncryption()
Grid::CCacheOneFileFixedBlock::GetMinimumFootprintFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
Grid::CFs::Getc(unsigned int, unsigned int)
Grid::CAppLaunchOptionsRecord::~CAppLaunchOptionsRecord()
Grid::CSClient::CSession::UnbindHelper()
vtable for common::CEventLoopThread
Grid::CSClient::CReadFileFSM::~CReadFileFSM()
common::ILogFunctor::~ILogFunctor()
Grid::CSubscriptionRecord::CValidateFieldsException::ThrowSelf() const
CryptoPP::CFBEncryption::~CFBEncryption()
typeinfo for CryptoPP::FileSource
CryptoPP::RandomPool::Put(unsigned char const*, unsigned int)
common::CRuntimeError::~CRuntimeError()
CryptoPP::ByteQueue::CleanupUsedNodes()
typeinfo name for Grid::ICache::CCacheKeysNotAvailableException
typeinfo for CryptoPP::IteratedHash<unsigned long, false, 64u>
vtable for Grid::CAccountPrepurchaseReceiptRecord
void std::make_heap<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>)
std::_Vector_base<std::string, std::allocator<std::string>>::_Vector_base(std::allocator<std::string> const&)
CryptoPP::DivideByPower2Mod(unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
CryptoPP::Rijndael::Te1
Grid::CFailedToFindMasterAuthenticationServerException::~CFailedToFindMasterAuthenticationServerException()
Grid::CClientManager::sm_bEngineRunningInThisProcess
typeinfo for Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>
ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>::ExecuteNowIfNotDismissed() const
Grid::CCacheDataBlock::CCacheDataBlock(_IO_FILE*)
common::CExceptionHolder::~CExceptionHolder()
Grid::CEngineLoopbackConnection::IsFileImmediatelyAvailable(char const*, TSteamError*)
CryptoPP::FileSource::~FileSource()
ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>::~ScopeGuardImpl1()
typeinfo for CryptoPP::TrapdoorFunction
Grid::CFsTable::CImpl::QueuePreloadLists(common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader> const&, bool)
construction vtable for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
Grid::CBadLaunchConfigException::CBadLaunchConfigException()
CryptoPP::CBCPaddedDecryptor::~CBCPaddedDecryptor()
arg::generic_reference::generic_reference(void*, void (*)(void*))
__register_frame
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, common::CBlobKey*> const&)
typeinfo name for common::CThreadLocalPtr<Grid::IEngineConnection>
Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState::~CSendRequestState()
common::CFileUtil::IFindFile::~IFindFile()
Grid::CSClient::CSession::CancelTransaction(unsigned int)
ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>> MakeObjGuard<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>(Grid::CSClient::CConnectionPool&, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>)
Grid::CEngineConnection::GetCacheDefaultDirectory(char*, TSteamError*)
common::CScopedWriteLock::~CScopedWriteLock()
Grid::CAccount::CImpl::SetUser2(common::CCommandStatusControl&, std::string const&)
ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>::ExecuteNowIfNotDismissed() const
common::CThreadSafeCountedPtr<common::CThread>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*>(common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*)
typeinfo for CryptoPP::FileStore::OpenErr
Grid::CSClient::CReadFileChecksumTableFSM::CReadFileChecksumTableFSM(Grid::CSClient::CSession&, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo name for Grid::CAppUserDefinedRecord
Grid::CFsCacheGroup::CreateLocalFile(Grid::CSplitPath const&, bool)
Grid::CEngineLoopbackConnection::FlushFile(unsigned int, TSteamError*)
common::CConfigDatabase::Get(std::string const&, int*)
void std::_Destroy_aux<false>::__destroy<common::CThreadSafeCountedPtr<common::CThread>*>(common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*)
Grid::CSClient::CService::CancelPendingCall(unsigned int, unsigned int)
typeinfo name for Grid::CAccountUserPasswordRecord::CValidateFieldsException
Grid::CAllDiscountQualifiersRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CFs::Read(unsigned int, unsigned int, unsigned int, unsigned char*)
vtable for common::CConnResetException
std::_Deque_base<Grid::ICommandState*, std::allocator<Grid::ICommandState*>>::~_Deque_base()
Grid::CSClient::CReadManifestFSM::~CReadManifestFSM()
Grid::CEngineConnection::SetMaxStallCount(unsigned int, TSteamError*)
common::CThreadSafeCountedPtr<common::IEventLoopFunctor>::~CThreadSafeCountedPtr()
ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::~ObjScopeGuardImpl0()
typeinfo name for CryptoPP::StreamCipher
void std::_Destroy_aux<false>::__destroy<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>*>(std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>*, std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>*)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException::ThrowSelf() const
common::CMultiFieldBlob::CUnableToGrowBlobException::Clone() const
CryptoPP::BufferedTransformationWithAutoSignal::GetAutoSignalPropagation() const
DW.ref._ZTISt9exception
Grid::CClientConnection::HandleVerifyEmailAddress()
Grid::CClientConnection::HandleVerifyPassword()
Grid::CAccount::CImpl::s_sPreventDefaultCacheLoading
Grid::CRateLimitRecord::CValidateFieldsException::ThrowSelf() const
common::CAssertObserverGuard<common::CDefaultAssertCatcher>::~CAssertObserverGuard()
typeinfo name for common::CConfigTree
Grid::CLibraryNotInitializedException::Clone() const
ReleaseMutex(void*)
common::CSubKeyIterator::CSubKeyIterator(common::ISubKeyIteratorImpl*)
Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException::~CSignatureCheckFailedException()
std::vector<common::RemoteFileHarvest::EFileType, std::allocator<common::RemoteFileHarvest::EFileType>>::~vector()
construction vtable for CryptoPP::PK_Encryptor-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
inflateSyncPoint
Grid::CClientConnection::HandleStat64()
CreateSemaphoreInternal(char const*, int, bool, bool*)
typeinfo name for Grid::CTicketExpiredException
Grid::CLockedCDDBCache::s_rgchCountryCode
common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException::~CAttemptToUpdateFieldWithRegisteredChildException()
typeinfo name for CryptoPP::FileStore::ReadErr
g_uCacheMaxQueueSize
Grid::CFs::CUnknownException::ThrowSelf() const
Grid::CCacheFileFixedChecksum::~CCacheFileFixedChecksum()
common::CLogContext::~CLogContext()
Grid::CFsBuffer::Read(unsigned int, unsigned char*)
CreateMutex(void*, int, char const*)
CryptoPP::ArrayXorSink::Put(unsigned char)
common::CNamedArgsInsertException::Clone() const
CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
typeinfo name for Grid::CCacheServerSessionMgr
non-virtual thunk to CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
typeinfo name for ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>
typeinfo name for ICmd_
typeinfo for Grid::CCacheFileFixedDirectory
construction vtable for CryptoPP::Store-in-CryptoPP::StringStore
CryptoPP::Exception::~Exception()
typeinfo for Grid::CCacheFileFixedChecksum::CBadFormatVersionException
CryptoPP::HexDecoder::Put(unsigned char)
CryptoPP::RijndaelEncryption::ProcessBlock(unsigned char*) const
common::g_cszBuiltInDefaultConfigDatabase
Grid::CSClient::CSessionLoginFailedException::ThrowSelf() const
typeinfo for ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>
common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>::dispose()
FlushFileBuffers(void*)
typeinfo name for Grid::CClientToASProtocolOutOfDateException
Grid::CSClient::CLogoutFSM::s_RecvSessionLogoutReplyState
Grid::CFsCacheGroup::CImpl::CImpl(unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&)
DW.ref._ZTIN4Grid3CFs18CBadMountExceptionE
Grid::CClientConnection::HandleIsLoggedIn()
common::CEventLoopThread::Start()
Grid::CClientConnection::HandleEnumerateAppIcon()
common::CWSABUFWrapper::ExtractGap(unsigned int)
typeinfo for CryptoPP::AutoSeededRandomPool
Grid::ICacheGroupIteratorImpl::Stat(TSteamElemInfo64*, bool*)
BSL::CUnpackedTime::CFromStringException::~CFromStringException()
Grid::CBufferTable::CBufferTable(Grid::IEngineConnection*)
common::CNamedArgsUndefinedNameException::~CNamedArgsUndefinedNameException()
Grid::CFs::GetCacheFileVersion(unsigned int, unsigned int*)
typeinfo for common::CConfigTree
CryptoPP::Integer::Compare(CryptoPP::Integer const&) const
CryptoPP::IteratedHashBase<unsigned long>::~IteratedHashBase()
std::vector<common::RemoteFileHarvest::EFileType, std::allocator<common::RemoteFileHarvest::EFileType>>::_M_fill_insert(__gnu_cxx::__normal_iterator<common::RemoteFileHarvest::EFileType*, std::vector<common::RemoteFileHarvest::EFileType, std::allocator<common::RemoteFileHarvest::EFileType>>>, unsigned int, common::RemoteFileHarvest::EFileType const&)
Grid::CErrnoErrorException::CErrnoErrorException()
std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheGroup::TCacheGroupEntry*, std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>>>, Grid::CCacheGroup::TCacheGroupEntry const&)
Grid::ICommandState::StartCreateAccount(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, int*)
Grid::CCacheFileFixedDirectory::GetDiskFixedSize()
common::CConnResetException::ThrowSelf() const
vtable for Grid::CSClient::CLogoutFSM
CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool()
sigslot::multi_threaded_local::~multi_threaded_local()
Grid::CSClient::CConnectionPool::CConnectionPool(Grid::CSClient::CService&, common::CLogContext*)
Grid::CSClient::CService::CancelPendingCalls(unsigned int)
typeinfo name for Grid::CContentDescriptionRecord::CValidateFieldsException
Grid::CEngineLoopbackConnection::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
std::vector<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::allocator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>::~vector()
__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>::__normal_iterator(std::string const* const&)
common::CHierarchicalNamedArgs::Set(std::string const&, std::string const&)
typeinfo for CryptoPP::DERSequenceEncoder
Grid::ICache::CInternalErrorException::~CInternalErrorException()
Grid::CFsTable::CImpl::TPreloader::TPreloader(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int, std::string const&, std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>> const&, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>> const&, std::string const&, bool)
Grid::CFs::OpenTmp(unsigned int)
Grid::CEngineConnection::GetCurrentEmailAddress(char*, unsigned int, unsigned int*, TSteamError*)
CryptoPP::CBCPaddedEncryptor::NextPut(unsigned char const*, unsigned int)
Grid::CCacheFileFixedDirectory::Serialize(_IO_FILE*) const
typeinfo for common::CThreadSafeAutoSeededRandomPoolSingleton
CryptoPP::BufferedTransformation::Err::~Err()
common::IRegistry::IRegistry()
common::DoNonBlockingSend(int, common::CWSABUFWrapper&, common::CCommandStatusControl*)
Grid::CCacheServerSessionMgr::~CCacheServerSessionMgr()
vtable for Grid::CClientAgentThread
typeinfo for Grid::CUserAppAccessRightsRecord::CValidateFieldsException
Grid::CManifestBin::hash(std::string const&) const
typeinfo name for Grid::ICacheGroupIteratorImpl::CInvalidCache
std::basic_ostream<char, std::char_traits<char>>& BSL::operator<< <char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, BSL::CUnpackedTime const&)
CryptoPP::ByteQueue::Destroy()
Grid::InternalSteamFlushCache(unsigned int, unsigned int, TSteamError*)
typeinfo name for ScopeGuardImpl1<void (*)(unsigned int), unsigned int>
Grid::CRateLimitRecord::~CRateLimitRecord()
Grid::InternalSteamMountAppFilesystem(unsigned int, unsigned int, unsigned int, TSteamError*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, unsigned int>>*)
vtable for Grid::ICache::CResourceChecksumFailure
std::map<unsigned int, std::string, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::~map()
__gnu_cxx::hashtable<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey, common::CUsedAuthenticatorTimestampsCache::CClientUsageInfoKeyHashCompareLessThan, std::_Select1st<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>, std::equal_to<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey>, std::allocator<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>::resize(unsigned int)
Grid::CEngineLoopbackConnection::LoadFileToApp(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
Grid::CCacheGroup::TCacheGroupEntry::~TCacheGroupEntry()
typeinfo name for Grid::CReturnBufferItem<int>
CryptoPP::FileStore::Err::~Err()
Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
CryptoPP::CBCPaddedDecryptor::CBCPaddedDecryptor(CryptoPP::BlockTransformation const&, unsigned char const*, CryptoPP::BufferedTransformation*)
Grid::CAccount::GetAppUserDefinedInfo(unsigned int, std::string const&, std::string&)
vtable for CryptoPP::IteratedHashBase<unsigned long>
CryptoPP::PK_CryptoSystem::~PK_CryptoSystem()
common::CInUseException::CInUseException()
common::CThreadSafeCountedPtr<Grid::CFsBuffer>::dispose()
Grid::CSClient::CReadManifestFSM::s_RecvDataChunkState
Grid::CClientContentTicket::ValidateFields()
typeinfo name for Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState
Grid::CAccount::CImpl::s_sRootCacheDirValueName
Grid::CSClient::IProtocolFSM::Cancel()
Grid::InternalSteamResumeCachePreloading(unsigned int, unsigned int, TSteamError*)
pKey
sigslot::has_slots<sigslot::multi_threaded_local>::disconnect_all()
typeinfo for common::CMultiFieldBlob::CRequiresDecryptionKeyException
common::CReadWriteThreadMutex::~CReadWriteThreadMutex()
CryptoPP::FileSource::PumpMessages(unsigned int)
Grid::CAccountPendingException::CAccountPendingException()
std::string* std::__copy_backward_aux<std::string*, std::string*>(std::string*, std::string*, std::string*)
common::CBlobRegistry::SetValue(std::string const&, std::string const&, std::string const&)
common::CFileUtil::GetModuleDirPath(std::string const&)
Grid::CEngineLoopbackConnection::DeleteAccount(TSteamError*)
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>::~ObjScopeGuardImpl1()
Grid::CTicketCache::CImpl::BeginAccess(unsigned int)
Grid::IServerAddressCache::IServerAddressCache()
typeinfo name for sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
common::CSocketCommandAbortedByCallerException::ThrowSelf() const
non-virtual thunk to CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
Grid::CAccountPaymentCardInfoRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CReturnBufferData::CReturnBufferData(unsigned int)
Grid::ICache::CCorruptionException::~CCorruptionException()
CryptoPP::PrimeSieve::~PrimeSieve()
std::vector<unsigned short, std::allocator<unsigned short>>::~vector()
Grid::CEngineLoopbackConnection::CloseFile(unsigned int, TSteamError*)
Grid::CEngineLoopbackConnection::FlushCache(unsigned int, TSteamError*)
typeinfo name for Grid::CErrnoErrorException
common::CBlobRegistry::DeleteValueNoThrow(std::string const&, std::string const&)
vtable for Grid::CSClient::CBlockingReadManifestHandler
common::CThread::CImpl::~CImpl()
common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>::~ObjFunctorImpl0()
CryptoPP::BufferedTransformation::Skip(unsigned long)
CryptoPP::AbstractGroup<CryptoPP::Integer>::Accumulate(CryptoPP::Integer&, CryptoPP::Integer const&) const
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
__gnu_cxx::new_allocator<unsigned long>::construct(unsigned long*, unsigned long const&)
Grid::ICommandState::NewHandle(Grid::ICommandState*)
typeinfo name for Grid::ICache::CInvalidResourceOffset
CryptoPP::StringStore::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
Grid::CCacheFileFixedDirectory::GetEntryInChain(unsigned int, unsigned int, Grid::CCacheFileFixedDirectoryEntry*) const
Grid::CSClient::CReadPurgeListFSM::CSendRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::CCacheManifestOnly::CImpl::~CImpl()
vtable for Grid::CAccountUserPasswordsRecord::CValidateFieldsException
typeinfo for Grid::CAppFilesystemsRecord
Grid::CAccount::CImpl::GetUserDefinedAppDependencies(unsigned int)
Grid::CAccountPrepurchaseReceiptRecord::~CAccountPrepurchaseReceiptRecord()
CryptoPP::BERDecodeErr::BERDecodeErr()
Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CSClient::CReadPurgeListFSM::CSendRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
vtable for CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>
vtable for common::CMultiFieldBlob::CRequiresDecryptionKeyException
Grid::ICache::s_Mutex
std::vector<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>::~vector()
Grid::CSClient::IProtocolFSM::AsyncRecv(unsigned int)
Grid::IManifestIteratorImpl::~IManifestIteratorImpl()
common::CMultiFieldBlob::InitializeFromSerializedVersion(unsigned int, unsigned char const*)
common::CLogContextFunctor::~CLogContextFunctor()
CryptoPP::FilterWithBufferedInput::~FilterWithBufferedInput()
Grid::CFsTable::Checkout(std::string const&)
ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>::~ScopeGuardImpl1()
vtable for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
Grid::ICacheGroupIteratorImpl::CancelRead(unsigned int)
CryptoPP::DigestVerifier::~DigestVerifier()
Grid::CEngineLoopbackConnection::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
vtable for Grid::CCacheQueueEntry
void std::__pop_heap<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>)
std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>::~set()
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::swap(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&)
typeinfo for CryptoPP::MD5
inflateInit2_
Grid::CClientConnection::HandleUnmountFilesystem()
Grid::CAccountExternalBillingInfoRecord::~CAccountExternalBillingInfoRecord()
virtual thunk to CryptoPP::MessageQueue::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
Grid::CEngineLoopbackConnection::RefreshMinimumFootprintFiles(unsigned int, TSteamError*)
non-virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
CryptoPP::FilterWithBufferedInput::BlockQueue::GetContigousBlocks(unsigned int&)
Grid::CClientManager::CImpl::AgentMonitorThreadProc()
virtual thunk to CryptoPP::AES_PHM_Encryption::Put(unsigned char)
typeinfo name for Grid::CAccountUserRecord::CValidateFieldsException
sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::emit(ESteamNotificationCallbackEvent, unsigned int)
vtable for Grid::CAllAppsPublicKeysRecord::CValidateFieldsException
std::vector<std::vector<unsigned int, std::allocator<unsigned int>>, std::allocator<std::vector<unsigned int, std::allocator<unsigned int>>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<std::vector<unsigned int, std::allocator<unsigned int>>*, std::vector<std::vector<unsigned int, std::allocator<unsigned int>>, std::allocator<std::vector<unsigned int, std::allocator<unsigned int>>>>>, std::vector<unsigned int, std::allocator<unsigned int>> const&)
Grid::CFileIdChecksumTable::CCorruptSerializedVersionException::Clone() const
typeinfo for common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>
Grid::CCacheOneFileFixedBlock::~CCacheOneFileFixedBlock()
Grid::InternalSteamGetAccountStatus(unsigned int, unsigned int*, TSteamError*)
CAsyncIOManager::CThreadSafeLockableQueue<std::pair<aiocb*, unsigned long>>::~CThreadSafeLockableQueue()
CryptoPP::ArraySink::~ArraySink()
typeinfo name for Grid::ICache::ICacheCompletionHandler
Grid::CBufferTable::Getc(unsigned int)
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob*, std::string const&, unsigned int, unsigned char const*)
vtable for ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>
Grid::CEngineLoopbackConnection::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
typeinfo for Grid::CDiscountQualifierRecord
Grid::CSClient::CService::GetPerfStats(unsigned int, Grid::CSClient::TPerfStats&)
Grid::CClientConnection::HandleChangeOfflineStatus()
Grid::CEngineConnection::DefragCaches(unsigned int, TSteamError*)
Grid::InternalSteamVerifyEmailAddress(unsigned int, char const*, TSteamError*)
Grid::CEngineLoopbackConnection::Stat(char const*, TSteamElemInfo*, TSteamError*)
sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>::emit(std::string const&, unsigned int)
typeinfo name for Grid::ICache::CInternalErrorException
DW.ref._ZTIN6common22CTypeMismatchExceptionE
vtable for Grid::CDiscountQualifierRecord
ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
Grid::CEngineConnection::Unsubscribe(unsigned int, TSteamError*)
Grid::CAccountUserPasswordsRecord::~CAccountUserPasswordsRecord()
CryptoPP::CBCPaddedDecryptor::NextPut(unsigned char const*, unsigned int)
Grid::CClientConnection::HandleOpenFile64()
Grid::CFs::CFileAccessRightsException::CFileAccessRightsException(common::CErrorCodeException::ESpecificType)
typeinfo for common::IEventLoopFunctor
CryptoPP::ArraySink::Put(unsigned char const*, unsigned int)
CryptoPP::AbstractGroup<CryptoPP::Integer>::Subtract(CryptoPP::Integer const&, CryptoPP::Integer const&) const
common::CFileUtil::FileExists(std::string const&)
std::string BSL::HexEncode<std::string>(unsigned char const*, unsigned int, bool)
Grid::CFs::Write(unsigned int, unsigned int, unsigned int, unsigned char const*)
vtable for ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>
virtual thunk to CryptoPP::BERSequenceDecoder::~BERSequenceDecoder()
Grid::InternalSteamUnsubscribe(unsigned int, unsigned int, TSteamError*)
common::CThreadSafeCountedPtr<common::ILogFunctor>::~CThreadSafeCountedPtr()
Grid::CAppRegionSpecificRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CFs::CreateLocalFile(unsigned int, char const*, bool)
Grid::ICommandState::s_ObjectListLock
typeinfo for Grid::CContentDescriptionRecord
Grid::CAccountUsersRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CActivityLog::CAssertObserver::~CAssertObserver()
CryptoPP::FileSink::~FileSink()
Grid::CCacheOneFileFixedBlock::CImpl::CCacheFileLock::~CCacheFileLock()
typeinfo name for Grid::CAllAppsRecord::CValidateFieldsException
typeinfo name for Grid::CUnknownReadException
Grid::CSClient::CConnection::Abort(common::ICloneableException const&)
common::CMultiFieldBlob::CFieldAlreadyExistsException::ThrowSelf() const
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::PK_FixedLengthEncryptor
Grid::InternalSteamUnmountAppFilesystem(unsigned int, unsigned int, TSteamError*)
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::PaddedBlockBitLength() const
Grid::ICacheGroupIteratorImpl::IsEncryptedFile() const
Grid::CCacheBatBlock::~CCacheBatBlock()
Grid::CAccount::CImpl::MakeSureUserLoggedIn()
virtual thunk to CryptoPP::AES_PHM_Decryption::Put(unsigned char)
typeinfo for common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>
Grid::CClientContentTicket::~CClientContentTicket()
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::CBufferTable::Seek(unsigned int, long long, int)
Grid::ICache::CWriteException::~CWriteException()
Grid::ICache::CCacheNeedsDecryptionException::~CCacheNeedsDecryptionException()
Grid::ICache::CBadArgException::~CBadArgException()
Grid::CLauncher::CLauncher(ISteam2Bridge*, Grid::CAccount*, Grid::CAppRecord&, unsigned int, std::string const&, std::string const&, common::CCommandStatusControl&)
inflateInit_
common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>::~ObjFunctorImpl1()
non-virtual thunk to CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
common::CMultiFieldBlob::CBlobException::Clone() const
__gnu_cxx::new_allocator<std::string>::new_allocator(__gnu_cxx::new_allocator<std::string> const&)
Grid::CEngineConnection::TellFile64(unsigned int, TSteamError*)
Grid::CSClient::IBlockingCompletionHandler::IBlockingCompletionHandler(unsigned int)
common::CThread::CException::~CException()
CryptoPP::IteratedHash<unsigned long, true, 64u>::TruncatedFinal(unsigned char*, unsigned int)
typeinfo name for CryptoPP::AES_PHM_Encryption
Grid::ICache::ValidateCache(common::CCommandStatusControl*, Grid::ICacheCallback*)
Grid::CAppRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CFsCacheGroup::SeekFromCurrent(unsigned int, long long)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::~_Rb_tree()
vtable for common::CMultiFieldBlob::CFieldAlreadyExistsException
typeinfo name for CryptoPP::ArraySink
Grid::CCachePreLoader::AllowManifestIteration(bool)
Grid::CSClient::CBlockingLogoutCompletionHandler::~CBlockingLogoutCompletionHandler()
CryptoPP::CFBEncryption::ProcessString(unsigned char*, unsigned int)
CryptoPP::Integer::MinEncodedSize(CryptoPP::Integer::Signedness) const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState::~CRecvDataChunkState()
CryptoPP::BufferedTransformation::ChannelPut(std::string const&, unsigned char const*, unsigned int)
vtable for CryptoPP::CBCPaddedEncryptor
Grid::InternalSteamGetAppPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)
Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CCacheNone::~CCacheNone()
Grid::CSClient::CConnection::~CConnection()
CryptoPP::SHA::Init()
Grid::CAppVersionInfoRecord::CValidateFieldsException::~CValidateFieldsException()
common::CBlobSubKeyIterator::Advance()
common::ICloneableException::what() const
WaitForEvent(void*, unsigned int)
virtual thunk to CryptoPP::MessageQueue::Put(unsigned char)
void std::_Destroy_aux<false>::__destroy<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*>(common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>*)
typeinfo name for CryptoPP::BufferedTransformationWithAutoSignal
Grid::CClientConnection::HandleGetAppDependencies()
Grid::CCacheNone::GetMinimumFootprintFiles(std::vector<unsigned int, std::allocator<unsigned int>>&)
typeinfo name for common::CExceptionHolder
Grid::CEngineConnection::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
Grid::CEngineLoopbackConnection::EnumerateSubscription(unsigned int, TSteamSubscription*, TSteamError*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo> const&)
typeinfo for common::CMultiFieldBlob::CInvalidSerializedBlobException
CryptoPP::PrimeSieve::DoSieve()
Grid::ICommandState::DeallocateHandle(unsigned int, bool)
typeinfo name for common::CInUseException
CryptoPP::CRT(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&)
common::CThreadSafeCountedPtr<common::IEventLoopFunctor>::~CThreadSafeCountedPtr()
Grid::CBadLaunchConfigException::CBadLaunchConfigException()
Grid::CSClient::ICompletionHandler::CompleteLogout(common::ICloneableException const*, unsigned int)
common::CExceptionHolder::Caught(common::ICloneableException const&)
Grid::CManifestFormatException::~CManifestFormatException()
Grid::CEngineNotRunningException::CEngineNotRunningException()
CryptoPP::Integer::Zero()
std::vector<Grid::CCacheFileFixedDirectory::TEntry, std::allocator<Grid::CCacheFileFixedDirectory::TEntry>>::~vector()
typeinfo name for ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>
common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>::dispose()
BSL::CTime::CPackingException::~CPackingException()
Grid::CEngineLoopbackConnection::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
common::CBlobKey::BeginValueIteration()
typeinfo for Grid::CCacheGroup
Grid::CClientConnection::HandleEnumerateSubscriptionDiscountQualifier()
Grid::CAccountPrepurchaseInfoRecord::ValidateFields(std::ostream*, unsigned int)
virtual thunk to CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
Grid::CLibraryNotInitializedException::~CLibraryNotInitializedException()
typeinfo name for common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
std::vector<std::vector<unsigned int, std::allocator<unsigned int>>, std::allocator<std::vector<unsigned int, std::allocator<unsigned int>>>>::reserve(unsigned int)
Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState::~CRecvNextCompressedBlockChunkState()
ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>::~ObjScopeGuardImpl0()
Grid::CSClient::CSession::CSession(unsigned int, std::string const&, unsigned int, unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&, Grid::CSClient::CConnectionPool&, Grid::CSClient::CService&)
common::CValueDoesNotExistException::~CValueDoesNotExistException()
vtable for common::CObjFunctor<Grid::CSClient::CConnection>
vtable for Grid::CFileIdChecksumTable::CException
__wrap_realpath
Grid::CAccount::CImpl::s_AccountRecordRefreshPeriodHours
inflate_codes_free
SteamAPI_RegisterCallback
typeinfo for common::IKey
Grid::CFs::CCannotWriteNonUserConfigFile::Clone() const
vtable for common::CPeerGracefullyClosedConnectionCommException
vtable for Grid::CSClient::CSessionDestroyedException
Grid::CSubscriptionAppIdsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CActivityLog::CreateNewGroup(char const*)
typeinfo name for Grid::CAppFilesystemRecord
common::DoBlockingReceive(int, common::CWSABUFWrapper&)
typeinfo for Grid::ICache::CCacheKeysNotAvailableException
typeinfo name for CryptoPP::PK_FixedLengthCryptoSystem
Grid::InternalSteamTellFile64(unsigned int, unsigned int, TSteamError*)
Grid::IReturnBuffer::~IReturnBuffer()
Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CFailedToFindMasterAuthenticationServerException
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~CryptoSystemBaseTemplate()
Grid::InternalSteamIsFileNeededByCache(unsigned int, unsigned int, char const*, unsigned long long, TSteamError*)
CBlockingUDPSocket::~CBlockingUDPSocket()
typeinfo name for Grid::CAuthenticationServerIsNotMasterException
common::ExtractNext(unsigned int*, unsigned char**, unsigned char*)
Grid::CSClient::CConnection::WinSockSendCompletionRoutine(unsigned int, unsigned int, Overlapped_t*, unsigned int)
Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException::Clone() const
common::CMultiFieldBlob::index_iterator::~index_iterator()
Grid::CEngineConnection::IsAccountNameInUse(char const*, int*, TSteamError*)
Grid::CCacheQueueEntry::~CCacheQueueEntry()
Grid::CFsTable::EnablePreloader(std::string const&, unsigned int)
vtable for Grid::CAccountUserRecord::CValidateFieldsException
typeinfo for Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState
Grid::CAccount::CImpl::s_sSerializedStrippedDownAccountRecordValueName
CloseEvent(void*)
typeinfo for ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>
Grid::CSClient::CService::GetPerfStats(Grid::CSClient::TPerfStats&)
Grid::CSClient::CReadFileChecksumTableFSM::DoAbort(common::ICloneableException const&)
Grid::GeneralDirectoryServerCommands::FindAllVCDSValidateNewValveCDKeyNetIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
Grid::CAccount::CImpl::CMInterfaceInit()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>>::~_Rb_tree()
std::vector<Grid::CFsTable::CImpl::TAppLock, std::allocator<Grid::CFsTable::CImpl::TAppLock>>::~vector()
Grid::CSClient::IProtocolState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
Grid::CFs::CException::~CException()
Grid::ICache::CInvalidResourceOffset::~CInvalidResourceOffset()
Grid::CPipeComm::~CPipeComm()
Grid::CFsCacheGroup::CImpl::FindNext(unsigned int, TSteamElemInfo64*)
Grid::CLocalClockSkewException::ThrowSelf() const
typeinfo for Grid::CSClient::CReadManifestFSM
typeinfo for Grid::CAuthenticationServerIsNotMasterException
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState::~CRecvSessionLoginReplyArgsState()
CryptoPP::Integer::InverseMod(unsigned long) const
Grid::CSClient::SignalServerConnectionLost
common::CThreadSafeAutoSeededRandomPoolSingleton::GenerateBlock(unsigned char*, unsigned int)
vtable for Grid::CAppRegionSpecificRecord
Grid::CSClient::IBlockingCompletionHandler::~IBlockingCompletionHandler()
common::CBlobValueIterator::~CBlobValueIterator()
Grid::CFsCacheGroup::CImpl::Putc(int, unsigned int)
typeinfo name for Grid::CSClient::IProtocolFSM
Grid::CLauncher::CImpl::~CImpl()
typeinfo for Grid::CContentException
common::CThreadLocalBase::~CThreadLocalBase()
common::CFileUtil::IsAbsolutePath(std::string const&)
Grid::CSClient::IProtocolFSM::Start()
common::CCountedPtr<Grid::IEngineConnection>::dispose()
DW.ref._ZTIN6common38CSocketCommandAbortedByCallerExceptionE
typeinfo for Grid::CFs::CAppHasNoCacheFileException
typeinfo for Grid::CSClient::CReadFileFSM::CRecvInitialReplyState
DW.ref._ZTIN4Grid24CLocalClockSkewExceptionE
Grid::CCellIDManager::CCellIDManager()
Grid::CSClient::CSession::Send(Grid::CSClient::IProtocolFSM*)
vtable for common::CFindFile
common::CThreadLocalPtr<Grid::IEngineConnection>::~CThreadLocalPtr()
typeinfo name for common::CFindFile
typeinfo name for Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState
Grid::CSClient::CSession::GetPerfStats(Grid::CSClient::TPerfStats&)
typeinfo for Grid::CAllAppsRecord
Grid::CShippingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
common::CRecvException::ThrowSelf() const
vtable for ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>
Grid::CClientConnection::HandleGetCurrentEmailAddress()
Grid::CEngineLoopbackConnection::MoveApp(unsigned int, char const*, TSteamError*)
Grid::CEngineLoopbackConnection::UnmountAppFilesystem(unsigned int, TSteamError*)
CryptoPP::AbstractGroup<CryptoPP::Integer>::Double(CryptoPP::Integer const&) const
Grid::CStalledCallException::~CStalledCallException()
typeinfo for Grid::CAccountPrepurchaseReceiptRecord
Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException::~CValidateFieldsException()
common::CThreadSafeCountedPtr<Grid::CClientContentTicket>::operator=(common::CThreadSafeCountedPtr<Grid::CClientContentTicket> const&)
typeinfo name for Grid::CBadApiArgumentException
Grid::CResourceListStrings::~CResourceListStrings()
common::CBlobRegistry::CImpl::Reset()
vtable for Grid::CIndexAppIdToSubscriptionIdsRecord
Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::ICache::CCacheNeedsDecryptionException::ThrowSelf() const
__wrap___xstat64
Grid::InternalSteamGetUser(unsigned int, char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
common::CFileUtil::IsDirEmpty(std::string const&)
BSL::CTime::Hour()
CAppSystem::Init()
CryptoPP::HMAC<CryptoPP::SHA>::~HMAC()
common::CDefaultAssertCatcher::Instance()
CryptoPP::RSAFunction::RSAFunction(CryptoPP::BufferedTransformation&)
Grid::CSClient::CReadFileFSM::s_SendRequestState
Grid::CAppRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CUnknownInternalException::~CUnknownInternalException()
CMessageBuffer::MSG_WriteLong(int)
std::_Vector_base<std::string, std::allocator<std::string>>::_M_get_Tp_allocator()
typeinfo name for Grid::CFs::CBadHandleException
Grid::CTicketCache::CImpl::RemoveCurrentTicket(unsigned int, common::CIPAddrPort const*)
vtable for CryptoPP::FileSink
BSL::CException::~CException()
Grid::CCacheDataBlock::CCacheDataBlock(_IO_FILE*)
Grid::CCachePreLoader::SignalAppDownloading
Grid::CFsTable::NewMount(common::CThreadSafeCountedPtr<Grid::ICache> const&, std::string const&, unsigned int, unsigned int, std::string const&)
vtable for common::CCommandStatusControl
ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>::~ObjScopeGuardImpl1()
typeinfo name for Grid::CFsTable::CImpl
typeinfo for CryptoPP::CFBDecryption
CryptoPP::Integer::One()
Grid::CEngineLoopbackConnection::RemoveAppDependency(unsigned int, unsigned int, TSteamError*)
Grid::CFs::CreatePreloader(std::string const&, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&, bool, common::CCommandStatusControl*, bool, unsigned int, bool)
Grid::CAppVersionsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::ICache::CCorruptionException::Clone() const
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob*, unsigned int, unsigned int, unsigned char const*)
typeinfo for sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>
vtable for CryptoPP::InvertibleRSAFunction
typeinfo for Grid::CFsTable::CImpl
typeinfo name for Grid::CUserAppAccessRightsRecord::CValidateFieldsException
Grid::CTicketCache::IsUserPassphraseCachedInRegistry() const
typeinfo for Grid::CAppStatus
Grid::CCacheBatBlock::CCacheBatBlock(_IO_FILE*)
typeinfo name for Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler
Grid::CEngineConnection::GetCurrentCellID(unsigned int*, unsigned int*, TSteamError*)
typeinfo name for ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>
vtable for CryptoPP::CFBEncryption
typeinfo for CryptoPP::IteratedHashBase<unsigned long>
Grid::CEngineLoopbackConnection::GetAppUserDefinedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
TPreloaderInfo* std::__uninitialized_copy<false>::uninitialized_copy<TPreloaderInfo*, TPreloaderInfo*>(TPreloaderInfo*, TPreloaderInfo*, TPreloaderInfo*)
CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>::MaxUnpaddedLength(unsigned int) const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, bool>, std::_Select1st<std::pair<unsigned int const, bool>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned int const, bool>> const*, std::_Rb_tree_node<std::pair<unsigned int const, bool>>*)
common::CMultiFieldBlob::CPreprocessingFailedException::~CPreprocessingFailedException()
common::CThreadSafeCountedPtr<common::IValueIteratorImpl>::dispose()
Grid::CSClient::SignalNewSponsorUrl
common::CSubKeyIterator::operator++()
common::CRecvException::~CRecvException()
typeinfo for CryptoPP::DigestSignatureSystem
Grid::CAllDiscountsRecord::~CAllDiscountsRecord()
vtable for common::IRegistry
Grid::CAccountUsersRecord::~CAccountUsersRecord()
arg::generic_reference::increment_strong_references() const
typeinfo for CryptoPP::FileStore::Err
std::vector<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>, std::allocator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>::~vector()
common::CNamedArgs::GetAliasName(std::string const&)
Grid::CAccount::CImpl::IfNoAccountRecordCachedThenAttemptToReadFromBlobFile()
vtable for ScopeGuardImpl1<bool (*)(std::string const&), char const*>
typeinfo for Grid::CAppRegionSpecificRecord
typeinfo name for Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState
std::string std::stringize<unsigned short>(unsigned short)
CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>::Unpad(unsigned char const*, unsigned int, unsigned char*) const
CryptoPP::Integer::InverseMod(CryptoPP::Integer const&) const
Grid::CSClient::CReadPurgeListFSM::CReadPurgeListFSM(Grid::CSClient::CSession&, unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CBlobKey::Cleanup()
CallbackMgr_RegisterInterfaceFuncs(void*)
Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException::Clone() const
typeinfo name for Grid::CNotLoggedInException
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
std::string* std::uninitialized_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
Grid::CSClient::CLoginFSM::~CLoginFSM()
CryptoPP::IteratedHash<unsigned long, true, 64u>::HashBlock(unsigned long const*)
std::vector<common::CIPCIDR, std::allocator<common::CIPCIDR>>::~vector()
vtable for common::CThreadLocalPtr<Grid::IEngineConnection>
vtable for CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>
unsigned long* std::__uninitialized_copy_aux<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*, std::__true_type)
Grid::CCacheServerSessionMgr::ReadVersionChangeFileIdPurgeList(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CAccountUserRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
typeinfo name for CryptoPP::DigestSignatureSystem
Grid::InternalSteamHintResourceNeed(unsigned int, unsigned int, char const*, int, TSteamError*)
Grid::CSClient::CConnectionPool::Connect(std::string const&, unsigned int, unsigned int, unsigned int, common::CCommandStatusControl*, common::CIPAddrPort&)
ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>::ExecuteNowIfNotDismissed() const
typeinfo for common::CCommandStatusControlAutoTimeoutIfStalled
CryptoPP::FileSink::Err::~Err()
Grid::InternalSteamEnumerateAppLaunchOption(unsigned int, unsigned int, unsigned int, TSteamAppLaunchOption*, TSteamError*)
common::CBlobKey::CPublicKey::GetValue(std::string const&, std::string&)
common::IAssertObserver::~IAssertObserver()
virtual thunk to CryptoPP::Source::~Source()
common::CThreadSafeCountedPtr<Grid::CActivityLog>::~CThreadSafeCountedPtr()
Grid::CAppStatus::GetAppUpdateStats(unsigned int, unsigned long long&, unsigned long long&, bool&, bool&)
typeinfo for Grid::CCacheFileFixedFsTree::CBadFormatVersionException
CryptoPP::DigestSignatureSystem::~DigestSignatureSystem()
CryptoPP::MessageQueue::Put(unsigned char const*, unsigned int)
CryptoPP::MD5::~MD5()
construction vtable for CryptoPP::PK_FixedLengthDecryptor-in-CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CLockedCDDBCache::BAppExists(unsigned int)
Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
DW.ref._ZTIN4Grid6ICache20CCorruptionExceptionE
Grid::CClientConnection::HandleIsFileNeededByCache()
ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::ExecuteNowIfNotDismissed() const
typeinfo for Grid::CAppLaunchOptionRecord::CValidateFieldsException
Grid::CReturnBufferData::~CReturnBufferData()
common::CValueIterator::~CValueIterator()
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::MultiplicativeInverse(CryptoPP::Integer const&) const
non-virtual thunk to CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
CryptoPP::Exception::~Exception()
Grid::CClientConnection::HandleGetSponsorUrl()
common::CConnectException::Clone() const
typeinfo name for Grid::CEngineConnection
vtable for CryptoPP::StreamCipher
typeinfo name for Grid::CCacheFileFixedChecksum
Grid::CFs::GetSize(unsigned int, unsigned int)
Grid::CAccount::CImpl::StartCacheLoadingSubscribedAppsOnLoginOrSetUser(common::CCommandStatusControl*)
CryptoPP::IteratedHash<unsigned long, false, 64u>::~IteratedHash()
Grid::CCacheServerSessionMgr::CancelPendingCall(unsigned int, unsigned int)
CryptoPP::FeedBackMode::~FeedBackMode()
common::CThreadSafeCountedPtr<Grid::CCSERServerAddressCache>::dispose()
vtable for Grid::CManifestReadException
vtable for arg::typed_reference<Grid::IResourceList>
Grid::InternalSteamGetSubscriptionStats(unsigned int, TSteamSubscriptionStats*, TSteamError*)
CryptoPP::SecBlock<unsigned char>::~SecBlock()
std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long>&, std::pair<aiocb*, unsigned long>*> std::copy<std::pair<aiocb*, unsigned long>>(std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long> const&, std::pair<aiocb*, unsigned long> const*>, std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long> const&, std::pair<aiocb*, unsigned long> const*>, std::_Deque_iterator<std::pair<aiocb*, unsigned long>, std::pair<aiocb*, unsigned long>&, std::pair<aiocb*, unsigned long>*>)
vtable for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>
typeinfo for Grid::CAppFilesystemRecord
vtable for Grid::CAccountIsDisabledException
Grid::CAppStatus::SetAppDLCUninstalled(unsigned int, unsigned int)
Grid::CCacheOneFileFixedBlock::CImpl::CalcDataStart(unsigned int, unsigned int, unsigned int, unsigned int)
ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>::~ScopeGuardImpl2()
typeinfo for sigslot::multi_threaded_local
vtable for Grid::CCacheOneFileFixedBlock
typeinfo name for common::CThreadLocalPtr<std::string>
Grid::IClientConnection::~IClientConnection()
CryptoPP::Exception::what() const
vtable for Grid::CReturnBufferItem<TSteamUpdateStats>
typeinfo for CryptoPP::FixedBlockSize<16u>
common::CGetTokensException::Clone() const
Grid::CAppIconsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CPipeComm::CBrokenPipeException::ThrowSelf() const
CryptoPP::ModularArithmetic::ConvertIn(CryptoPP::Integer const&) const
CryptoPP::Integer::operator>>=(unsigned int)
Grid::CSClient::RequestLatestContentDescriptionDB(unsigned char*, common::CMallocedBlock*, bool, common::CCommandStatusControl*)
CryptoPP::CFBDecryption::~CFBDecryption()
typeinfo name for common::CMultiFieldBlob::CInvalidMemoryMappedFileException
void std::_Destroy_aux<false>::__destroy<Grid::TPreloaderCacheInfo*>(Grid::TPreloaderCacheInfo*, Grid::TPreloaderCacheInfo*)
void std::__introsort_loop<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int)
Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException::Clone() const
typeinfo for common::CBlobException
Grid::CAppRegionRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::StringStore::~StringStore()
sigslot::multi_threaded_local::~multi_threaded_local()
typeinfo for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>
typeinfo name for CryptoPP::RandomPool
CryptoPP::MD5::vTransform(unsigned long const*)
Grid::CSClient::CReadManifestFSM::CRecvDataChunkState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
typeinfo for Grid::CAllAppsPublicKeysRecord::CValidateFieldsException
Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException::~CValidateFieldsException()
ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>(Grid::CSClient::CSession&, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int)
common::CNamedArgsInsertException::~CNamedArgsInsertException()
Grid::CEngineConnection::RefreshLogin(char const*, int, TSteamError*)
Grid::IManifestIteratorImpl::IsNocacheFile() const
typeinfo name for Grid::CAccountPendingException
CryptoPP::Integer::BERDecode(CryptoPP::BufferedTransformation&)
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, common::CIPAddrPort const&)
Grid::CClientConnection::HandleRequestAccountsByEmailAddressEmail()
common::CFileUtil::RemoveANode(std::string const&)
Grid::ICache::CFingerPrintDoesNotMatchException::~CFingerPrintDoesNotMatchException()
Grid::CEngineConnection::ReadFile(void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::ICacheGroupIteratorImpl::AddFileChunkToCache(void const*, unsigned long long, unsigned long long)
ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
Grid::ICacheGroupIteratorImpl::Read(unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long, unsigned int)
Grid::CFsTable::IMountedCache::~IMountedCache()
arg::generic_reference::generic_reference(arg::generic_reference const&)
CryptoPP::MontgomeryRepresentation::SimultaneousExponentiate(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
common::CConfigTree::CConfigTree()
Grid::ICache::~ICache()
typeinfo name for Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState
common::CLogGroup::~CLogGroup()
std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>::~pair()
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>>::~map()
Grid::CCacheOneFileFixedBlock::CImpl::AddFileToCache(char const*, unsigned char*, unsigned char*, unsigned int, Grid::CCacheQueueEntry::TFileReqEntry const&, unsigned int, bool&)
Grid::CAppStatus::SetSignaledAppNeedsConversion(unsigned int)
Grid::CFs::CMountInUseException::~CMountInUseException()
Grid::CEngineLoopbackConnection::GetUser(char*, unsigned int, unsigned int*, TSteamGlobalUserID*, TSteamError*)
sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::duplicate(sigslot::has_slots<sigslot::multi_threaded_local>*)
common::CMallocedBlock::CMallocedBlock(unsigned int)
Grid::InternalSteamGetSubscriptionPurchaseCountry(unsigned int, unsigned int, char*, unsigned int, int*, TSteamError*)
Grid::CFs::GetSponsorUrl(unsigned int)
Grid::CCacheExceptionTranslator::CCacheExceptionTranslator(char const*)
vtable for CryptoPP::ArraySink
Grid::ICache::CBadArgException::~CBadArgException()
common::CValue::~CValue()
Grid::InternalSteamGenerateSuggestedAccountNames(unsigned int, char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState
Grid::CFs::CSeekException::CSeekException(common::CErrorCodeException::ESpecificType)
CryptoPP::SHA::~SHA()
Grid::CFs::CFileAccessRightsException::Clone() const
Grid::CEngineConnection::IsCacheLoadingEnabled(unsigned int, int*, TSteamError*)
Grid::ICommandState::StartMoveApp(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, std::string const&)
Grid::CFs::CCannotWriteNonUserConfigFile::~CCannotWriteNonUserConfigFile()
typeinfo for Grid::CSClient::CUnacceptableProtocolVersionException
vtable for Grid::CAccountSubscriptionsBillingInfoRecord
std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> const&)
Grid::CFileIdChecksumTable::CCorruptSerializedVersionException::ThrowSelf() const
BSL::CTimePrecisionInvalid::DefaultMessage() const
typeinfo name for Grid::CClientAuthenticationTicket
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo> const&)
typeinfo for Grid::CAppUserDefinedRecord
Grid::InternalSteamGetAppUserDefinedInfo(unsigned int, unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo name for Grid::CClientManager
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~CryptoSystemBaseTemplate()
std::auto_ptr<Grid::CFileIdChecksumTable>::~auto_ptr()
Grid::CContentDescriptionRecord::ValidateFields(bool, std::ostream*, unsigned int)
Grid::InternalSteamReadFile64(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned long long, TSteamError*)
common::CBadAlloc::CBadAlloc(char const*, bool)
Grid::CClientConnection::HandleUnmountAppFilesystem()
typeinfo name for arg::generic_reference::counted_ptr_body
Grid::CEngineLoopbackConnection::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
Grid::CAppVersionsRecord::CValidateFieldsException::Clone() const
Grid::TAppFilesystemInfo* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*>(Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*)
common::CGetTokensException::~CGetTokensException()
Grid::CCachePreLoader::CImpl::GetNextResource(Grid::CCacheGroupIterator&, unsigned long long*, unsigned long long*, Grid::ContentPriority::ERequestLevel*)
Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
Grid::CPreauthenticationFailedException::ThrowSelf() const
common::CBlobKey::CPublicKey::BeginSubKeyIteration()
Grid::CTicketCache::CImpl::s_sPassphraseEnvName
Grid::CSClient::CReadFileFSM::CSendRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
typeinfo name for Grid::CBadCallHandleException
__gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&)
typeinfo name for Grid::CAccountEmptyReceiptRecord
Grid::ICommandState::StartUnsubscribe(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
typeinfo for Grid::CAccountSubscriptionRecord
Grid::CSubscriptionAppIdsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CLockedCDDBCache::s_vecAppIds
virtual thunk to CryptoPP::PK_FixedLengthDecryptor::~PK_FixedLengthDecryptor()
Grid::CEngineConnection::TellFile(unsigned int, TSteamError*)
CryptoPP::MontgomeryRepresentation::~MontgomeryRepresentation()
Grid::CAppFilesystemsRecord::~CAppFilesystemsRecord()
CMessageBuffer::~CMessageBuffer()
CryptoPP::Source::MessageEnd(int)
VTT for CryptoPP::BERSequenceDecoder
vtable for Grid::ICache::CInternalErrorException
typeinfo for common::CThread::CException
Grid::CEngineConnection::RefreshMinimumFootprintFiles(unsigned int, TSteamError*)
typeinfo for Grid::ICache::CFingerPrintDoesNotMatchException
vtable for ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>
CryptoPP::Store::~Store()
CryptoPP::RSAFunction::~RSAFunction()
sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>::slot_duplicate(sigslot::has_slots<sigslot::multi_threaded_local> const*, sigslot::has_slots<sigslot::multi_threaded_local>*)
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
common::CLog::SetGroupDescDisplayWidth(unsigned int)
Grid::ICache::GetCountFragmentedFiles(unsigned int*, unsigned int*)
common::CThreadSafeCountedPtr<common::CThread::CImpl>::dispose()
std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>::~vector()
Grid::CAppLaunchOptionRecord::CValidateFieldsException::Clone() const
common::CStringTable::CImpl::~CImpl()
vtable for Grid::CCachePreLoader
typeinfo name for Grid::CPreauthenticationFailedException
CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::MaxDigestLength() const
CryptoPP::SHA::vTransform(unsigned long const*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Reduce(CryptoPP::Integer&, CryptoPP::Integer const&) const
Grid::CAccount::RequestEmailAddressVerificationEmail(common::CCommandStatusControl&)
common::CThreadSafeCountedPtr<Grid::ICache>::CThreadSafeCountedPtr(Grid::ICache*)
typeinfo for Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState
vtable for common::CMultiFieldBlob::CUnableToGrowBlobException
__deregister_frame
__frame_state_for
Grid::CValidationLogger::CValidationLogger()
Grid::CCacheFileFixedChecksum::CException::~CException()
Grid::CFs::Dismount(unsigned int, unsigned int)
vtable for common::CThreadSafeAutoSeededRandomPoolSingleton
Grid::CAccount::CImpl::s_sAppCurrentVersionValueName
common::CBlobKey::OpenSubKey(std::string const&)
virtual thunk to CryptoPP::PK_Encryptor::~PK_Encryptor()
Grid::CSClient::CException::ThrowSelf() const
Grid::CTicketCache::RemoveCurrentTicket(unsigned int, common::CIPAddrPort const*)
Grid::CClientConnection::HandleFindFirst()
Grid::CLockedCDDBCache::s_pAllAppsRecord
BSL::CUnpackedTime::FromStr(unsigned char const*, unsigned int)
Grid::CSClient::CConnection::CompleteDataRecv()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TSubscriptionInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TSubscriptionInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TSubscriptionInfo>>>::~_Rb_tree()
typeinfo for common::IRegistry
typeinfo for ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>
Grid::CFs::CEndOfFileException::~CEndOfFileException()
Grid::CAccountPrepurchaseReceiptRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CFs::CBadArgException::~CBadArgException()
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::find(std::string const&) const
FlushViewOfFile(void const*, unsigned int)
std::vector<BSL::CTime, std::allocator<BSL::CTime>>::_M_insert_aux(__gnu_cxx::__normal_iterator<BSL::CTime*, std::vector<BSL::CTime, std::allocator<BSL::CTime>>>, BSL::CTime const&)
Grid::CCacheManifestOnly::CImpl::BIsEncrypted(unsigned int) const
ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>::~ObjScopeGuardImpl0()
Grid::CSClient::CLoginFSM::DoFinish()
CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::RSAPublicKeyTemplate(CryptoPP::BufferedTransformation&)
Grid::CAppRegionRecord::~CAppRegionRecord()
Grid::ICache::CBadArgException::~CBadArgException()
ScopeGuardImpl0<void (*)()>::ExecuteNowIfNotDismissed() const
CryptoPP::Filter::NotifyAttachmentChange()
virtual thunk to CryptoPP::HashFilter::~HashFilter()
Grid::CReturnBufferItem<unsigned int>::~CReturnBufferItem()
Grid::CTicketCache::CImpl::GetCurrentTicket(unsigned int, unsigned int, common::CIPAddrPort const*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const*)
std::_Rb_tree<unsigned long, std::pair<unsigned long const, CAsyncIOManager::data_t*>, std::_Select1st<std::pair<unsigned long const, CAsyncIOManager::data_t*>>, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, CAsyncIOManager::data_t*>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, CAsyncIOManager::data_t*>>*)
Grid::CFsTable::CImpl::~CImpl()
Grid::CAccount::CImpl::RunSteam3Callbacks()
common::GetIPAddrFromString(std::string const&)
Grid::CReturnBufferItem<char [256]>::~CReturnBufferItem()
Grid::CClientConnection::CClientConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*, void*, unsigned int, std::string const&, std::string const&, std::string const&, sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>&)
CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>::Run(void*)
std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>>::~vector()
non-virtual thunk to CryptoPP::InvertibleRSAFunction::CalculateInverse(CryptoPP::Integer const&) const
Grid::CReturnBufferItem<TSteamUpdateStats>::~CReturnBufferItem()
CryptoPP::RijndaelDecryption::ProcessBlock(unsigned char*) const
pchSteamInstancePublicKey
vtable for CryptoPP::AutoSeededRandomPool
Grid::CEngineLoopbackConnection::FindApp(char const*, unsigned int*, TSteamError*)
__gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&)
Grid::CFs::SeekFromStart(unsigned int, unsigned int, unsigned long long)
Grid::CAccount::GetSubscriptionPurchaseCountry(unsigned int, int*)
typeinfo name for Grid::CAppRegionSpecificRecord
common::CEventLoopThread::CException::~CException()
Grid::CSClient::CReadManifestFSM::s_SendRequestState
Grid::ContentServerDirectoryServerCommands::FindBestPublicContentIPAddrPorts(common::CIPAddrPort const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, unsigned short, unsigned int, common::CCommandStatusControl*, bool)
typeinfo name for common::IKey
typeinfo for common::CRecvException
vtable for Grid::CAllSubscriptionsRecord
common::CThreadLocalPtr<Grid::IEngineConnection>::~CThreadLocalPtr()
ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>::ExecuteNowIfNotDismissed() const
void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>)
Grid::CSClient::COperationCancelledException::~COperationCancelledException()
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::CipherTextLength() const
Grid::CFsCacheGroup::CImpl::Read(unsigned int, unsigned int, unsigned char*)
common::CBlobKey::_CreateSubKey(std::string const&, bool)
vtable for CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
Grid::CCacheOneFileFixedBlock::CImpl::CalcNumEntries(Grid::CManifestIterator)
Grid::CEngineConnection::ChangePassword(char const*, char const*, TSteamError*)
CryptoPP::Integer::MultiplicativeInverse() const
Grid::ICache::CResourceChecksumFailure::~CResourceChecksumFailure()
typeinfo name for Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler
CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>::GetCallbackSizeBytes()
Grid::CAppRecord::GetMaxCacheFileSizeMB()
Grid::CDiscountRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for common::CStringTable::CImpl
Grid::CDiscountRecord::~CDiscountRecord()
Grid::CFsBuffer::CheckFilePointer()
Grid::CMasterResourceList::CMasterResourceList(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::string const&)
Grid::CNotSubscribedException::~CNotSubscribedException()
Grid::CAppVersionLaunchOptionIdsRecord::~CAppVersionLaunchOptionIdsRecord()
Grid::CAppStatus::SetAppDependencies(unsigned int, std::vector<unsigned int, std::allocator<unsigned int>> const&)
typeinfo for common::CNamedArgsException
typeinfo for Grid::CReturnBufferItem<TSteamUpdateStats>
std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState*&, Grid::ICommandState**> std::copy_backward<Grid::ICommandState*>(std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState* const&, Grid::ICommandState* const*>, std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState* const&, Grid::ICommandState* const*>, std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState*&, Grid::ICommandState**>)
Grid::CSClient::CBlockingReadManifestHandler::~CBlockingReadManifestHandler()
std::auto_ptr<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs>::~auto_ptr()
typeinfo name for sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CAccount::CImpl::s_sUserDefinedAppDependenciesValueName
Grid::CFileIdChecksumTable::CException::~CException()
std::map<std::string, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::~map()
construction vtable for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
Grid::CBadCallHandleException::~CBadCallHandleException()
Grid::CClientConnection::HandleEnumerateAppVersion()
vtable for Grid::CSClient::CReadManifestFSM::CRecvDataChunkState
Grid::CCacheOneFileFixedBlock::IsEncrypted(Grid::CManifestIterator&) const
common::CMultiFieldBlob::CMultiFieldBlob(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob*, unsigned int, unsigned char const*)
ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>::~ObjScopeGuardImpl0()
typeinfo for Grid::CManifestIterator
common::CWSABUFWrapper::ExtractNext(unsigned short*)
Grid::CResourceListFile::GetNextResource(Grid::CCacheGroupIterator&, std::string&, unsigned long long*, unsigned long long*, Grid::ContentPriority::ERequestLevel*)
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState::~CRecvSessionLoginReplyStatusState()
typeinfo name for ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
Grid::CEngineLoopbackConnection::VerifyPassword(char const*, int*, TSteamError*)
typeinfo for Grid::CFs::CCacheFileMissingException
typeinfo for Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException
typeinfo name for Grid::CLocalClockSkewException
typeinfo name for Grid::CResourceListStrings
typeinfo for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState
Grid::CSClient::CConnection::AddSession(Grid::CSClient::CSession*)
Grid::CResourceListStrings::CResourceListStrings(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::vector<std::string, std::allocator<std::string>>&, Grid::ContentPriority::ERequestLevel)
Grid::CAccount::IsAccountNameInUse(common::CCommandStatusControl&, std::string const&)
Grid::CCacheFileFixedFsTree::s_cu32FormatVersion
virtual thunk to CryptoPP::Filter::~Filter()
Grid::CEngineLoopbackConnection::PauseCachePreloading(unsigned int, TSteamError*)
ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
vtable for CryptoPP::FileStore::OpenErr
typeinfo name for CryptoPP::ByteQueue::Walker
typeinfo for ScopeGuardImpl1<bool (*)(std::string const&), std::string>
vtable for Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler
CryptoPP::ModularArithmetic::IsUnit(CryptoPP::Integer const&) const
common::IFunctor::~IFunctor()
typeinfo for Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler
typeinfo for common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
typeinfo for Grid::CFsTable::IMountedCache
void std::_Destroy<std::string>(std::string*)
typeinfo name for common::CLogContextFunctor
Grid::CClientConnection::HandleSetAppCacheSize()
__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>> std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
vtable for Grid::CFs::CMountInUseException
Grid::CClientBinaryManifestRecord::~CClientBinaryManifestRecord()
typeinfo for Grid::CSClient::CLoginFSM
common::CEventLoopThread::BuildWaitForEvents(std::vector<void*, std::allocator<void*>>&)
vtable for CryptoPP::FileSink::Err
Grid::CEngineLoopbackConnection::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
Grid::CAppRecord::GetMinCacheFileSizeMB()
Grid::CFs::IsAppInUse(std::string const&, unsigned int, unsigned int*)
Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler::~CBlockingReadVersionChangeFileIdPurgeListHandler()
CryptoPP::Multiply(CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
common::CThreadLocalBase::~CThreadLocalBase()
typeinfo name for Grid::ICache::CResourceChecksumFailure
DW.ref._ZTIN6common15CMultiFieldBlob14CBlobExceptionE
DW.ref._ZTIN4Grid8CSClient37CUnacceptableProtocolVersionExceptionE
typeinfo for common::CThread::CThreadCreateException
typeinfo name for Grid::CFs::CEndOfFileException
CryptoPP::MessageQueue::TotalBytesRetrievable() const
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::~EuclideanDomainOf()
std::_Vector_base<std::string, std::allocator<std::string>>::_M_allocate(unsigned int)
Grid::CRateLimitRecord::ValidateFields(std::ostream*, unsigned int)
Grid::InternalSteamSeekFile64(unsigned int, unsigned int, long long, ESteamSeekMethod, TSteamError*)
common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>::~ObjFunctorImpl1()
Grid::CBufferTable::UnlockBuffer(unsigned int)
typeinfo for Grid::CAccountPaymentCardReceiptRecord
Grid::CFsBuffer::~CFsBuffer()
Grid::CFs::Stat(unsigned int, char const*, TSteamElemInfo64*)
Grid::InternalSteamCreateCachePreloaders(unsigned int, TSteamError*)
Grid::CAppStatus::CAppStatus()
Grid::CPipeComm::~CPipeComm()
CryptoPP::ByteQueue::AnyRetrievable() const
BSL::CTime::CTimeToPackOutOfRange::~CTimeToPackOutOfRange()
sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>::slot_disconnect(sigslot::has_slots<sigslot::multi_threaded_local>*)
typeinfo name for ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>
vtable for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState
Grid::CCacheManifestOnly::~CCacheManifestOnly()
virtual thunk to CryptoPP::MessageQueue::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
Grid::IManifestIteratorImpl::GetFileSize() const
typeinfo name for Grid::CFs::CBadMountException
Grid::CCachePreLoader::CImpl::SignalThreadDone()
Grid::CFs::CSeekException::~CSeekException()
typeinfo name for Grid::CAccountExternalBillingInfoRecord
Grid::CAppStatus::GetMountPathsUsedForCache(unsigned int)
unsigned long* std::__copy_backward<true, std::random_access_iterator_tag>::__copy_b<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
common::CMultiFieldBlob::CStringFieldNotTerminatedException::Clone() const
ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
common::CMultiFieldBlob::CFieldDoesNotExistException::Clone() const
std::vector<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::~vector()
Grid::CClientConnection::HandleGetUser()
typeinfo for ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>
CryptoPP::HashModuleWithTruncation::Verify(unsigned char const*)
common::g_cszDefaultConfigDatabaseFileName
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Zero() const
typeinfo name for Grid::CManifestFormatException
typeinfo for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>
Grid::CContentDescriptionRecord::CValidateFieldsException::ThrowSelf() const
Grid::CEngineConnection::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
CryptoPP::Source::~Source()
Grid::CEngineConnection::ChangeAccountName(char const*, char const*, TSteamError*)
std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::~map()
CryptoPP::FileStore::Err::~Err()
vtable for Grid::ICache::CNotFoundException
common::CSubKeyIterator::~CSubKeyIterator()
Grid::CEngineLoopbackConnection::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
std::allocator<unsigned long>::~allocator()
typeinfo name for Grid::CShippingInfoRecord::CValidateFieldsException
Grid::CSClient::CLogoutFSM::~CLogoutFSM()
Grid::CCacheBatBlock::CCacheBatBlock(unsigned int)
VTT for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
_Unwind_SetIP
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>> const*, std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>*)
common::CCommandStatusControl::SetPercentOffset(double, double)
Grid::CSClient::CDownloadRateEstimator::Timer_t::TransferComplete(unsigned int)
Grid::ICache::CInvalidResourceOffset::~CInvalidResourceOffset()
Grid::CNewValveCDKeyGenerator::UnformatFromCDLabel(std::string const&)
common::CRuntimeError::CRuntimeError(unsigned int, char const*, ...)
CryptoPP::AbstractGroup<CryptoPP::Integer>::InversionIsFast() const
typeinfo name for ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
Grid::CCacheDataBlock::WriteDataEntry(unsigned int, unsigned int, unsigned int, unsigned char const*)
Grid::CAccount::Subscribe(common::CCommandStatusControl&, unsigned int, TSteamSubscriptionBillingInfo const*)
Grid::CClientToASProtocolOutOfDateException::~CClientToASProtocolOutOfDateException()
typeinfo name for CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
common::CBlobRegistry::GetValue(std::string const&, std::string const&, std::string&)
CryptoPP::RijndaelEncryption::ProcessBlock(unsigned char const*, unsigned char*) const
virtual thunk to CryptoPP::StringStore::~StringStore()
CryptoPP::Integer::Encode(unsigned char*, unsigned int, CryptoPP::Integer::Signedness) const
Grid::CFs::CConfigException::~CConfigException()
Grid::CClientConnection::HandleGetSubscriptionReceipt()
typeinfo name for Grid::CFs::CFileAccessRightsException
Grid::CFs::CUnknownException::~CUnknownException()
common::CMultiFieldBlob::CUnableToGrowBlobException::ThrowSelf() const
CryptoPP::IteratedHashBase<unsigned long>::PadLastBlock(unsigned int, unsigned char)
Grid::ICommandState::DoNullOperation(bool)
Grid::CSClient::CReadFileChecksumTableFSM::s_RecvRespFlagState
Grid::CCacheOneFileFixedBlock::GetCacheUsageStats(unsigned long long*, unsigned long long*)
Grid::ICache::CAppIdDoesNotMatchException::~CAppIdDoesNotMatchException()
typeinfo name for CryptoPP::BERGeneralDecoder
vtable for CryptoPP::ArrayXorSink
typeinfo for Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException
inflate_fast
VTT for CryptoPP::StringStore
std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int>>::_M_insert_unique(unsigned int const&)
typeinfo for CryptoPP::FileStore
BSL::CTime::CTimeToPackOutOfRange::CTimeToPackOutOfRange(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
Grid::CCacheDataBlock::~CCacheDataBlock()
CryptoPP::WindowSlider::~WindowSlider()
Grid::CClientConnection::HandleStat()
CryptoPP::Integer::Encode(CryptoPP::BufferedTransformation&, unsigned int, CryptoPP::Integer::Signedness) const
Grid::CDerivedSubscribedAppsRecord::ValidateFields(std::ostream*, unsigned int)
common::CDefaultAssertCatcher::Impl::UnregisterAssertObserver(common::IAssertObserver*)
typeinfo name for Grid::CReturnBufferItem<unsigned int>
Grid::CAllSubscriptionsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CEngineConnection::SetAppCacheSize(unsigned int, unsigned int, bool, TSteamError*)
common::CMultiFieldBlob::CRequiresDecryptionKeyException::~CRequiresDecryptionKeyException()
non-virtual thunk to CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
Grid::CSClient::CService::ReadVersionChangeFileIdPurgeList(unsigned int, unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
Grid::CCacheFileFixedChecksum::~CCacheFileFixedChecksum()
Grid::CClientToASProtocolOutOfDateException::~CClientToASProtocolOutOfDateException()
std::vector<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile, std::allocator<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile>>::~vector()
std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>>, common::CThreadSafeCountedPtr<Grid::CClientContentTicket> const&)
sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>::clone()
Grid::CCSERServerAddressCache::GetStoreToBlobRegistryValueName()
VTT for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
std::vector<common::CThreadSafeCountedPtr<common::CThread>, std::allocator<common::CThreadSafeCountedPtr<common::CThread>>>::~vector()
std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::~vector()
Grid::CNewValveCDKeyGenerator::WeakVerify(std::string const&, unsigned int*, unsigned int*, unsigned int*)
typeinfo for Grid::CSubscriptionRecord::CValidateFieldsException
typeinfo for sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
Grid::CSClient::CReadPurgeListFSM::CReadPurgeListFSM(Grid::CSClient::CSession&, unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CCacheManifestOnly::IsEncrypted(Grid::CManifestIterator&) const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
CryptoPP::ByteQueue::Walker::Peek(unsigned char*, unsigned int) const
common::CMultiFieldBlob::~CMultiFieldBlob()
ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
typeinfo for CryptoPP::Sink
Grid::CCacheGroup::InitializeAppStatus(unsigned int, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>*)
CryptoPP::FeedBackMode::FeedBackMode(CryptoPP::BlockTransformation const&, unsigned char const*, int)
BSL::CException::what() const
common::CLogGroup::~CLogGroup()
Grid::CSClient::CDownloadRateEstimator::Timer_t::~Timer_t()
vtable for Grid::CRateLimitRecord
common::CBlobSubKeyIterator::~CBlobSubKeyIterator()
Grid::CBadCallHandleException::Clone() const
Grid::CSubExtendedInfoRecord::~CSubExtendedInfoRecord()
CryptoPP::MD5::~MD5()
Grid::CManifestBin::GetNumOfNodes() const
vtable for Grid::ICache::COpenException
inflateEnd
typeinfo name for Grid::CManifestBin
CryptoPP::FilterWithBufferedInput::FilterWithBufferedInput(unsigned int, unsigned int, unsigned int, CryptoPP::BufferedTransformation*)
std::allocator<std::string>::~allocator()
vtable for Grid::CEngineNotRunningException
Grid::CEngineConnection::EnumerateAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::RSAPrivateKeyTemplate(CryptoPP::BufferedTransformation&)
Grid::CFsTable::CImpl::NewMount(common::CThreadSafeCountedPtr<Grid::ICache> const&, std::string const&, unsigned int, unsigned int, std::string const&)
std::vector<iovec, std::allocator<iovec>>::_M_fill_insert(__gnu_cxx::__normal_iterator<iovec*, std::vector<iovec, std::allocator<iovec>>>, unsigned int, iovec const&)
Grid::InternalSteamGetFlags(unsigned int, char const*, unsigned int*, TSteamError*)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::SimultaneousMultiply(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
Grid::CManifestBinException::CManifestBinException(Grid::CManifestBinException const&)
typeinfo for Grid::CSClient::CException
typeinfo name for common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
typeinfo name for CryptoPP::FixedBlockSize<16u>
Grid::CCacheManifestOnly::GetSponsorUrl()
common::CThreadSafeCountedPtr<Grid::CTicketCache>::dispose()
Grid::CContentDescriptionRecord::~CContentDescriptionRecord()
typeinfo for Grid::CNotSubscribedException
Grid::CCacheOneFileFixedBlock::CCacheOneFileFixedBlock(std::string const&, std::vector<std::string, std::allocator<std::string>> const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int)
Grid::CAppRegionRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CManifestBinException::CManifestBinException(Grid::CManifestBinException const&)
CryptoPP::Filter::~Filter()
Grid::CFsTable::RemoveClientViewOfMount(unsigned int, unsigned int)
typeinfo for BSL::CUnpackedTime::CUnpackedTimeException
Grid::CTicketCache::SignalTGSRejection
typeinfo name for Grid::CSClient::CSessionDestroyedException
TerminateThread(void*, unsigned int)
common::CBlobKey::SetValue(std::string const&, std::string const&)
unsigned long* std::__uninitialized_copy_a<unsigned long*, unsigned long*, unsigned long>(unsigned long*, unsigned long*, unsigned long*, std::allocator<unsigned long>)
vtable for Grid::CFs::CFileAccessRightsException
Grid::CAccountUserRecord::ValidateFields(std::ostream*, unsigned int)
virtual thunk to CryptoPP::HexDecoder::~HexDecoder()
common::CIPAddrPort::CIPAddrPort(std::string const&, unsigned int, unsigned short)
Grid::ICommandState::StartUpdateAccountBillingInfo(common::CThreadSafeCountedPtr<Grid::CAccount> const&, TSteamPaymentCardInfo const*)
vtable for Grid::ICache::CFingerPrintDoesNotMatchException
Grid::CUserAppAccessRightsRecord::ValidateFields(std::ostream*, unsigned int)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CSClient::CSession*>, std::_Select1st<std::pair<unsigned int const, Grid::CSClient::CSession*>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CSClient::CSession*>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CSClient::CSession*>>*)
common::CBlobKey::DeleteValueNoThrow(std::string const&)
Grid::IFsStrategy::~IFsStrategy()
Grid::CEngineConnection::GetAccountStatus(unsigned int*, TSteamError*)
Grid::ICache::CReadException::~CReadException()
Grid::CAccount::CImpl::LoadSubscriptionsFromAccountRecord(bool, bool, bool, common::CCommandStatusControl*)
Grid::CManifestChecksumException::~CManifestChecksumException()
Grid::CTicketCache::CImpl::RenewUserTicket(common::CMallocedBlock*, common::CCommandStatusControl*, unsigned int)
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<int const, LicenseInfo_t> const&)
CryptoPP::BufferedTransformation::NULL_CHANNEL
Grid::CFileIdChecksumTable::GetSerializedVersionWithoutSignature(unsigned int*) const
Grid::CSClient::CSessionDestroyedException::~CSessionDestroyedException()
typeinfo for ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>
Grid::CRateLimitRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for common::CEventLoopThread::CException
Grid::CLauncher::CLauncher(ISteam2Bridge*, Grid::CAccount*, Grid::CAppRecord&, unsigned int, std::string const&, std::string const&, common::CCommandStatusControl&)
typeinfo for common::CConnResetException
CryptoPP::CFBEncryption::ProcessByte(unsigned char)
vtable for common::CGetTokensException
typeinfo for Grid::CCachePreLoader
common::CLog::EnableDate()
Grid::CCacheManifestOnly::CCacheManifestOnly(std::string const&, std::string const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int, bool)
common::CThreadSafeCountedPtr<sigslot::_connection_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>>::dispose()
CryptoPP::PrimeSieve::SieveSingle(std::vector<bool, std::allocator<bool>>&, unsigned long, CryptoPP::Integer const&, CryptoPP::Integer const&, unsigned long)
typeinfo for Grid::CCacheExceptionTranslator
Grid::CFs::CEndOfFileException::CEndOfFileException(unsigned int, common::CErrorCodeException::ESpecificType)
Grid::CManifestBin::MatchParents(char const*, unsigned int) const
vtable for Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState
std::pair<std::string const, common::CNamedArgs>::~pair()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>, std::_Select1st<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CLockedCDDBCache::LocalAppRecord_t>>*)
Grid::CCacheOneFileFixedBlock::CImpl::~CImpl()
CryptoPP::ModularArithmetic::Multiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, unsigned long long>, std::_Select1st<std::pair<unsigned long long const, unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long long>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned long long const, unsigned long long>>*)
Grid::CAccount::IsAppSubscribedSteam3(unsigned int)
vtable for common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
CryptoPP::Integer::IsUnit() const
std::string* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*>(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*)
Grid::CCacheOneFileFixedBlock::CImpl::CCacheLockHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>::operator()(bool) const
__i686.get_pc_thunk.bx
Grid::CSClient::CReadFileChecksumTableFSM::s_RecvDataChunkHeaderState
common::CBlobSubKeyIterator::IsSameAs(common::ISubKeyIteratorImpl*) const
Grid::CSubscriberAccountRecord::GetStrippedDownSerializedVersionForClient(unsigned int*)
CryptoPP::AES_PHM_Encryption::~AES_PHM_Encryption()
zcalloc
UnmapViewOfFile(void const*, unsigned int)
Grid::CEngineLoopbackConnection::GetDepotParent(unsigned int, unsigned int*, TSteamError*)
std::string std::stringize<ESteamError>(ESteamError)
Grid::CCacheFileFixedFsTree::CBadFormatVersionException::ThrowSelf() const
common::CThreadSafeCountedPtr<common::CThread>* std::__uninitialized_copy<false>::uninitialized_copy<common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*>(common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*, common::CThreadSafeCountedPtr<common::CThread>*)
typeinfo for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::~_Rb_tree()
common::CThread::CThreadAlreadyRunningException::~CThreadAlreadyRunningException()
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState::~CRecvSizeOfNextCompressedBlockState()
Grid::CFs::CReadException::~CReadException()
typeinfo for Grid::CCacheFileFixedChecksum::CException
DW.ref._ZTIN6common33CUsedAuthenticatorTimestampsCache26CLoginRateTooHighExceptionE
Grid::CCacheManifestOnly::IsAnyPartPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
WaitNamedPipe(char const*, unsigned int)
std::_Vector_base<std::string, std::allocator<std::string>>::_M_deallocate(std::string*, unsigned int)
CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::DigestSignatureLength() const
typeinfo for Grid::CShippingInfoRecord::CValidateFieldsException
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::_M_insert_unique(std::pair<std::string const, common::CBlobKey*> const&)
Grid::CEngineLoopbackConnection::SizeFile64(unsigned int, TSteamError*)
Grid::CFsTable::CFsTable()
Grid::InternalSteamUnmountFilesystem(unsigned int, unsigned int, TSteamError*)
typeinfo name for CCallbackBase
Grid::CAccountSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
std::vector<common::CIPCIDR, std::allocator<common::CIPCIDR>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CIPCIDR*, std::vector<common::CIPCIDR, std::allocator<common::CIPCIDR>>>, common::CIPCIDR const&)
Grid::CCacheNone::BytesNotPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long, unsigned long long*)
typeinfo for CCallbackBase
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>> const&)
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::MaxPlainTextLength() const
Grid::CEngineConnection::~CEngineConnection()
Grid::CSClient::CDownloadRateEstimator::sm_AggregateTimer
typeinfo for CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
std::_List_base<Grid::IReturnBuffer*, std::allocator<Grid::IReturnBuffer*>>::_M_clear()
vtable for CryptoPP::DERGeneralEncoder
CryptoPP::DERGeneralEncoder::~DERGeneralEncoder()
common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::~ObjFunctorImpl0()
CryptoPP::MessageQueue::GetNextMessage()
vtable for Grid::CSClient::CBlockingLoginCompletionHandler
Grid::CAllAppsPublicKeysRecord::CValidateFieldsException::Clone() const
vtable for Grid::CShippingInfoRecord
typeinfo for Grid::CClientAgentThread
virtual thunk to CryptoPP::Source::Put(unsigned char)
CryptoPP::FileStore::~FileStore()
vtable for Grid::CCannotCreateCacheFileException
Grid::CAccount::GetAppStats(TSteamAppStats*)
Grid::ICache::CCacheKeysNotAvailableException::~CCacheKeysNotAvailableException()
CryptoPP::FilterWithBufferedInput::Put(unsigned char const*, unsigned int)
Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
common::CMultiFieldBlob::CRequiresDecryptionKeyException::Clone() const
Grid::CEngineConnection::FindNext64(unsigned int, TSteamElemInfo64*, TSteamError*)
typeinfo name for common::CConfigDatabase
LoadLibrary(char const*)
_tr_stored_block
Grid::CMutexGuard::CMutexGuard(void*, unsigned int)
Grid::CAccountSubscriptionsBillingInfoRecord::ValidateFields(unsigned char const*, std::ostream*, unsigned int, bool)
Grid::CEngineLoopbackConnection::GetLocalClientVersion(unsigned int*, unsigned int*, TSteamError*)
typeinfo for Grid::CFailedToFindMasterAuthenticationServerException
common::CThread::~CThread()
virtual thunk to CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestSignatureSystemBaseTemplate()
typeinfo for common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>
Grid::CSClient::CConnection::HandleSessionReadyToRecv()
DW.ref._ZTIN6common15CMultiFieldBlob31CRequiresDecryptionKeyExceptionE
std::string BSL::I2STemplate<std::string, unsigned long>(unsigned long, int, int)
std::vector<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>*, std::vector<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>, common::CThreadSafeCountedPtr<common::IEventLoopFunctor> const&)
Grid::CAccount::CImpl::IndicateNewSponsorUrl(std::string const&, unsigned int)
typeinfo name for common::CMultiFieldBlob::CStringFieldNotTerminatedException
common::CLogContext::Write(unsigned int, char const*, ...)
common::CEventLoopThread::CEventLoopThread(std::string const&, common::CThreadSafeCountedPtr<common::IEventLoopFunctor> const&, unsigned int, unsigned int, common::CThreadSafeCountedPtr<common::ILogFunctor> const&, std::pair<common::CThreadSafeCountedPtr<common::IFunctor>, common::CThreadSafeCountedPtr<common::IFunctor>> const&, bool, bool, bool)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>::~ScopeGuardImpl1()
Grid::CActivityLog::~CActivityLog()
void std::__destroy_aux<unsigned long*>(unsigned long*, unsigned long*, std::__true_type)
typeinfo for CryptoPP::StringSource
Grid::CCacheManifestOnly::ValidateCache(common::CCommandStatusControl*, Grid::ICacheCallback*)
typeinfo name for common::CBlobValueIterator
Grid::CSClient::CSession::DownloadRateBlockTransferComplete(unsigned int, unsigned int)
Grid::CActivityLog::CActivityLog(bool, bool, char const*, common::CLogFile::FileMode, common::CLogFile::FileLogMode)
typeinfo for ICmd_
Grid::IManifestIteratorImpl::IsPurgeFile() const
Grid::InternalSteamGetOfflineStatus(unsigned int, TSteamOfflineStatus*, TSteamError*)
Grid::ICache::CWriteException::~CWriteException()
std::vector<_IO_FILE*, std::allocator<_IO_FILE*>>::~vector()
Grid::IManifestIteratorImpl::IManifestIteratorImpl(Grid::IManifestIteratorImpl const&)
Grid::CSClient::CSession::Login()
sigslot::signal1<unsigned int, sigslot::multi_threaded_local>::operator()(unsigned int)
ScopeGuardImpl1<int (*)(int), int>::~ScopeGuardImpl1()
Grid::CFsBuffer::IsBufferedOrTextMode()
Grid::CFsCacheGroup::OpenTmp(char const*)
common::CThreadSafeCountedPtr<Grid::CCacheGroup>::dispose()
vtable for Grid::CFs::CAppHasNoCacheFileException
Grid::CSClient::CConnection::CConnection(unsigned int, common::CIPAddrPort const&, unsigned int, common::CCommandStatusControl*)
Grid::CNoContentServerAvailableException::ThrowSelf() const
Grid::TPreloaderCacheInfo::~TPreloaderCacheInfo()
arg::grin_ptr<common::CConfigDatabase::TImpl>::my_delete_ftn(common::CConfigDatabase::TImpl*)
Grid::CClientConnection::~CClientConnection()
Grid::CCacheOneFileFixedBlock::GetManifestIterator(unsigned int)
Grid::IReturnBuffer::~IReturnBuffer()
Grid::CFsTable::CImpl::CreatePreloader(std::string const&, unsigned int, std::string const&, std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>> const&, std::string const&, bool, bool)
Grid::InternalSteamStat(unsigned int, char const*, TSteamElemInfo*, TSteamError*)
common::CBlobKey::GetValue(std::string const&, unsigned int*)
Grid::CFs::CAppHasNoCacheFileException::~CAppHasNoCacheFileException()
Grid::CCacheFileFixedFsTree::~CCacheFileFixedFsTree()
typeinfo for Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException
typeinfo name for common::IAssertObserver
vtable for Grid::CAllDiscountsRecord
Grid::CClientConnection::HandleGetOfflineStatus()
CryptoPP::Integer::Integer(unsigned char const*, unsigned int, CryptoPP::Integer::Signedness)
typeinfo for Grid::CSubscriptionAppIdsRecord
Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException::Clone() const
vtable for CryptoPP::BERDecodeErr
Grid::ICommandState::StartStopLoadingCache(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
ScopeGuardImpl1<int (*)(int), long>::~ScopeGuardImpl1()
Grid::CBufferTable::ResetElement(unsigned int)
Grid::CFsCacheGroup::Putc(int, unsigned int)
common::CSendException::Clone() const
Grid::CSClient::CSessionLoginFailedException::~CSessionLoginFailedException()
CryptoPP::FileStore::Peek(unsigned char&) const
Overlapped_t::~Overlapped_t()
Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CUnknownReadException::Clone() const
Grid::CCacheDescBlock::CCacheDescBlock(Grid::ICache::EType, unsigned int, unsigned int, unsigned int)
CryptoPP::Integer::DividedBy(CryptoPP::Integer const&) const
Grid::CSClient::CLogoutFSM::CRecvSessionLogoutReplyState::~CRecvSessionLogoutReplyState()
typeinfo for Grid::CClientManager
Grid::InternalSteamWriteFile(unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::ICommandState::StartStartLoadingCache(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
Grid::InternalSteamRefreshMinimumFootprintFiles(unsigned int, unsigned int, TSteamError*)
Grid::CBufferTable::GetSize(unsigned int)
Grid::CClientConnection::HandleMountFilesystem()
std::_List_base<common::CThreadSafeCountedPtr<sigslot::_connection_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>>, std::allocator<common::CThreadSafeCountedPtr<sigslot::_connection_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>>>>::_M_clear()
virtual thunk to CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::DigestSignatureLength() const
DW.ref._ZTIN6common15CMultiFieldBlob31CInvalidSerializedBlobExceptionE
typeinfo name for Grid::CActivityLog
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob::EMemoryOwnership, unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned char const*)
Grid::CCacheQueueManager::CImpl::MarkItemBlockComplete(unsigned int, unsigned int, unsigned int, unsigned int, common::ICloneableException const*)
vtable for CryptoPP::Exception
Grid::CManifestBinException::ThrowSelf() const
Grid::CDiscountQualifierRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAccount::Init()
vtable for Grid::ICache::CBadArgException
CryptoPP::SmallDivisorsTest(CryptoPP::Integer const&)
Grid::CFsBuffer::Tell()
typeinfo for common::CRuntimeError
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>> const&)
common::CThreadSafeCountedPtr<Grid::ICache>::reset(Grid::ICache*)
deflateCopy
vtable for Grid::CFs::CException
Grid::CSubscriptionAppIdsRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CFsCacheGroup::CImpl::FindNextRemote(unsigned int, TSteamElemInfo64*)
Grid::CCacheOneFileFixedBlock::CImpl::GetCacheFileTime(std::string const&)
Grid::CNoContentServerAvailableException::CNoContentServerAvailableException(char const*)
Grid::ICache::CCacheNeedsRepairException::~CCacheNeedsRepairException()
CallbackMgr_RunCallbacks(int, bool)
Grid::CManifestIterator::~CManifestIterator()
CryptoPP::IteratedHash<unsigned long, true, 64u>::~IteratedHash()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::~_Rb_tree()
typeinfo name for ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>
std::_Rb_tree<int, std::pair<int const, CCallbackBase*>, std::_Select1st<std::pair<int const, CCallbackBase*>>, std::less<int>, std::allocator<std::pair<int const, CCallbackBase*>>>::~_Rb_tree()
std::string* std::__copy_backward<false, std::random_access_iterator_tag>::__copy_b<std::string*, std::string*>(std::string*, std::string*, std::string*)
Grid::CEngineLoopbackConnection::IsLoggedIn(int*, TSteamError*)
Grid::ICache::ICacheCompletionHandler::ReadProgress(unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
vtable for Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState
CryptoPP::SHA256::vTransform(unsigned long const*)
typeinfo for Grid::CReturnBufferItem<unsigned int>
CryptoPP::RSAFunction::ApplyFunction(CryptoPP::Integer const&) const
Grid::CCannotCreateCacheFileException::~CCannotCreateCacheFileException()
Grid::CAccount::RefreshLogin(common::CCommandStatusControl&, std::string const&, bool)
construction vtable for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>-in-CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
vtable for Grid::CFs::CBadHandleException
vtable for Grid::CCacheFileFixedChecksum::CException
CryptoPP::IsSmallPrime(CryptoPP::Integer const&)
std::auto_ptr<common::CWin32Event>::~auto_ptr()
CryptoPP::TrapdoorFunction::~TrapdoorFunction()
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
CryptoPP::BufferedTransformation::MessageSeriesEnd(int)
Grid::CFsTable::CImpl::IsUserUsingApp(std::string const&, unsigned int, unsigned int*)
typeinfo for Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
ReleaseSemaphore(void*, int, int*)
typeinfo for common::CPeerGracefullyClosedConnectionCommException
vtable for Grid::CDiscountRecord
vtable for Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException
vtable for Grid::CAccountEmptyReceiptRecord
typeinfo name for Grid::CSClient::CReadManifestFSM::CSendRequestState
Grid::CFs::CNotFoundException::~CNotFoundException()
Grid::CReturnBufferItem<unsigned int>::~CReturnBufferItem()
common::CMultiFieldBlob::SwapNoThrow(common::CMultiFieldBlob&)
Grid::CClientConnection::HandleResumeCachePreloading()
Grid::CEngineConnection::IsSecureComputer(int*, TSteamError*)
typeinfo name for Grid::CClientConnection
std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>>::~vector()
std::vector<Grid::CCacheReplacementLru::TLru16, std::allocator<Grid::CCacheReplacementLru::TLru16>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheReplacementLru::TLru16*, std::vector<Grid::CCacheReplacementLru::TLru16, std::allocator<Grid::CCacheReplacementLru::TLru16>>>, Grid::CCacheReplacementLru::TLru16 const&)
CryptoPP::Rijndael::~Rijndael()
Grid::CClientConnection::HandleRepairOrDecryptCaches()
Grid::CAccountUsersRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CAppRecord::CValidateFieldsException::Clone() const
common::CDefaultAssertCatcher::UnregisterAssertObserver(common::IAssertObserver*)
Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException::ThrowSelf() const
typeinfo for Grid::ICacheGroupIteratorImpl
common::CErrorCodeException::~CErrorCodeException()
Grid::CAppRegionRecord::~CAppRegionRecord()
sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~signal2()
BSL::CTimePrecisionInvalid::~CTimePrecisionInvalid()
Grid::InternalSteamChangeEmailAddress(unsigned int, char const*, TSteamError*)
typeinfo name for Grid::IClientConnection
virtual thunk to CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::PaddedBlockBitLength() const
Grid::CStalledCallException::~CStalledCallException()
CryptoPP::ModularArithmetic::~ModularArithmetic()
Grid::CCachePreLoader::CImpl::CImpl(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int)
typeinfo for CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>
CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestSignatureSystemBaseTemplate()
common::CBlobRegistry::Load(bool, common::LockGuard<common::CFastThreadMutex>&)
std::auto_ptr<Grid::CResourceFile>::~auto_ptr()
Grid::ICache::CCacheNeedsRepairException::~CCacheNeedsRepairException()
typeinfo name for CryptoPP::AES_PHM_Decryption
typeinfo name for CryptoPP::InvertibleTrapdoorFunction
CryptoPP::Rijndael::rcon
Grid::CSClient::CLoginFSM::CLoginFSM(Grid::CSClient::CSession&, std::string const&, unsigned int, unsigned int, Grid::CSClient::CBlockingLoginCompletionHandler&)
Grid::CCacheFileFixedDirectory::UpdateEntry(unsigned int, Grid::CCacheFileFixedDirectoryEntry&)
Grid::CBadCallerErrorStructPtrException::ThrowSelf() const
construction vtable for CryptoPP::Filter-in-CryptoPP::HexEncoder
Grid::CFs::BAppContainsEncryptedFiles(unsigned int)
typeinfo for Grid::CAccountUserPasswordsRecord::CValidateFieldsException
vtable for common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException
common::CThreadSafeCountedPtr<common::IEventLoopFunctor>::dispose()
common::CThreadSafeCountedPtr<Grid::CCellIDManager>::~CThreadSafeCountedPtr()
CryptoPP::Store::NumberOfMessages() const
Grid::CFs::IsFileImmediatelyAvailable(unsigned int, char const*)
typeinfo name for sigslot::signal1<unsigned int, sigslot::multi_threaded_local>
typeinfo for ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Equal(CryptoPP::Integer const&, CryptoPP::Integer const&) const
virtual thunk to CryptoPP::Filter::AttachedTransformation() const
Grid::CSClient::CReadFileFSM::~CReadFileFSM()
Grid::CFsTable::CImpl::TAppLock* std::__uninitialized_copy<false>::uninitialized_copy<Grid::CFsTable::CImpl::TAppLock*, Grid::CFsTable::CImpl::TAppLock*>(Grid::CFsTable::CImpl::TAppLock*, Grid::CFsTable::CImpl::TAppLock*, Grid::CFsTable::CImpl::TAppLock*)
Grid::CCacheManifestOnly::CImpl::Serialize()
CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
typeinfo name for CryptoPP::BufferedTransformation::Err
std::vector<Grid::CCacheFileFixedDirectory::TEntry_mini, std::allocator<Grid::CCacheFileFixedDirectory::TEntry_mini>>::reserve(unsigned int)
vtable for Grid::CLauncher
typeinfo for CryptoPP::PK_FixedLengthEncryptor
arg::generic_reference::get() const
__gnu_cxx::new_allocator<unsigned long>::max_size() const
common::IKey::~IKey()
typeinfo name for Grid::CDerivedSubscribedAppsRecord
std::vector<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile, std::allocator<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile*, std::vector<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile, std::allocator<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile>>>, Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile const&)
typeinfo for Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState
Grid::CIndexAppIdToSubscriptionIdsRecord::~CIndexAppIdToSubscriptionIdsRecord()
ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>::ExecuteNowIfNotDismissed() const
Grid::CAccountUserPasswordsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CAppStatus::CAppStatus()
typeinfo for Grid::CCacheOneFileFixedBlock::CImpl::CCacheLockHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>
Grid::CClientConnection::HandleTellFile()
Grid::CAccount::Uninstall(common::CCommandStatusControl&)
CryptoPP::BERSequenceDecoder::~BERSequenceDecoder()
_FixSlashes(char*)
Grid::CFs::GetAppCacheSize(unsigned int)
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::MessageQueue
Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException::~CValidateFieldsException()
__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>::base() const
Grid::CLockedCDDBCache::s_AllSubscriptionsMap
CryptoPP::FileSource::~FileSource()
Grid::CEngineConnection::EnumerateApp(unsigned int, TSteamApp*, TSteamError*)
ScopeGuardImpl1<int (*)(void*), void*>::ExecuteNowIfNotDismissed() const
CryptoPP::DERGeneralEncoder::DERGeneralEncoder(CryptoPP::DERGeneralEncoder&, unsigned char)
std::string* std::copy_backward<std::string*, std::string*>(std::string*, std::string*, std::string*)
vtable for common::CStringTable::CImpl
std::vector<Grid::CFsCacheGroup::CImpl::CFindHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry>>::~vector()
common::CMultiFieldBlob::CFieldAlreadyExistsException::~CFieldAlreadyExistsException()
CryptoPP::FileStore::ReadErr::~ReadErr()
typeinfo for Grid::CSClient::CReadFileChecksumTableFSM
Grid::CLibraryNotInitializedException::~CLibraryNotInitializedException()
Grid::CEngineConnection::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
CryptoPP::PK_Verifier::~PK_Verifier()
Grid::CCacheOneFileFixedBlock::CImpl::MarkCacheForFixup()
Grid::CFileIdChecksumTable::CException::ThrowSelf() const
CryptoPP::Divide(unsigned long*, unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::~vector()
common::CThreadSafeCountedPtr<common::IRegistry>::~CThreadSafeCountedPtr()
CryptoPP::BufferedTransformation::ChannelFlush(std::string const&, bool, int)
vtable for common::CSocketCommandAbortedByCallerException
Grid::ICache::CException::ThrowSelf() const
std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheQueueEntry::TFileReqEntry*, std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>>, Grid::CCacheQueueEntry::TFileReqEntry const&)
std::vector<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::~vector()
__wrap_opendir
Grid::CEngineConnection::ChangePersonalQA(char const*, char const*, char const*, TSteamError*)
Grid::ConfigServerClientProtocol::GetCurrentBillingFailSafeMode(common::CIPAddrPort const&)
Grid::CSClient::GetSponsorUrl(unsigned int, std::string*)
std::vector<std::string, std::allocator<std::string>>::begin() const
DW.ref._ZTIN4Grid8CSClient26CSessionDestroyedExceptionE
std::_Rb_tree<sigslot::_signal_base<sigslot::multi_threaded_local>*, sigslot::_signal_base<sigslot::multi_threaded_local>*, std::_Identity<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::less<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::allocator<sigslot::_signal_base<sigslot::multi_threaded_local>*>>::~_Rb_tree()
Grid::CEngineLoopbackConnection::Login(char const*, char const*, int, TSteamError*)
Grid::CEngineDisconnectException::CEngineDisconnectException()
Grid::CClientConnection::HandleStartLoadingCache()
_DYNAMIC
std::vector<std::pair<common::RemoteFileHarvest::EFileType, std::string>, std::allocator<std::pair<common::RemoteFileHarvest::EFileType, std::string>>>::~vector()
CryptoPP::Integer::BitCount() const
Grid::CCacheFileFixedChecksum::CException::~CException()
Grid::CFsCacheGroup::CImpl::ResolveMode(char const*)
Grid::CFsTable::CImpl::TPreloader::~TPreloader()
typeinfo for Grid::CAppRecord
typeinfo name for Grid::CFileIdChecksumTable::CCorruptSerializedVersionException
typeinfo name for Grid::CSClient::CBlockingLoginCompletionHandler
typeinfo name for Grid::CNoContentServerAvailableException
Grid::CFsCacheGroup::Stat(Grid::CSplitPath const&, bool, TSteamElemInfo64*)
Grid::CCacheFileFixedDirectory::CCacheFileFixedDirectory(unsigned int)
Grid::CCachePreLoader::CCachePreLoader(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int)
Grid::CAppUserDefinedRecord::~CAppUserDefinedRecord()
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::slot_duplicate(sigslot::has_slots<sigslot::multi_threaded_local> const*, sigslot::has_slots<sigslot::multi_threaded_local>*)
Grid::CFileIdChecksumTable::CException::~CException()
vtable for CryptoPP::TrapdoorFunction
Grid::CEngineLoopbackConnection::OpenTmpFile(TSteamError*)
vtable for Grid::CAppRegionRecord
Grid::InternalSteamBlockingCall(unsigned int, unsigned int, unsigned int, TSteamError*)
ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>::~ScopeGuardImpl1()
vtable for Grid::CAppStatus
vtable for Grid::CManifestBin
std::vector<CryptoPP::WindowSlider, std::allocator<CryptoPP::WindowSlider>>::_M_insert_aux(__gnu_cxx::__normal_iterator<CryptoPP::WindowSlider*, std::vector<CryptoPP::WindowSlider, std::allocator<CryptoPP::WindowSlider>>>, CryptoPP::WindowSlider const&)
__gnu_cxx::new_allocator<std::string>::allocate(unsigned int, void const*)
common::CErrorCodeException::CErrorCodeException(std::string const&, common::CErrorCodeException::ESpecificType, int, int)
inflate_trees_bits
Grid::CFsTable::CImpl::GetPreloader(std::string const&, unsigned int)
typeinfo name for Grid::CSClient::CManifestFingerprintMistatchOnReconnectException
CryptoPP::HashModuleWithTruncation::Final(unsigned char*)
vtable for common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
std::vector<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::allocator<common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>::~vector()
ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>::~ObjScopeGuardImpl0()
Grid::CCacheOneFileFixedBlock::CImpl::SetCacheWriteFlag(bool)
ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>(Grid::CTicketCache&, void (Grid::CTicketCache::*)(unsigned int), unsigned int)
Grid::CFsBuffer::Write(unsigned int, unsigned char const*)
common::StartConnectToServer(common::CIPAddrPort const&, int, common::CIPAddrPort const*)
common::ICloneableException::ICloneableException(char const*, bool)
virtual thunk to CryptoPP::MessageQueue::AnyRetrievable() const
Grid::InternalSteamWaitForResources(unsigned int, unsigned int, bool, char const*, TSteamError*)
typeinfo for CryptoPP::IteratedHash<unsigned long, true, 64u>
CryptoPP::IsStrongProbablePrime(CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::ICache::CMultipleCacheInstanceException::~CMultipleCacheInstanceException()
virtual thunk to CryptoPP::PK_FixedLengthEncryptor::~PK_FixedLengthEncryptor()
common::CRuntimeError::CRuntimeError(unsigned int, char const*, ...)
DW.ref._ZTIN6common18CRegistryExceptionE
Grid::CLauncher::~CLauncher()
vtable for CryptoPP::MD5
CryptoPP::DERGeneralEncoder::DERGeneralEncoder(CryptoPP::DERGeneralEncoder&, unsigned char)
Grid::CCacheBatBlock::GetNextFreeEntry()
Grid::CAppVersionsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAccountPendingException::ThrowSelf() const
Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState::~CSendRequestState()
Grid::CPipeComm::CPipeComm(char const*, unsigned int, unsigned int, unsigned int, bool)
BSL::CTime::CTimeToPackNegative::~CTimeToPackNegative()
Grid::CFileIdChecksumTable::CFileIdChecksumTable(void*, unsigned int)
Grid::CEngineLoopbackConnection::ChangeAccountName(char const*, char const*, TSteamError*)
common::CBlobRegistry::GetValue(std::string const&, std::string const&, void*, unsigned int, unsigned int*)
Grid::CFsBuffer::CFsBuffer(Grid::IEngineConnection*)
Grid::CEngineLoopbackConnection::GetAppDir(unsigned int, char*, TSteamError*)
Grid::CCacheBatBlock::GetDiskFixedSize()
Grid::CAppLaunchOptionRecord::~CAppLaunchOptionRecord()
CAppSystem::QueryInterface(char const*)
CompressionAlgs::Uncompress(unsigned int, unsigned char*, unsigned int*, unsigned char*, unsigned int, unsigned char*)
vtable for common::CMultiFieldBlob::CStringFieldNotTerminatedException
typeinfo name for CryptoPP::CFBDecryption
typeinfo name for ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>
common::CFileUtil::FindFilesMatchingPattern(std::string const&, std::string const&, common::CFileUtil::EReturnedFilesPathSpec, std::vector<std::string, std::allocator<std::string>>&)
common::CLog::DisableAllLogging()
typeinfo name for common::CPeerGracefullyClosedConnectionCommException
Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>::operator()(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) const
Grid::CFs::CUnknownException::~CUnknownException()
Grid::CPreauthenticationFailedException::~CPreauthenticationFailedException()
Grid::CCachePreLoader::CImpl::~CImpl()
std::map<std::string, Grid::TCacheDescriptor, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::~map()
Grid::CCSERServerAddressCache::~CCSERServerAddressCache()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>*)
Grid::ICommandState::Initialize()
typeinfo name for Grid::IResourceList
__gnu_cxx::hashtable<std::pair<int const, Handle_t*>, int, __gnu_cxx::hash<int>, std::_Select1st<std::pair<int const, Handle_t*>>, std::equal_to<int>, std::allocator<Handle_t*>>::resize(unsigned int)
Grid::CActivityLog::CAssertObserver::~CAssertObserver()
Grid::CTicketCache::GetCurrentTicket(unsigned int, unsigned int, common::CIPAddrPort const&)
typeinfo name for Grid::CSubscriptionRecord::CValidateFieldsException
_fopen
common::CFastThreadMutex::~CFastThreadMutex()
Grid::IManifestIteratorImpl::IsVersionedUcFile() const
CryptoPP::Integer::Plus(CryptoPP::Integer const&) const
Grid::CSClient::CInvalidSessionHandleException::~CInvalidSessionHandleException()
vtable for Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException
DW.ref._ZTIN6common27CValueDoesNotExistExceptionE
Grid::CTicketCache::CImpl::SerializeContentTickets(std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>> const&, unsigned int)
Grid::CContentDescriptionRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for CryptoPP::EuclideanDomainOf<CryptoPP::Integer>
typeinfo for common::CSendException
Grid::CLockedCDDBCache::CLockedCDDBCache(bool, bool*, common::CCommandStatusControl*)
__gnu_cxx::new_allocator<std::string>::max_size() const
typeinfo name for BSL::CUnpackedTime::CUnpackedTimeException
typeinfo for Grid::CSClient::CReadManifestFSM::CRecvDataChunkState
Grid::InternalSteamGetAppDLCStatus(unsigned int, unsigned int, unsigned int, int*, TSteamError*)
CryptoPP::StringStore::~StringStore()
Grid::CAccountUserRecord::CValidateFieldsException::~CValidateFieldsException()
sigslot::has_slots<sigslot::multi_threaded_local>::~has_slots()
Grid::InternalSteamGetCacheFilePath(unsigned int, unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
Grid::CSClient::COperationCancelledException::~COperationCancelledException()
BSL::CUnpackedTime::COutOfRange::~COutOfRange()
Grid::CSClient::ReadFileChecksumTable(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
vtable for Grid::CSClient::CReadPurgeListFSM::CSendRequestState
common::CThreadSafeCountedPtr<Grid::CValidationLogger>::~CThreadSafeCountedPtr()
Grid::CLauncher::Run()
common::CErrorCodeException::Clone() const
typeinfo name for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
Grid::InternalSteamChangePassword(unsigned int, char const*, char const*, TSteamError*)
common::CRuntimeError::ThrowSelf() const
common::CRegistryException::~CRegistryException()
typeinfo name for common::FunctorImplBase
common::CFileUtil::IFindFile::~IFindFile()
typeinfo for Grid::CAccountUsersRecord::CValidateFieldsException
vtable for Grid::ICache
vtable for Grid::CAccountSubscriptionBillingInfoRecord
typeinfo for CryptoPP::Store
typeinfo name for Grid::CSClient::CLoginFSM
common::CMultiFieldBlob::AddFields(std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>> const&)
Grid::OfflineStatus::SetCurrentState(Grid::OfflineStatus::EState)
Grid::CCacheFileFixedChecksum::~CCacheFileFixedChecksum()
common::CThreadSafeCountedPtr<common::IKey>::dispose()
Grid::CMultipleCacheLock::TakeLocksNow(unsigned int)
typeinfo name for ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::_M_insert_unique(std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo> const&)
common::CMultiFieldBlob::RecursivelyEnsureSizeOfSpareCapacity(unsigned int, unsigned int)
Grid::ICommandState::StartLaunchApp(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, unsigned int, std::string const&)
std::_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned short>, std::_Select1st<std::pair<unsigned long const, unsigned short>>, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned short>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, unsigned short>>*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Double(CryptoPP::Integer const&) const
Grid::CCacheNone::Flush()
Grid::CSClient::ICompletionHandler::CompleteReadFileChecksumTable(common::ICloneableException const*, unsigned int)
CryptoPP::PositiveMultiply(CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
typeinfo for Grid::CLauncher
Grid::CCacheOneFileFixedBlock::CImpl::UpgradeFsTree(Grid::CCacheFileFixedFsTree*, Grid::CCacheFileFixedChecksum*, unsigned int, common::CCommandStatusControl*)
Grid::CClientConnection::HandleInsertAppDependency()
Grid::CClientConnection::HandleIsFileNeededByApp()
typeinfo name for Grid::CCacheFileFixedDirectory
virtual thunk to CryptoPP::FileSource::~FileSource()
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Subtract(CryptoPP::Integer const&, CryptoPP::Integer const&) const
typeinfo for CryptoPP::OS_RNG_Err
std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::~vector()
std::vector<std::string, std::allocator<std::string>>::end()
Grid::CLauncher::CImpl::CreateCleanEnvironment(common::CMallocedBlock&)
common::CThreadSafeAutoSeededRandomPoolSingleton::GenerateWord32(unsigned long, unsigned long)
Grid::CDerivedSubscribedAppsRecord::~CDerivedSubscribedAppsRecord()
Grid::CCacheBatBlock::GetNext(unsigned int)
Grid::CSClient::IProtocolState::~IProtocolState()
Grid::CCacheDescBlock::CCacheDescBlock(Grid::ICache::EType, unsigned int, unsigned int, unsigned int)
common::CConnectException::~CConnectException()
vtable for common::CMultiFieldBlob::index_iterator_impl
non-virtual thunk to CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
common::CEventLoopThread::ThreadProc(void*)
CryptoPP::FixedBlockSize<16u>::BlockSize() const
common::CObjFunctor<Grid::CSClient::CConnection>::operator()()
CryptoPP::IteratedHashBase<unsigned long>::~IteratedHashBase()
CryptoPP::OID::EncodeValue(CryptoPP::BufferedTransformation&, unsigned long)
typeinfo name for Grid::CSClient::CBlockingReadFileChecksumTableHandler
common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException::~CFailedToOpenMemoryMappedFileException()
typeinfo for common::CMultiFieldBlob::index_iterator
common::CValueIterator::CValueIterator(common::IValueIteratorImpl*)
common::CConnResetException::Clone() const
Grid::CSubscriptionAppIdsRecord::CValidateFieldsException::Clone() const
typeinfo for ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>
typeinfo name for CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>
DW.ref._ZTIN4Grid18CNotFoundExceptionE
Grid::CAccount::SetUser2(common::CCommandStatusControl&, std::string const&)
Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException::~CSignatureCheckFailedException()
common::CMultiFieldBlob::CUnableToGrowBlobException::~CUnableToGrowBlobException()
Grid::CCacheOneFileFixedBlock::GetCacheFileDescriptor(std::string const&, Grid::TCacheDescriptor*)
typeinfo for Grid::CAllSubscriptionsRecord::CValidateFieldsException
Grid::CAccount::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*)
typeinfo name for Grid::IManifestIteratorImpl
Grid::CCacheFileFixedDirectoryEntry::CCacheFileFixedDirectoryEntry()
Grid::CClientConnection::HandleFindFirst64()
typeinfo name for common::CEventLoopThread
Grid::ICache::ICacheCompletionHandler::s_HandleSet
CryptoPP::ByteQueue::Walker::~Walker()
Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::RandomNumberGenerator::~RandomNumberGenerator()
virtual thunk to CryptoPP::RSAFunction::PreimageBound() const
Grid::CAccount::CImpl::s_sRunOnFirstLaunchValueName
__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>> std::__find<__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, common::CIPAddrPort>(__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, __gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, common::CIPAddrPort const&, std::random_access_iterator_tag)
typeinfo name for Grid::CFileIdChecksumTable::CException
common::CBlobException::~CBlobException()
typeinfo name for CryptoPP::DigestVerifier
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::_M_insert_unique(std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>> const&)
typeinfo name for common::CBlobSubKeyIterator
Grid::ICache::CFingerPrintDoesNotMatchException::Clone() const
__gnu_cxx::__normal_iterator<common::IAssertObserver**, std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>> std::__find<__gnu_cxx::__normal_iterator<common::IAssertObserver**, std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>>, common::IAssertObserver*>(__gnu_cxx::__normal_iterator<common::IAssertObserver**, std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>>, __gnu_cxx::__normal_iterator<common::IAssertObserver**, std::vector<common::IAssertObserver*, std::allocator<common::IAssertObserver*>>>, common::IAssertObserver* const&, std::random_access_iterator_tag)
Grid::CTicketCache::CImpl::SetUser(std::string const&, common::CMallocedBlock*, common::CCommandStatusControl*)
vtable for Grid::IResourceList
Grid::CFsTable::GetCacheGroup(unsigned int)
typeinfo name for Grid::CSClient::CException
EnsureSemaphoreClearedInternal(int)
common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::~ObjFunctorImpl0()
Grid::CFs::CAppHasNoCacheFileException::CAppHasNoCacheFileException()
common::CValueDoesNotExistException::CValueDoesNotExistException(std::string const&, std::string const&)
common::CMultiFieldBlob::CInvalidMemoryMappedFileException::~CInvalidMemoryMappedFileException()
std::vector<unsigned long, std::allocator<unsigned long>>::max_size() const
Grid::CCacheServerSessionMgr::DestroySessions()
CryptoPP::DigestSignatureSystem::~DigestSignatureSystem()
common::CThread::Terminate()
Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException::Clone() const
Grid::CAccount::CImpl::SetAppCurrentVersion(common::CCommandStatusControl&, unsigned int, unsigned int)
Grid::CBadCallerErrorStructPtrException::~CBadCallerErrorStructPtrException()
Grid::CAccount::CImpl::CreateFakeAccountRecord()
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::MaxPlainTextLength() const
common::CThreadSafeCountedPtr<Grid::ICache>::CThreadSafeCountedPtr(common::CThreadSafeCountedPtr<Grid::ICache> const&)
Grid::InternalSteamRemoveAppDependency(unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::CRateLimitRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo name for CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>
Grid::ICache::CResourceIsNotFile::~CResourceIsNotFile()
Grid::CUnknownReadException::~CUnknownReadException()
vtable for Grid::CActivityLog::CAssertObserver
typeinfo name for ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>
Grid::IClientConnection::~IClientConnection()
common::CMultiFieldBlob::index_iterator_impl::~index_iterator_impl()
Grid::CSClient::IProtocolFSM::AsyncRecvIntoExternalReceiveArea(unsigned char*, unsigned int)
Grid::CCacheQueueManager::GetEntryData(unsigned int, Grid::CCacheQueueEntry*) const
Grid::InternalSteamStartLoadingCache(unsigned int, unsigned int, TSteamError*)
vtable for Grid::CClientAuthenticationTicket
vtable for Grid::CSClient::CReadManifestFSM
Grid::GetLastUpdatedCellId()
Grid::CFsCacheGroup::CImpl::CFindHandleEntry::~CFindHandleEntry()
Grid::CUnknownInternalException::~CUnknownInternalException()
std::vector<Grid::CCacheReplacementLru::TLru16, std::allocator<Grid::CCacheReplacementLru::TLru16>>::~vector()
common::CMultiFieldBlob::CRequiresDecryptionKeyException::ThrowSelf() const
Grid::CAccount::CImpl::~CImpl()
CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::NewMessageAccumulator() const
common::IEventLoopFunctor::~IEventLoopFunctor()
typeinfo name for common::CBadAlloc
common::DecryptWithMachineDependentPassphrase(unsigned char const*, unsigned int, std::string*, bool)
common::CSendException::~CSendException()
Grid::IManifestIteratorImpl::GetName(std::string&) const
Grid::CCachePreLoader::CImpl::~CImpl()
common::CLogContextFunctor::operator()(char const*, ...) const
Grid::CShippingInfoRecord::~CShippingInfoRecord()
CryptoPP::a_exp_b_mod_c(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&)
common::CDefaultAssertCatcher::s_bDestroyedSingletonInstance
Grid::CAccountUserPasswordsRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CAccount::ChangeEmailAddress(common::CCommandStatusControl&, std::string const&)
Grid::CAccount::GetNumAccountsWithEmailAddress(common::CCommandStatusControl&, std::string const&, unsigned int*)
common::CThreadSafeAutoSeededRandomPoolSingleton::~CThreadSafeAutoSeededRandomPoolSingleton()
typeinfo for Grid::CCacheGroupIterator
Grid::CSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::MDC<CryptoPP::SHA>::ProcessBlock(unsigned char*) const
common::IAssertObserver::~IAssertObserver()
Grid::CLibraryAlreadyInitializedException::~CLibraryAlreadyInitializedException()
void std::__insertion_sort<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, __gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>)
Grid::CClientAuthenticationTicket::GetEmbeddedSubscriptionsList(std::vector<unsigned int, std::allocator<unsigned int>>&, TSteamGlobalUserID*)
Grid::CClientConnection::HandleSetUser2()
BSL::CUnpackedTime::CUnpackedTimeException::~CUnpackedTimeException()
Grid::CEngineConnection::RequestAccountsByEmailAddressEmail(char const*, TSteamError*)
Grid::CLocalClockSkewException::~CLocalClockSkewException()
Grid::CCacheQueueManager::FastLock(unsigned int)
Grid::CResourceFile::GetNextLineInternal(char*, unsigned int)
__wrap_chmod
Grid::CEngineLoopbackConnection::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
common::CBlobSubKeyIterator::GetName() const
Grid::CCacheOneFileFixedBlock::IsPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
vtable for Grid::CManifestChecksumException
std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>::~vector()
Grid::ICache::CAppIdDoesNotMatchException::ThrowSelf() const
std::ios_base::width(int)
typeinfo for CryptoPP::HMAC<CryptoPP::SHA>
typeinfo name for Grid::CAccountIsDisabledException
BSL::CUnpackedTime::COutOfRange::DefaultMessage() const
Sleep(unsigned int)
common::CConnectException::~CConnectException()
common::CSubKeyIterator::GetName() const
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::operator=(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&)
Grid::CEngineLoopbackConnection::LoadFileToCache(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob const&)
Grid::CEngineConnection::CreateAccount(char const*, char const*, char const*, char const*, char const*, char const*, int*, TSteamError*)
typeinfo for Grid::CAccountIsDisabledException
ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>::~ObjScopeGuardImpl0()
vtable for CryptoPP::Store
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>> const&)
ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>::~ObjScopeGuardImpl0()
Grid::InternalSteamNewClient(unsigned int, char const*, char const*, char const*, sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>**)
common::CNetworkException::CNetworkException(std::string const&)
std::string* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*>(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*)
Grid::ICommandState::StartLogout(common::CThreadSafeCountedPtr<Grid::CAccount> const&)
Grid::CEngineConnection::BlockingCall(unsigned int, unsigned int, TSteamError*)
Grid::CFsCacheGroup::SeekFromStart(unsigned int, unsigned long long)
common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>::reset(Grid::CClientAuthenticationTicket*)
unsigned long* std::__copy_backward_normal<false, false>::__copy_b_n<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
Grid::ICacheGroupIteratorImpl::ConstructName(char*, unsigned int, unsigned int) const
Grid::ICommandState::StartGetNumAccountsWithEmailAddress(std::string const&, unsigned int*)
common::CThread::SetCurrentThreadDescription(std::string)
vtable for Grid::CAccountPaymentCardInfoRecord
Grid::CVTSIPAddressCache::~CVTSIPAddressCache()
Grid::CCacheNone::GetManifestIterator(unsigned int)
Grid::CReturnBufferData::CReturnBufferData(unsigned int)
std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>::~vector()
__divdi3
ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>::~ObjScopeGuardImpl0()
common::CThread::CThreadCreateException::~CThreadCreateException()
Grid::CEngineConnection::GenerateSuggestedAccountNames(char const*, char const*, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for sigslot::_connection_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::ICache::CBadArgException::ThrowSelf() const
Grid::CFsBuffer::EnsureBufferIsValid()
typeinfo for common::CErrorCodeException
common::CPeerGracefullyClosedConnectionCommException::~CPeerGracefullyClosedConnectionCommException()
Grid::CCacheManifestOnly::CCacheManifestOnly(std::string const&, std::string const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int, bool)
CryptoPP::BERGeneralDecoder::CopyTo(CryptoPP::BufferedTransformation&, unsigned long) const
Grid::CLockedCDDBCache::SetIPCountry(char const*)
common::CErrorCodeException::ThrowSelf() const
typeinfo for common::CLogFile
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl::_Vector_impl(std::allocator<unsigned long> const&)
typeinfo for Grid::CPipeComm
vtable for Grid::CResourceListStrings
common::CReadWriteThreadMutex::~CReadWriteThreadMutex()
common::CLogContext::WriteVaList(unsigned int, char const*, char*)
__gnu_cxx::new_allocator<unsigned long>::~new_allocator()
Grid::CAccount::CImpl::s_sAppCacheDirValueName
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CSubscriberAccountRecord::AttemptToAutoUpgradeFromVersion(unsigned short)
typeinfo name for arg::counted_ptr<Grid::IResourceList>
Grid::CCachePreLoader::IsEnabled()
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_Vector_impl::~_Vector_impl()
Grid::CCacheQueueManager::FreeUnusedBuffers()
Grid::CCacheQueueManager::CImpl::FastLock(unsigned int)
vtable for Grid::CAppLaunchOptionRecord
vtable for common::CRecvException
typeinfo name for Grid::CEngineNotRunningException
Grid::CCacheNone::CCacheNone(unsigned int, unsigned int, std::string const&, std::string const&)
common::CThread::CImpl::Wait(unsigned int, bool)
typeinfo for common::CCommandStatusControlAutoTimeout
common::CConfigTree::CConfigTree()
DW.ref._ZTIN4Grid6ICache30CCacheNeedsDecryptionExceptionE
__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>> std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>, std::string const&, std::random_access_iterator_tag)
hash
Grid::CSClient::CReadManifestFSM::CSendRequestState::~CSendRequestState()
Grid::CClientConnection::HandleForgetAllHints()
Grid::CSClient::ReadManifest(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CCacheOneFileFixedBlock::~CCacheOneFileFixedBlock()
VTT for CryptoPP::CBCPaddedDecryptor
vtable for CryptoPP::CBCPaddedDecryptor
Grid::CAccount::GetAccountStatus()
CryptoPP::BERGeneralDecoder::ReduceLength(unsigned int)
CryptoPP::TrapdoorFunction::~TrapdoorFunction()
common::CThreadLocalRegistrar::~CThreadLocalRegistrar()
vtable for Grid::CFs::CBadArgException
CryptoPP::FileStore::FileStore(char const*)
vtable for BSL::CTime::CTimeToPackOutOfRange
common::CBlobValueIterator::GetName() const
common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>::~ObjFunctorImpl8()
Grid::CAppLaunchOptionRecord::~CAppLaunchOptionRecord()
common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException::Clone() const
Grid::CCacheOneFileFixedBlock::AddFileChunkToCache(Grid::CManifestIterator&, void const*, unsigned long long, unsigned long long)
Grid::ICommandState::StartChangePersonalQA(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, std::string const&, std::string const&)
common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException::ThrowSelf() const
Grid::ICache::CCacheNeedsDecryptionException::~CCacheNeedsDecryptionException()
Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException::Clone() const
Grid::CActivityLog::~CActivityLog()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TAppData>>>::~_Rb_tree()
ScopeGuardImpl1<int (*)(char*), char*>::ExecuteNowIfNotDismissed() const
virtual thunk to CryptoPP::MessageQueue::Put(unsigned char const*, unsigned int)
Grid::ICacheGroupIteratorImpl::AdvanceToNextSibling()
typeinfo name for common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>
Grid::CAppRegionRecord::CValidateFieldsException::Clone() const
Grid::CClientContentTicket::CClientContentTicket(unsigned short, std::string const&, std::string const&, unsigned short, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned short, unsigned int, unsigned short, unsigned char const*, BSL::CTime, BSL::CTime, unsigned short, unsigned char const*, unsigned int, unsigned int, common::CIPAddrPort const&, common::CIPAddrPort const&)
inflate_flush
Grid::CSClient::CService::ReadFile(unsigned int, unsigned int, unsigned int, std::vector<common::TBuf, std::allocator<common::TBuf>> const&, Grid::ContentPriority::ERequestLevel, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo name for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>
Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>::CPreloaderReadHandlerFunctor(Grid::CCachePreLoader::CImpl*, void (Grid::CCachePreLoader::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
Grid::CCacheNone::LoadCacheFromDir(std::string const&, common::CCommandStatusControl*)
vtable for CryptoPP::CFBDecryption
Grid::CSubscriberAccountRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo name for CryptoPP::CBCPaddedDecryptor
BSL::CTime::CPackingException::DefaultMessage() const
common::CDefaultAssertCatcher::CatchVerboseDebugAssert(char const*, char const*, unsigned int)
Grid::CAllAppsRecord::ValidateFields(std::ostream*, unsigned int)
BSL::CUnpackedTime::CUnpackedTimeException::CUnpackedTimeException(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
Grid::CSClient::CConnection::Recv(Grid::CSClient::TSuperOverlapped&)
vtable for Grid::CContentDescriptionRecord::CValidateFieldsException
Grid::CEngineLoopbackConnection::GetFlags(char const*, unsigned int*, TSteamError*)
Grid::CSClient::CReadPurgeListFSM::CSendRequestState::~CSendRequestState()
typeinfo for common::CSubKeyIterator
BSL::CTime::CTimeToPackOutOfRange::~CTimeToPackOutOfRange()
typeinfo name for CryptoPP::PK_FixedLengthDecryptor
Grid::CLibraryAlreadyInitializedException::CLibraryAlreadyInitializedException()
Grid::IServerAddressCache::BeginAccess()
CryptoPP::ByteQueue::Walker::Skip(unsigned long)
typeinfo name for Grid::CSClient::CReadManifestFSM::CRecvDataChunkState
typeinfo name for ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>
Grid::CAppVersionsRecord::~CAppVersionsRecord()
Grid::CFsCacheGroup::CImpl::FindFirstRemote(Grid::CSplitPath const&, TSteamElemInfo64*, unsigned int*)
typeinfo name for common::CLogFile
typeinfo for Grid::CDerivedSubscribedAppsRecord
Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::ICommandState::StartChangeAccountName(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, std::string const&)
Grid::CFs::ThrowIfAppContainsEncryptedFiles(std::string const&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int>>&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>*)
virtual thunk to CryptoPP::StringSource::~StringSource()
Grid::CEngineLoopbackConnection::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
GetExitCodeThread(void*, unsigned int*)
typeinfo for common::IFunctor
std::pair<std::string const, common::CNamedArgs>::~pair()
typeinfo name for CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
SetFilePointer(void*, int, int*, unsigned int)
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState::~CRecvDataChunkState()
sigslot::signal2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~signal2()
Grid::ICache::CReadException::CReadException(common::CErrorCodeException::ESpecificType)
CryptoPP::Rijndael::Te4
CryptoPP::DigestVerifier::~DigestVerifier()
vtable for CryptoPP::BlockingRng
common::CLogFile::Write(char const*) const
Grid::ICacheGroupIteratorImpl::FlushFile()
typeinfo for Grid::ICache::CInternalErrorException
Grid::CSClient::CUnacceptableProtocolVersionException::~CUnacceptableProtocolVersionException()
common::CAdaptPlainToEventLoopFunctor::~CAdaptPlainToEventLoopFunctor()
Grid::CManifestBin::CManifestBin(_IO_FILE*, long)
get_crc_table
Grid::CFs::IsCachePreloadingEnabled(std::string const&, unsigned int)
void std::__uninitialized_fill_n<false>::uninitialized_fill_n<common::CWSABUFWrapper::TWSABUFInfo*, unsigned int, common::CWSABUFWrapper::TWSABUFInfo>(common::CWSABUFWrapper::TWSABUFInfo*, unsigned int, common::CWSABUFWrapper::TWSABUFInfo const&)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::~_Rb_tree()
Grid::CManifestChecksumException::Clone() const
common::CThreadSafeCountedPtr<common::ExceptionCatcherBase>::dispose()
Grid::CEngineConnection::GetSponsorUrl(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo for ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>
typeinfo name for Grid::CSClient::CBlockingLogoutCompletionHandler
Grid::CTicketCache::Logout()
CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>::Dismiss() const
Grid::CAccountIsDisabledException::Clone() const
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob*, unsigned int, unsigned int, unsigned char const*)
common::CPeerGracefullyClosedConnectionCommException::ThrowSelf() const
typeinfo name for Grid::CRateLimitRecord::CValidateFieldsException
CAsyncIOManager::CThreadSafeBusySet::~CThreadSafeBusySet()
CryptoPP::BufferedTransformation::AnyRetrievable() const
Grid::CCacheGroup::GetCacheGroupIterator(unsigned int, unsigned int)
CryptoPP::AES_PHM_Decryption::~AES_PHM_Decryption()
vtable for Grid::ICache::CReadException
typeinfo for common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
Grid::CErrnoErrorException::Clone() const
Grid::CClientConnection::HandleAbortCall()
Grid::CEngineConnection::RefreshAccountInfo(int, int, TSteamError*)
Grid::CCacheBatBlock::CCacheBatBlock(_IO_FILE*)
common::CConnResetException::~CConnResetException()
Grid::CBufferTable::s_uBufSizeMin
Grid::CReturnBufferItem<TSteamUpdateStats>::Receive(Grid::CPipeComm*)
Grid::CEngineConnection::Getc(unsigned int, TSteamError*)
Grid::CFs::SetAppCacheSize(std::string const&, unsigned int, unsigned int, unsigned int, bool, common::CCommandStatusControl*)
typeinfo name for Grid::CSClient::CUnacceptableProtocolVersionException
CryptoPP::AutoSeededRandomPool::Reseed(bool, unsigned int)
common::CCommandStatusControl::IsCancelled() const
common::CInUseException::~CInUseException()
Grid::CFs::CCannotWriteNonUserConfigFile::~CCannotWriteNonUserConfigFile()
Grid::CValidationLogger::CValidationLogger()
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_M_get_Tp_allocator()
Grid::CCacheServerSessionMgr::GetSponsorUrl(std::string*)
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
Grid::CBadCallHandleException::~CBadCallHandleException()
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
common::CThread::CImpl::~CImpl()
Grid::GetBoolText(int*)
Grid::CBadLaunchConfigException::Clone() const
Grid::CAppRecord::GetAppIdOfManifestOnlyCache()
Grid::CreateMsg_CommandCodePlusTGTPlusAuthenticatorWithPayload(unsigned char, common::CWSABUFWrapper&, common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket> const&, std::vector<Grid::CAuthenticatorPayloadChunk, std::allocator<Grid::CAuthenticatorPayloadChunk>> const&)
Grid::CCacheExceptionTranslator::CCacheExceptionTranslator(char const*)
Grid::InternalSteamGetCurrentEmailAddress(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>*)
Grid::CCacheOneFileFixedBlock::CImpl::QuickCheckCache()
common::CNamedArgs::~CNamedArgs()
common::CThreadSafeCountedPtr<common::ILogFunctor>::dispose()
Grid::CEngineLoopbackConnection::~CEngineLoopbackConnection()
common::CMultiFieldBlob::CStringFieldNotTerminatedException::~CStringFieldNotTerminatedException()
Grid::IServerAddressCache::RemoveCurrentAddress()
CryptoPP::Integer::Randomize(CryptoPP::RandomNumberGenerator&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer::RandomNumberType, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CAccountUserPasswordRecord::CValidateFieldsException::ThrowSelf() const
Grid::ICommandState::StartGetCachePercentFragmentation(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, unsigned int*)
std::vector<Grid::CCacheDataBlock::TFileInfo, std::allocator<Grid::CCacheDataBlock::TFileInfo>>::~vector()
Grid::CClientConnection::HandleFindNext64()
Grid::CSClient::CLoginFSM::CLoginFSM(Grid::CSClient::CSession&, std::string const&, unsigned int, unsigned int, Grid::CSClient::CBlockingLoginCompletionHandler&)
__gnu_cxx::new_allocator<std::string>::~new_allocator()
typeinfo name for ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>
Grid::InternalSteamIsAppSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)
Grid::CFsBuffer::FillBuf()
Grid::IServerAddressCache::GetNewAddressList()
ISteamInterface::~ISteamInterface()
Grid::TFileEntry_t::~TFileEntry_t()
typeinfo for CryptoPP::AES_PHM_Decryption::InvalidCiphertextOrKey
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>> const&)
vtable for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>
CryptoPP::IteratedHash<unsigned long, true, 64u>::~IteratedHash()
Grid::CShippingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CBufferTable::s_uBufSizeMax
CryptoPP::CBCPaddedEncryptor::CBCPaddedEncryptor(CryptoPP::BlockTransformation const&, unsigned char const*, CryptoPP::BufferedTransformation*)
Grid::CFsBuffer::SetBufPtr(unsigned char*, unsigned int)
CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>::~AbstractEuclideanDomain()
typeinfo for CryptoPP::PublicKeyBaseTemplate<CryptoPP::RSAFunction>
Grid::CClientConnection::HandleEnumerateSubscriptionDiscount()
common::CMultiFieldBlob::index_iterator_impl::~index_iterator_impl()
CryptoPP::FileSink::Err::~Err()
typeinfo name for Grid::CAccountUserPasswordRecord
common::CThread::Reset()
Grid::InternalSteamEnumerateAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
CryptoPP::StringSource::Pump(unsigned long)
Grid::CClientConnection::HandleGetSubscriptionStats()
Grid::CReturnBufferItem<TSteamUpdateStats>::~CReturnBufferItem()
vtable for CryptoPP::FileStore
common::ConnectHasCompleted(int)
Grid::ICache::CCacheNeedsDecryptionException::Clone() const
Grid::CAppStatus::~CAppStatus()
Grid::CAppVersionsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::InternalSteamForceCellId(unsigned int, unsigned int, TSteamError*)
vtable for sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, std::string> const&)
Grid::ICache::CNotFoundException::ThrowSelf() const
std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::TAppFilesystemInfo*, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>>, Grid::TAppFilesystemInfo const&)
typeinfo name for Grid::CAppRecord::CValidateFieldsException
Grid::CFsCacheGroup::CImpl::HandleCacheDismount(unsigned int)
Grid::CFsCacheGroup::CImpl::SetvBuf(unsigned int, unsigned char*, int, unsigned int)
common::CEventLoopThread::AddEvent(std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>> const&)
Grid::InternalSteamUninstall(unsigned int, TSteamError*)
construction vtable for CryptoPP::Store-in-CryptoPP::FileStore
vtable for common::CStringTable
Grid::CEngineConnection::ForceCellId(unsigned int, TSteamError*)
Grid::CEngineConnection::ResumeCachePreloading(unsigned int, TSteamError*)
typeinfo name for ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
Grid::CAppFilesystemRecord::CValidateFieldsException::~CValidateFieldsException()
zError
SafeSnprintf
typeinfo name for CryptoPP::IteratedHashBase<unsigned long>
typeinfo for ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>
Grid::CPipeComm::SendData(void const*, unsigned int)
Grid::CEngineLoopbackConnection::Logout(TSteamError*)
Grid::CClientConnection::HandleGetAppUpdateStats()
Grid::CSClient::CSession::~CSession()
Grid::CEngineConnection::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
Grid::CReturnBufferData::Send(Grid::CPipeComm*)
common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::~FunctorImpl2()
DW.ref._ZTIN6common15CMultiFieldBlob38CFailedToOpenMemoryMappedFileExceptionE
BSL::CUnpackedTime::CUnpackedTimeException::DefaultMessage() const
Grid::CAccount::~CAccount()
__gnu_cxx::new_allocator<std::string>::new_allocator()
void std::_Destroy_aux<false>::__destroy<std::vector<unsigned int, std::allocator<unsigned int>>*>(std::vector<unsigned int, std::allocator<unsigned int>>*, std::vector<unsigned int, std::allocator<unsigned int>>*)
Grid::InternalSteamSetAppCacheSize(unsigned int, unsigned int, unsigned int, bool, TSteamError*)
typeinfo for ScopeGuardImpl1<int (*)(void*), void*>
CryptoPP::BlockingRng::GenerateBlock(unsigned char*, unsigned int)
Grid::CFsBuffer::ResetFileInfo()
std::_Rb_tree<sigslot::_signal_base<sigslot::multi_threaded_local>*, sigslot::_signal_base<sigslot::multi_threaded_local>*, std::_Identity<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::less<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::allocator<sigslot::_signal_base<sigslot::multi_threaded_local>*>>::_M_insert_unique(sigslot::_signal_base<sigslot::multi_threaded_local>* const&)
CryptoPP::Source::PumpMessages(unsigned int)
typeinfo for Grid::CSubscriptionAppIdsRecord::CValidateFieldsException
Grid::IManifestIteratorImpl::IsHiddenFile() const
Grid::ICommandState::StartUpdateSubscriptionBillingInfo(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, TSteamSubscriptionBillingInfo const*)
std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
Grid::CClientConnection::HandleLogin()
Grid::CSClient::CSessionDestroyedException::Clone() const
Grid::CFs::CBadMountException::~CBadMountException()
Grid::CClientRegistry::CreateAppKeyName(std::string const&, unsigned int, bool)
std::vector<std::pair<common::RemoteFileHarvest::EFileType, std::string>, std::allocator<std::pair<common::RemoteFileHarvest::EFileType, std::string>>>::~vector()
Grid::CFs::MoveApp(std::string const&, unsigned int, std::string const&, common::CCommandStatusControl*)
Grid::CSClient::CSessionDestroyedException::ThrowSelf() const
Grid::CManifestBin::GetBinarySize() const
Grid::CClientManager::CImpl::CImpl()
virtual thunk to CryptoPP::MessageQueue::MaxRetrievable() const
common::CNamedArgs::insert(std::string const&, std::string const&)
Overlapped_t::Overlapped_t()
CryptoPP::StreamCipher::ProcessString(unsigned char*, unsigned char const*, unsigned int)
typeinfo name for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>
ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>::~ScopeGuardImpl2()
virtual thunk to CryptoPP::DigestVerifier::~DigestVerifier()
std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, unsigned long long>, std::_Select1st<std::pair<unsigned long long const, unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long long>>>::_M_copy(std::_Rb_tree_node<std::pair<unsigned long long const, unsigned long long>> const*, std::_Rb_tree_node<std::pair<unsigned long long const, unsigned long long>>*)
Grid::IManifestIteratorImpl::IsExecutableFile() const
Grid::CCacheFileFixedFsTree::SerializeEntry(_IO_FILE*, unsigned int) const
common::Append(unsigned int, unsigned char**, unsigned char*)
virtual thunk to CryptoPP::Store::~Store()
CryptoPP::HashModuleWithTruncation::CalculateTruncatedDigest(unsigned char*, unsigned int, unsigned char const*, unsigned int)
Grid::CCannotCreateCacheFileException::CCannotCreateCacheFileException(std::string const&)
CryptoPP::MessageQueue::Put(unsigned char)
Grid::CCellIDManager::ForceCellID(unsigned int)
common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException::~CFlushMemoryMappedFileFailedException()
ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
common::CRegistryException::ThrowSelf() const
Grid::ICommandState::StartGenerateSuggestedAccountNames(std::string const&, std::string const&, char*, unsigned int, unsigned int*)
Grid::CCacheQueueManager::~CCacheQueueManager()
common::CMultiFieldBlob::CMultiFieldBlob(std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>> const&, unsigned int, unsigned int)
BSL::CUnpackedTime::CFromStringException::~CFromStringException()
Grid::CCachePreLoader::~CCachePreLoader()
Grid::CCacheOneFileFixedBlock::CImpl::CheckVersion(unsigned int, bool, common::CCommandStatusControl*)
Grid::CEngineDisconnectException::~CEngineDisconnectException()
Grid::CMutexGuard::CTimeoutException::Clone() const
vtable for common::CConfigTree
Grid::IManifestIteratorImpl::IsExtendedFileNode() const
Grid::ICacheGroupIteratorImpl::~ICacheGroupIteratorImpl()
BSL::CUnpackedTime::CUnpackedTimeException::~CUnpackedTimeException()
WaitForMultipleObjectsEx(unsigned int, void* const*, int, unsigned int, int)
Grid::CFsTable::GetClientFs(unsigned int)
typeinfo name for Grid::CCacheFileFixedChecksum::CBadFormatVersionException
virtual thunk to CryptoPP::CBCPaddedEncryptor::~CBCPaddedEncryptor()
common::CBlobKey::CPublicKey::SetValue(std::string const&, void const*, unsigned int)
Grid::TRequestInfo_t::~TRequestInfo_t()
Grid::CAppVersionInfoRecord::~CAppVersionInfoRecord()
CryptoPP::RSAFunction::~RSAFunction()
Grid::CDiscountQualifierRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::CBCPaddedEncryptor::~CBCPaddedEncryptor()
common::CWSABUFWrapper::AdjustLengthPrefixedBufferAndReturnSizeOfFullMsg()
BSL::CUnpackedTime::CFromStringInvalidLength::CFromStringInvalidLength(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
CryptoPP::HMAC<CryptoPP::SHA>::Update(unsigned char const*, unsigned int)
Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::InternalSteamChangeForgottenPassword(unsigned int, char const*, char const*, char const*, char const*, int*, TSteamError*)
Grid::CClientConnection::HandleGetSubscriptionExtendedInfo()
Grid::CEngineConnection::GetTotalUpdateStats(TSteamUpdateStats*, TSteamError*)
Grid::CNotFoundException::~CNotFoundException()
common::CConnectException::ThrowSelf() const
CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool()
Grid::CNotLoggedInException::~CNotLoggedInException()
std::vector<Grid::CCacheReplacementLru::TLru32, std::allocator<Grid::CCacheReplacementLru::TLru32>>::reserve(unsigned int)
CryptoPP::ModularArithmetic::~ModularArithmetic()
Grid::CClientConnection::HandleGetAppDir()
typeinfo for sigslot::has_slots<sigslot::multi_threaded_local>
Grid::CSClient::CService::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*)
Grid::CCacheManifestOnly::Stat(Grid::CManifestIterator&, TSteamElemInfo64*, bool*)
Grid::CEngineConnection::CEngineConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*)
typeinfo name for BSL::CTimePrecisionInvalid
vtable for Grid::CBadApiArgumentException
Grid::CMultipleCacheLock::~CMultipleCacheLock()
typeinfo name for CCallback<CCallbackMgr, SteamAPICallCompleted_t, true>
Grid::CAccount::CImpl::HandleCacheFingerprintMismatch(unsigned int)
Grid::InternalSteamReadFile(unsigned int, void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
std::_Vector_base<std::string, std::allocator<std::string>>::~_Vector_base()
Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState::~CSendSessionLoginRequestState()
Grid::GeneralDirectoryServerCommands::FindMasterASClientAuthenticationIPAddrPort(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, unsigned int)
Grid::CFs::CMountInUseException::~CMountInUseException()
DW.ref._ZTIN4Grid6ICache14COpenExceptionE
vtable for CryptoPP::FileSink::OpenErr
Grid::CManifestBinException::~CManifestBinException()
ScopeGuardImpl0<void (*)()>::~ScopeGuardImpl0()
Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>::CCacheReadHandlerFunctor(Grid::CCacheManifestOnly::CImpl*, void (Grid::CCacheManifestOnly::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
common::CExceptionHolder::CExceptionHolder(common::CExceptionHolder const&)
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>::~ObjScopeGuardImpl1()
ScopeGuardImpl1<int (*)(void*), void*>::~ScopeGuardImpl1()
Grid::CCacheManifestOnly::CImpl::CheckVersion(unsigned int, bool, common::CCommandStatusControl*, bool)
Grid::CAccount::CImpl::CheckAppCanBePlayed(unsigned int)
Grid::CCacheManifestOnly::CImpl::GetCacheFileTime(std::string const&)
Grid::InternalSteamSetAppVersion(unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::CClientConnection::HandleLaunchApp()
typeinfo name for Grid::CAppVersionInfoRecord
vtable for CryptoPP::PK_FixedLengthDecryptor
CryptoPP::FileStore::OpenErr::~OpenErr()
Grid::CSplitPath::clear()
CryptoPP::RandomPool::~RandomPool()
typeinfo for Grid::CFs::CBadArgException
Grid::InternalSteamSeekFile(unsigned int, unsigned int, long, ESteamSeekMethod, TSteamError*)
Grid::CCacheFileFixedChecksum::s_cu32FormatVersion
bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string>>>(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>> const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>> const&)
Grid::CEngineConnection::UnmountFilesystem(unsigned int, TSteamError*)
common::CLog::NewGroup(char const*, bool)
vtable for CryptoPP::HexEncoder
Grid::CEngineLoopbackConnection::GetSubscriptionStats(TSteamSubscriptionStats*, TSteamError*)
Grid::CCacheManifestOnly::CImpl::MarkFileState(unsigned int, (anonymous namespace)::EFileState, bool)
typeinfo for CryptoPP::VariableKeyLength<16u, 0u, 4294967295u, 1u>
Grid::CClientAgentThread::~CClientAgentThread()
Grid::CSClient::CSession::CancelAllTransactions()
Grid::CSClient::CReadPurgeListFSM::~CReadPurgeListFSM()
typeinfo name for Grid::CSubscriberAccountRecord
std::auto_ptr<Overlapped_t>::~auto_ptr()
Grid::CAppLaunchOptionRecord::IsValidForOS(char const*)
common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>::~ObjFunctorImpl0()
common::IKey::IKey(std::string const&)
Grid::ICache::GetCacheUsageStats(unsigned long long*, unsigned long long*)
std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int>>::_M_erase(std::_Rb_tree_node<unsigned int>*)
CryptoPP::Integer::Decode(CryptoPP::BufferedTransformation&, unsigned int, CryptoPP::Integer::Signedness)
fpattern_isvalid
Grid::CCacheQueueManager::CImpl::~CImpl()
Grid::CClientToASProtocolOutOfDateException::Clone() const
sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::clone()
CryptoPP::Rijndael::Te3
common::CMultiFieldBlob::DisableAutoPreprocessing()
sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>::clone()
std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>::~set()
vtable for CryptoPP::PK_FixedLengthEncryptor
Grid::CCacheDataBlock::GetEntriesInUse() const
std::auto_ptr<common::CUsedAuthenticatorTimestampsCache>::~auto_ptr()
typeinfo name for CryptoPP::Store
CryptoPP::PositiveSubtract(CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CSplitPath::CSplitPath()
typeinfo for Grid::CCacheServerSession
Grid::CFsCacheGroup::CImpl::CreateLocalFile(Grid::CSplitPath const&, bool)
typeinfo name for Grid::CAppFilesystemsRecord
CryptoPP::ByteQueue::Walker::Put(unsigned char)
BSL::CTime::Second()
Grid::CFsTable::CImpl::CacheLock(std::string const&, unsigned int)
Grid::CShippingInfoRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CManifestReadException::~CManifestReadException()
Grid::CAllDiscountQualifiersRecord::CValidateFieldsException::ThrowSelf() const
WaitForSingleObject(void*, unsigned int)
CryptoPP::PK_SignatureSystem::~PK_SignatureSystem()
CAsyncIOManager::s_ThreadProc(void*)
typeinfo name for Grid::IEngineConnection
Grid::CFsBuffer::GetBufPtr()
typeinfo name for Grid::CContentException
Grid::CClientManager::~CClientManager()
construction vtable for CryptoPP::InvertibleTrapdoorFunction-in-CryptoPP::InvertibleRSAFunction
CryptoPP::BufferedTransformation::GetNextMessage()
Grid::CCacheOneFileFixedBlock::IsAnyPartPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException::~CLoginRateTooHighException()
typeinfo for common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException
Grid::CEngineLoopbackConnection::MountFilesystem(unsigned int, char const*, TSteamError*)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::~MultiplicativeGroupT()
VTT for CryptoPP::Store
std::vector<common::TBuf, std::allocator<common::TBuf>>::~vector()
typeinfo for CryptoPP::FixedKeyLength<64u>
Grid::CEngineLoopbackConnection::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
common::CConfigDatabase::~CConfigDatabase()
common::CStringTable::~CStringTable()
Grid::CNoContentServerAvailableException::Clone() const
Grid::CAppRegionSpecificRecord::~CAppRegionSpecificRecord()
typeinfo name for common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException
std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>>::~vector()
Grid::CFsTable::GetPreloader(std::string const&, unsigned int)
common::CCompressionException::Clone() const
vtable for CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
typeinfo for CryptoPP::Integer::DivideByZero
std::_Rb_tree<std::string, std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>, std::_Select1st<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>*)
Grid::CBadApiArgumentException::~CBadApiArgumentException()
common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>::dispose()
Grid::CFs::IsFileNeededByCache(unsigned int, std::string const&, unsigned long long)
Grid::CManifestBin::GetManifestIterator(unsigned int) const
vtable for CryptoPP::MDC<CryptoPP::SHA>
Grid::CCacheQueueManager::CImpl::CImpl(unsigned int, unsigned int (*)(void*), void*)
common::CThread::CThreadCreateException::~CThreadCreateException()
Grid::InternalSteamGetDepotParent(unsigned int, unsigned int, unsigned int*, TSteamError*)
Grid::CFs::CReadException::CReadException(common::CErrorCodeException::ESpecificType)
typeinfo for Grid::ICache::CNotFoundException
Grid::CResourceListNodes::CResourceListNodes(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>&, Grid::ContentPriority::ERequestLevel)
Grid::CFsCacheGroup::CImpl::SeekFromCurrent(unsigned int, long long)
typeinfo for ScopeGuardImpl1<void (*)(unsigned int), unsigned int>
typeinfo for Grid::CManifestReadException
Grid::CAppSubscriptionIdsRecord::CValidateFieldsException::Clone() const
Grid::CEngineConnection::FindFirst(char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
Grid::CTicketCache::GetTGTForCurrentUser() const
Grid::CPipeComm::CBrokenPipeException::~CBrokenPipeException()
typeinfo name for common::CSendException
std::string BSL::I2ES<unsigned int>(unsigned int, int, int)
Grid::CSClient::CSessionLoginFailedException::Clone() const
Grid::CFs::Tell(unsigned int, unsigned int)
Grid::CCommandThreadPool::CCommandThreadPool()
Grid::CEngineLoopbackConnection::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*, TSteamError*)
Grid::CSubscriptionRecord::CValidateFieldsException::Clone() const
vtable for Grid::CClientManager
Grid::CEngineConnection::SetNotificationCallback(void (*)(ESteamNotificationCallbackEvent, unsigned int), TSteamError*)
ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>::ExecuteNowIfNotDismissed() const
typeinfo for common::CBlobKey::CPublicKey
Grid::CReturnBufferItem<char [256]>::Receive(Grid::CPipeComm*)
Grid::CAppFilesystemRecord::~CAppFilesystemRecord()
CryptoPP::ByteQueue::Walker::Get(unsigned char&)
common::CLog::DisableTimestamp()
std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>::reserve(unsigned int)
Grid::CAllAppsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CAccountUsersRecord::~CAccountUsersRecord()
BSL::CUnpackedTime::CFromStringInvalidLength::DefaultMessage() const
Grid::CTicketExpiredException::~CTicketExpiredException()
Grid::CAllDiscountQualifiersRecord::ValidateFields(std::ostream*, unsigned int)
Grid::ICache::ICacheCompletionHandler::~ICacheCompletionHandler()
std::vector<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>, std::allocator<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>>>::~vector()
typeinfo name for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>::reset(Grid::CTicketCache::CImpl*)
std::vector<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::TRequestInfo_t*, std::vector<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>>, Grid::TRequestInfo_t const&)
Grid::CEngineLoopbackConnection::SetMaxStallCount(unsigned int, TSteamError*)
common::CLogGroup::~CLogGroup()
Grid::CAccountSubscriptionRecord::CValidateFieldsException::ThrowSelf() const
Grid::CDiscountRecord::ValidateFields(std::ostream*, unsigned int)
CryptoPP::ByteQueue::Peek(unsigned char*, unsigned int) const
Grid::CSClient::CReadFileChecksumTableFSM::DoFinish()
Grid::CClientConnection::HandleSizeFile()
Grid::CSClient::CService::QueueReconnect(unsigned int)
CryptoPP::RijndaelDecryption::~RijndaelDecryption()
CBlockingUDPSocket::~CBlockingUDPSocket()
Grid::CClientConnection::HandleIsSecureComputer()
std::vector<_IO_FILE*, std::allocator<_IO_FILE*>>::_M_insert_aux(__gnu_cxx::__normal_iterator<_IO_FILE**, std::vector<_IO_FILE*, std::allocator<_IO_FILE*>>>, _IO_FILE* const&)
common::CThread::CThreadAlreadyRunningException::Clone() const
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>::~ObjScopeGuardImpl1()
CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~VerifierTemplate()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>> const&)
common::CScopedReadLock::~CScopedReadLock()
common::CThreadLocalBase::CThreadLocalBase()
Grid::CFsCacheGroup::SeekFromEnd(unsigned int, long long)
common::CBlobKey::CPublicKey::GetName()
VTT for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
common::CCommandStatusControl::ClearStalled()
common::CWSABUFWrapper::EnsureEnoughSpaceInMallocedBufferAfterMsgEnd(unsigned int)
Grid::IEngineConnection::~IEngineConnection()
Grid::CAccount::EnumerateSubscriptionDiscountQualifier(unsigned int, unsigned int, unsigned int, TSteamDiscountQualifier*)
common::CExceptionHolder::~CExceptionHolder()
sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>::~_signal_base1()
typeinfo for CryptoPP::CBCPaddedDecryptor
Grid::CAccount::CImpl::GetAppPurchaseCountry(unsigned int, int*)
Grid::CReturnBufferItem<int>::~CReturnBufferItem()
common::CObjFunctor<Grid::CSClient::CService>::~CObjFunctor()
Grid::CSClient::IProtocolFSM::~IProtocolFSM()
typeinfo for common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
common::CThreadSafeCountedPtr<common::CStringTable::CImpl>::~CThreadSafeCountedPtr()
Grid::ICommandState::StartLoadCacheFromDir(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, std::string const&)
ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>::~ScopeGuardImpl2()
virtual thunk to CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
Grid::CAccountOrUserDoesNotExistException::~CAccountOrUserDoesNotExistException()
Grid::CLauncher::CImpl::SpawnApp()
Grid::CFileIdChecksumTable::~CFileIdChecksumTable()
VTT for CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
common::CMultiFieldBlob::CFieldAlreadyExistsException::~CFieldAlreadyExistsException()
Grid::CManifestReadException::Clone() const
std::vector<std::string, std::allocator<std::string>>::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>, std::string const&)
Grid::InternalSteamIsFileNeededByApp(unsigned int, unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::_M_insert_unique(std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo> const&)
CryptoPP::FilterWithBufferedInput::Put(unsigned char)
Grid::InternalSteamEnumerateAppIcon(unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
VTT for CryptoPP::FileStore
vtable for Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState
common::CCommandStatusControlAutoTimeoutIfStalled::~CCommandStatusControlAutoTimeoutIfStalled()
Grid::CSplitPath::CSplitPath(char const*, char const*)
CryptoPP::FileSink::Put(unsigned char const*, unsigned int)
BSL::CUnpackedTime::CUnpackedTime()
Grid::CAccountSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>
typeinfo name for CryptoPP::AbstractGroup<CryptoPP::Integer>
GetTickCount()
typeinfo name for Grid::CManifestBinException
common::CFileUtil::SplitFileNameFromPath(char const*)
typeinfo for Grid::CCacheDescBlock
CryptoPP::Integer::Modulo(unsigned long) const
vtable for Grid::CSubExtendedInfoRecord
Grid::ICache::ICache(Grid::ICache::EType, unsigned int, std::string const&, std::string const&)
Grid::CAppStatus::ResetFileDependencies(unsigned int)
vtable for common::CObjFunctor<Grid::CSClient::CService>
Grid::CCacheBatBlock::Serialize(_IO_FILE*)
common::CBlobKey::GetValueStuff(std::string const&, common::CValue::EType*, unsigned char const**, unsigned int*)
CryptoPP::BufferedTransformation::SetRetrievalChannel(std::string const&)
std::vector<Grid::CFsCacheGroup::CImpl::CFileHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFileHandleEntry>>::~vector()
unsigned long* std::__copy_aux<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
vtable for Grid::IReturnBuffer
Grid::CCacheOneFileFixedBlock::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*)
Grid::CAccountSubscriptionsBillingInfoRecord::~CAccountSubscriptionsBillingInfoRecord()
Grid::CCacheServerSession::~CCacheServerSession()
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
CryptoPP::OID::BERDecode(CryptoPP::BufferedTransformation&)
Grid::CAccount::CImpl::AddAppToSubscribedMap(unsigned int, unsigned int, unsigned int, std::map<unsigned int, Grid::TAppEnabledBySubscriptionsInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>&)
Grid::CAccountPaymentCardReceiptRecord::~CAccountPaymentCardReceiptRecord()
typeinfo for CryptoPP::AES_PHM_Decryption
common::CObjFunctor<Grid::CSClient::CConnection>::~CObjFunctor()
Grid::CFsTable::GetMount(std::string const&)
typeinfo name for Grid::CReturnBufferItem<char [256]>
Grid::CCacheManifestOnly::GetManifestIterator(std::string const&)
vtable for Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException
BSL::CException::~CException()
Grid::CReturnBufferData::~CReturnBufferData()
Grid::CSClient::CService::CService()
construction vtable for CryptoPP::PK_Encryptor-in-CryptoPP::PK_FixedLengthEncryptor
Grid::CEngineLoopbackConnection::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
common::CMultiFieldBlob::CMultiFieldBlob(unsigned int, unsigned int)
Grid::CCacheOneFileFixedBlock::CImpl::ConfigureForFilesystem(Grid::CCacheDataBlock*)
Grid::CClientConnection::HandleRequestAccountsByCdKeyEmail()
Grid::CTicketExpiredException::Clone() const
Grid::CShippingInfoRecord::~CShippingInfoRecord()
typeinfo for CryptoPP::MDC<CryptoPP::SHA>
Grid::CEngineLoopbackConnection::GetCacheDecryptionKey(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
typeinfo name for Grid::CFsCacheGroup
CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::Verify(CryptoPP::HashModule*, unsigned char const*) const
typeinfo for common::CTypeMismatchException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::~_Rb_tree()
typeinfo name for CryptoPP::MD5
Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException::ThrowSelf() const
typeinfo for common::CUsedAuthenticatorTimestampsCache::CException
Grid::CCacheFileFixedFsTree::CBadFormatVersionException::~CBadFormatVersionException()
__umoddi3
std::vector<Grid::CCacheFileFixedDirectory::TEntry_mini, std::allocator<Grid::CCacheFileFixedDirectory::TEntry_mini>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheFileFixedDirectory::TEntry_mini*, std::vector<Grid::CCacheFileFixedDirectory::TEntry_mini, std::allocator<Grid::CCacheFileFixedDirectory::TEntry_mini>>>, Grid::CCacheFileFixedDirectory::TEntry_mini const&)
typeinfo for CryptoPP::RijndaelEncryption
common::CCommandStatusControl::PopStatusMessage()
Grid::CAppVersionInfoRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CAccount::CImpl::GetAppRecord(unsigned int)
common::DoNonBlockingConnectionShutdown(int)
Grid::CAllSubscriptionsRecord::CValidateFieldsException::~CValidateFieldsException()
sigslot::multi_threaded_local::lock()
typeinfo for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::MaxPlainTextLength() const
typeinfo for sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
typeinfo for CryptoPP::FileStore::ReadErr
Grid::CAccount::GetAppFilesystemInfo(unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>&, bool*, bool)
typeinfo for common::CStringTable
typeinfo for Grid::CManifestFormatException
typeinfo name for CryptoPP::TrapdoorFunction
std::vector<Grid::CFsTable::CImpl::TAppLock, std::allocator<Grid::CFsTable::CImpl::TAppLock>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CFsTable::CImpl::TAppLock*, std::vector<Grid::CFsTable::CImpl::TAppLock, std::allocator<Grid::CFsTable::CImpl::TAppLock>>>, Grid::CFsTable::CImpl::TAppLock const&)
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::SignatureLength() const
Grid::CAppVersionsRecord::~CAppVersionsRecord()
Grid::InternalSteamFindApp(unsigned int, char const*, unsigned int*, TSteamError*)
vtable for Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>
Grid::CCachePreLoader::CImpl::Disable()
common::CLogFile::CLogFile(char const*, bool, common::CLogFile::FileMode, common::CLogFile::FileLogMode)
Grid::CClientConnection::HandleLoadFileToApp()
Grid::CFsTable::CFsTable()
Grid::CLockedCDDBCache::GetCachedSubscriptionList()
Grid::InternalSteamIsSubscribed(unsigned int, unsigned int, int*, int*, TSteamError*)
Grid::CSClient::IProtocolState::~IProtocolState()
Grid::CCacheOneFileFixedBlock::CancelRead(unsigned int)
Grid::CEngineDisconnectException::Clone() const
vtable for common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException
CryptoPP::AbstractRing<CryptoPP::Integer>::SimultaneousExponentiate(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>::~ScopeGuardImpl1()
Grid::ICache::CReadException::Clone() const
Grid::CClientConnection::HandleGetCurrentCellID()
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState::~CRecvDataChunkState()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::~_Rb_tree()
CEnvironmentTweaker::~CEnvironmentTweaker()
CryptoPP::Integer::ConvertToLong() const
Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
void std::_Destroy_aux<false>::__destroy<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile*>(Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile*, Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsBuffer>> const&)
Grid::CSClient::CReadFileChecksumTableFSM::s_RecvDataChunkState
Grid::CNewValveCDKeyGenerator::CNewValveCDKeyGenerator(std::string const&, std::string const&)
CryptoPP::CFBDecryption::ProcessByte(unsigned char)
common::ObjFunctorImpl1<Grid::CCommandThreadPool, void (Grid::CCommandThreadPool::*)(common::CThread*), common::CThread*>::~ObjFunctorImpl1()
Grid::CCacheManifestOnly::Flush()
ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>::~ObjScopeGuardImpl0()
Grid::ICacheGroupIteratorImpl::Read(unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*)
common::CEventLoopThread::~CEventLoopThread()
typeinfo name for Grid::CAccountSubscriptionsBillingInfoRecord
Grid::CClientConnection::HandleGetAppIds()
CryptoPP::ModularArithmetic::One() const
typeinfo name for CryptoPP::BERDecodeErr
common::IValueIteratorImpl::~IValueIteratorImpl()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>*)
typeinfo for arg::typed_reference<Grid::IResourceList>
Grid::CAccount::Unsubscribe(common::CCommandStatusControl&, unsigned int)
ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
WSASend(int, iovec*, unsigned int, unsigned int*, unsigned int, Overlapped_t*, void (*)(unsigned int, unsigned int, Overlapped_t*, unsigned int))
DW.ref._ZTIN6common15CMultiFieldBlob27CFieldDoesNotExistExceptionE
common::CBlobRegistry::OpenSubKeyReadOnly(std::string const&)
Grid::CFileIdChecksumTable::CCorruptSerializedVersionException::~CCorruptSerializedVersionException()
typeinfo name for sigslot::has_slots<sigslot::multi_threaded_local>
std::map<std::string, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CThreadSafeCountedPtr<Grid::CTicketCache::CImpl>>>>::~map()
Grid::CUnknownInternalException::Clone() const
Grid::ICache::GetSponsorUrl()
vtable for Grid::CAllSubscriptionsRecord::CValidateFieldsException
Grid::CAccountUserRecord::CValidateFieldsException::~CValidateFieldsException()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo> const&)
Grid::CFsBuffer::~CFsBuffer()
virtual thunk to CryptoPP::HashFilter::~HashFilter()
Grid::CManifestIterator::~CManifestIterator()
CryptoPP::ByteQueue::Walker::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
common::CSubKeyIterator::~CSubKeyIterator()
vtable for Grid::CAppSubscriptionIdsRecord::CValidateFieldsException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>, std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo> const&)
CryptoPP::SHA::SHA()
CryptoPP::CFBEncryption::~CFBEncryption()
typeinfo for Grid::CSClient::CBlockingLogoutCompletionHandler
std::vector<void*, std::allocator<void*>>::~vector()
virtual thunk to CryptoPP::Filter::AttachedTransformation()
Grid::CFsCacheGroup::CFsCacheGroup(unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&)
Grid::InternalSteamFindNext64(unsigned int, unsigned int, TSteamElemInfo64*, TSteamError*)
typeinfo name for common::IValueIteratorImpl
Grid::CCacheOneFileFixedBlock::CImpl::ReadHandlerProc(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
vtable for Grid::CTicketExpiredException
__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long>>>::__normal_iterator(unsigned long* const&)
typeinfo for CryptoPP::PK_Decryptor
typeinfo for Grid::ICache::COpenException
Grid::CFs::CUnknownException::Clone() const
vtable for Grid::CPipeComm::CBrokenPipeException
Grid::CReturnBufferItem<TSteamUpdateStats>::Send(Grid::CPipeComm*)
Grid::ICache::CReadException::ThrowSelf() const
Grid::CShippingInfoRecord::CValidateFieldsException::Clone() const
sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>::duplicate(sigslot::has_slots<sigslot::multi_threaded_local>*)
vtable for Grid::CLocalClockSkewException
Grid::CCacheQueueManager::~CCacheQueueManager()
BSL::CUnpackedTime::CFromStringInvalidCharacter::~CFromStringInvalidCharacter()
std::_Rb_tree<common::CThreadLocalBase*, common::CThreadLocalBase*, std::_Identity<common::CThreadLocalBase*>, std::less<common::CThreadLocalBase*>, std::allocator<common::CThreadLocalBase*>>::_M_erase(std::_Rb_tree_node<common::CThreadLocalBase*>*)
CryptoPP::StringSinkTemplate<std::string>::~StringSinkTemplate()
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyStatusState::~CRecvSessionLoginReplyStatusState()
virtual thunk to CryptoPP::PK_FixedLengthCryptoSystem::CipherTextLength(unsigned int) const
Grid::CEngineConnection::StartLoadingCache(unsigned int, TSteamError*)
CryptoPP::BERGeneralDecoder::PeekByte() const
Grid::CEngineLoopbackConnection::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
Grid::CTicketCache::CImpl::SetUser2(std::string const&, common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>&)
CBlockingUDPSocket::CBlockingUDPSocket()
Grid::CAccount::CImpl::InitSignalSlots(bool)
Grid::CCacheServerSession::IsExpired()::s_ctimeConnectionTimeout
typeinfo for Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState
common::CThreadSafeCountedPtr<Grid::CAppStatus>::~CThreadSafeCountedPtr()
CryptoPP::StreamCipher::~StreamCipher()
typeinfo name for Grid::CAccountUserPasswordsRecord::CValidateFieldsException
VTT for CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
Grid::CEngineConnection::IsAppSubscribed(unsigned int, int*, int*, TSteamError*)
non-virtual thunk to CryptoPP::RandomPool::~RandomPool()
Grid::CClientConnection::HandleOpenFile()
Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>::CCacheReadHandlerFunctor(Grid::CCacheManifestOnly::CImpl*, void (Grid::CCacheManifestOnly::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
std::vector<common::CWSABUFWrapper::TWSABUFInfo, std::allocator<common::CWSABUFWrapper::TWSABUFInfo>>::~vector()
CryptoPP::AES_PHM_Encryption::Put(unsigned char const*, unsigned int)
vtable for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState
typeinfo name for Grid::CCacheFileFixedFsTree::CBadFormatVersionException
common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>::operator()()
virtual thunk to CryptoPP::HexDecoder::~HexDecoder()
ScopeGuardImpl2<void (*)(unsigned int, common::CLogContext*), unsigned int, common::CLogContext*>::~ScopeGuardImpl2()
typeinfo for CryptoPP::ByteQueue::Walker
vtable for ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>
Grid::CCachePreLoader::CImpl::Thread()
common::CThreadSafeCountedPtr<Grid::CValidationLogger>::dispose()
Grid::CClientConnection::HandleDeleteAccount()
CryptoPP::TrialDivision(CryptoPP::Integer const&, unsigned int)
common::CThreadSafeCountedPtr<Grid::CCSERServerAddressCache>::~CThreadSafeCountedPtr()
common::CThreadSafeCountedPtr<sigslot::_connection_base1<unsigned int, sigslot::multi_threaded_local>>::dispose()
typeinfo for Grid::CAccountPendingException
typeinfo name for Grid::CCannotCreateCacheFileException
typeinfo name for common::CMultiFieldBlob::CFieldAlreadyExistsException
common::CValueIterator::operator!=(common::CValueIterator const&) const
Grid::CEngineConnection::CallbackThreadProc()
Grid::CFs::Putc(unsigned int, int, unsigned int)
Grid::CFs::CSeekException::~CSeekException()
CryptoPP::ByteQueue::Walker::Peek(unsigned char&) const
unsigned long* std::__copy_normal<false, false>::__copy_n<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
Grid::InternalSteamGetAppIds(unsigned int, unsigned int*, unsigned int, TSteamError*)
typeinfo name for CryptoPP::FileStore::OpenErr
Grid::CNotFoundException::ThrowSelf() const
typeinfo name for Grid::CAllDiscountQualifiersRecord::CValidateFieldsException
Grid::InternalSteamRefreshAccountInfo(unsigned int, int, int, TSteamError*)
Grid::CAccount::RequestAccountsByCdKeyEmail(common::CCommandStatusControl&, std::string const&)
common::CTypeMismatchException::ThrowSelf() const
vtable for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState
Grid::CSClient::CService::GetSponsorUrl(unsigned int, std::string*)
common::CThreadSafeCountedPtr<Grid::CClientContentTicket>* std::__uninitialized_copy<false>::uninitialized_copy<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*>(common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*)
Grid::CCacheFileFixedDirectory::GetEntryData(unsigned int, Grid::CCacheFileFixedDirectoryEntry*) const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState::~CRecvDataChunkState()
typeinfo name for CryptoPP::InvertibleRSAFunction
void std::_Destroy_aux<false>::__destroy<Grid::CFsCacheGroup::CImpl::CFileHandleEntry*>(Grid::CFsCacheGroup::CImpl::CFileHandleEntry*, Grid::CFsCacheGroup::CImpl::CFileHandleEntry*)
Grid::CFsTable::CImpl::CImpl()
Grid::CEngineNotRunningException::ThrowSelf() const
Grid::InternalSteamRefreshLogin(unsigned int, char const*, int, TSteamError*)
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::operator[](unsigned int const&)
void std::_Destroy_aux<false>::__destroy<Grid::CCacheGroup::TCacheGroupEntry*>(Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*)
Grid::CActivityLog::CActivityLog(bool, bool, char const*, common::CLogFile::FileMode, common::CLogFile::FileLogMode)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::DivisionAlgorithm(CryptoPP::Integer&, CryptoPP::Integer&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
CryptoPP::MontgomeryRepresentation::Square(CryptoPP::Integer const&) const
Grid::CFsTable::CImpl::Checkout(std::vector<std::string, std::allocator<std::string>> const&)
common::CBlobKey::CPublicKey::DeleteValue(std::string const&)
Grid::CAllAppsRecord::CValidateFieldsException::ThrowSelf() const
typeinfo for Grid::CFileIdChecksumTable::CCorruptSerializedVersionException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::~_Rb_tree()
common::CValueDoesNotExistException::ThrowSelf() const
Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::Rijndael::Rijndael(unsigned char const*, unsigned int)
std::vector<Grid::CCacheReplacementLru::TLru32, std::allocator<Grid::CCacheReplacementLru::TLru32>>::~vector()
common::CBlobRegistry::~CBlobRegistry()
Grid::CBadLaunchConfigException::~CBadLaunchConfigException()
Grid::CFsCacheGroup::~CFsCacheGroup()
typeinfo name for sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>
Grid::CMustBeOnlineException::CMustBeOnlineException()
common::CRuntimeError::~CRuntimeError()
Grid::CEngineLoopbackConnection::ReadFile(void*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::CAppVersionInfoRecord::CValidateFieldsException::~CValidateFieldsException()
common::CThreadSafeCountedPtr<Grid::CBinaryLogFile>::~CThreadSafeCountedPtr()
common::CMultiFieldBlob::TFieldDescriptor::~TFieldDescriptor()
Grid::CClientRegistry::Cleanup()
typeinfo name for Grid::CManifestReadException
ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>::ExecuteNowIfNotDismissed() const
ResetEvent(void*)
vtable for Grid::CPipeComm
virtual thunk to CryptoPP::FileStore::~FileStore()
Grid::CClientToASProtocolOutOfDateException::~CClientToASProtocolOutOfDateException()
CryptoPP::BlockingRng::~BlockingRng()
Grid::CCacheManifestOnly::CImpl::DecryptFile(Grid::CManifestIterator&, common::CCommandStatusControl*)
vtable for Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException
Grid::CFs::GetFlags(unsigned int, char const*, unsigned int*)
Grid::CFsTable::IsUserUsingApp(std::string const&, unsigned int, unsigned int*)
typeinfo name for sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>
vtable for Grid::CCacheGroupIterator
Grid::CFsCacheGroup::CImpl::FindNextLocal(unsigned int, TSteamElemInfo64*)
CryptoPP::AsymmetricMultiply(unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
common::CBlobSubKeyIterator::~CBlobSubKeyIterator()
typeinfo for BSL::CTime::CTimeToPackOutOfRange
unsigned long* std::copy_backward<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*)
vtable for Grid::CFileIdChecksumTable::CCorruptSerializedVersionException
Grid::CFs::CBadHandleException::~CBadHandleException()
Grid::ICacheGroupIteratorImpl::CInvalidCache::~CInvalidCache()
Grid::CSplitPath::GetRelativePath() const
common::CSocketCommandAbortedByCallerException::~CSocketCommandAbortedByCallerException()
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CFs::CNotFoundException::CNotFoundException(common::CErrorCodeException::ESpecificType)
CryptoPP::ByteQueue::ByteQueue(unsigned int)
CryptoPP::ByteQueue::~ByteQueue()
Grid::ICache::CReadException::~CReadException()
typeinfo name for Grid::ICache::CCacheNeedsDecryptionException
typeinfo name for CryptoPP::HexEncoder
Grid::CMutexGuard::CTimeoutException::~CTimeoutException()
common::ISubKeyIteratorImpl::ISubKeyIteratorImpl()
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
construction vtable for CryptoPP::Filter-in-CryptoPP::HexDecoder
std::string* std::__uninitialized_copy_aux<std::string*, std::string*>(std::string*, std::string*, std::string*, std::__false_type)
Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState::~CRecvNextCompressedBlockChunkState()
Grid::CCacheOneFileFixedBlock::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long, unsigned int)
Grid::CFsBuffer::Unlock()
Grid::CClientAuthenticationTicket::~CClientAuthenticationTicket()
Grid::GetGeneralDirectoryServer_GetServerDNSFallbackIPAddrPorts()
Grid::CCachePreLoader::Forget(Grid::ContentPriority::ERequestLevel)
CryptoPP::CBCPaddedDecryptor::FirstPut(unsigned char const*)
Grid::IFsStrategy::IFsStrategy()
ObjScopeGuardImpl1<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CTicketCache::CImpl, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int>(Grid::CTicketCache::CImpl&, void (Grid::CTicketCache::CImpl::*)(unsigned int), unsigned int)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Reduce(CryptoPP::Integer&, CryptoPP::Integer const&) const
Grid::IServerAddressCache::GetAllAddresses()
CryptoPP::AES_PHM_AppendToBuffer(CryptoPP::SecBlock<unsigned char>&, unsigned int&, unsigned int&, unsigned char const*, unsigned int)
Grid::CSClient::CLoginFSM::s_RecvSessionLoginReplyArgsState
Grid::CCacheOneFileFixedBlock::CImpl::ServerReadRequest(unsigned int, Grid::CCacheQueueEntry&, unsigned int, Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler*)
Grid::CEngineLoopbackConnection::GetSubscriptionReceipt(unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
Grid::CFsTable::CImpl::RemoveClientViewOfMount(unsigned int, unsigned int, bool)
CryptoPP::BufferedTransformation::CopyMessagesTo(CryptoPP::BufferedTransformation&, unsigned int) const
common::CMultiFieldBlob::CInvalidSerializedBlobException::~CInvalidSerializedBlobException()
Grid::CAccountSubscriptionBillingInfoRecord::~CAccountSubscriptionBillingInfoRecord()
Grid::CFs::CUnknownException::~CUnknownException()
vtable for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>
Grid::CCacheManifestOnly::IsPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long)
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(std::string const&), std::string>::~ObjScopeGuardImpl1()
typeinfo for CryptoPP::StreamCipher
vtable for ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>
ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>::ExecuteNowIfNotDismissed() const
typeinfo for common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException
typeinfo name for Grid::CUserAppAccessRightsRecord
vtable for CryptoPP::RijndaelDecryption
Grid::CClientManager::CImpl::~CImpl()
vtable for Grid::CEngineConnection
std::auto_ptr<Grid::CCacheFileFixedDirectory>::reset(Grid::CCacheFileFixedDirectory*)
vtable for common::CRuntimeError
Grid::IServerAddressCache::GetCurrentAddress()
typeinfo for CryptoPP::DigestVerifier
Grid::CSClient::CBlockingReadManifestHandler::~CBlockingReadManifestHandler()
typeinfo for Grid::ICache::CMultipleCacheInstanceException
Grid::CPipeComm::Write(void const*, unsigned int)
virtual thunk to CryptoPP::Store::Put(unsigned char const*, unsigned int)
std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, unsigned long long>, std::_Select1st<std::pair<unsigned long long const, unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long long>>>::~_Rb_tree()
common::CRuntimeError::~CRuntimeError()
Grid::CUnknownInternalException::CUnknownInternalException(std::string const&)
Grid::CMasterResourceList::AddInternal(arg::counted_ptr<Grid::IResourceList>, Grid::ContentPriority::ERequestLevel, bool, bool)
BSL::CTime& BSL::CTime::FromStr<std::string>(std::string const&)
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState::~CRecvSessionLoginReplyArgsState()
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(char const*, Grid::CCacheGroup*, unsigned int)
vtable for common::IKey
inflateReset
std::vector<void*, std::allocator<void*>>::reserve(unsigned int)
_splitpath(char const*, char*, char*, char*, char*)
Grid::CResourceListStrings::GetPriority()
Grid::CSClient::CSession::CompleteSend(unsigned int, unsigned int)
CloseFile(void*)
typeinfo name for Grid::CCacheQueueEntry
CryptoPP::RandomPool::RandomPool(unsigned int)
typeinfo for Grid::CMutexGuard::CTimeoutException
Grid::CBadCallerErrorStructPtrException::~CBadCallerErrorStructPtrException()
Grid::CUserAppAccessRightsRecord::CValidateFieldsException::~CValidateFieldsException()
common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException::~CReusedAuthenticatorException()
Grid::CCacheOneFileFixedBlock::CImpl::CCacheFileLock::~CCacheFileLock()
Grid::CFailedToFindMasterAuthenticationServerException::ThrowSelf() const
typeinfo name for common::CEventLoopThread::CException
CryptoPP::DERSequenceEncoder::~DERSequenceEncoder()
Grid::CErrnoErrorException::~CErrnoErrorException()
CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
typeinfo name for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState
DW.ref._ZTIN6common19CConnResetExceptionE
common::CSocketCommandAbortedByCallerException::Clone() const
Grid::CClientConnection::HandleReadFile64()
sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>::slot_disconnect(sigslot::has_slots<sigslot::multi_threaded_local>*)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroup() const
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState::~CRecvSizeOfNextCompressedBlockState()
typeinfo for common::CBlobValueIterator
CryptoPP::Filter::AttachedTransformation()
__gnu_cxx::__normal_iterator<char*, std::string>::operator*() const
Grid::CAppVersionInfoRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAppLaunchOptionsRecord::ValidateFields(std::ostream*, unsigned int)
std::vector<common::CThreadSafeCountedPtr<common::CThread>, std::allocator<common::CThreadSafeCountedPtr<common::CThread>>>::~vector()
Grid::InternalSteamOpenFile64(unsigned int, char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)
deflateReset
common::CAssertObserverGuard<common::CDefaultAssertCatcher>::~CAssertObserverGuard()
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Subtract(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CSClient::CConnection::SelectedRecvWithTimeout(common::CWSABUFWrapper&, common::CCommandStatusControl*)
typeinfo name for Grid::IServerAddressCache
typeinfo for ScopeGuardImpl1<int (*)(int), int>
Grid::CCacheFileFixedDirectory::~CCacheFileFixedDirectory()
Grid::InternalSteamRequestForgottenPasswordEmail(unsigned int, char const*, char*, TSteamError*)
common::CMultiFieldBlob::CRequiresDecryptionKeyException::~CRequiresDecryptionKeyException()
arg::generic_reference::counted_ptr_body::~counted_ptr_body()
std::vector<std::vector<unsigned int, std::allocator<unsigned int>>, std::allocator<std::vector<unsigned int, std::allocator<unsigned int>>>>::~vector()
typeinfo name for common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::~_Rb_tree()
Grid::CEngineLoopbackConnection::GetAppStats(TSteamAppStats*, TSteamError*)
typeinfo for sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>
typeinfo for ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>
std::_Deque_base<std::pair<aiocb*, unsigned long>, std::allocator<std::pair<aiocb*, unsigned long>>>::_M_initialize_map(unsigned int)
common::CObjFunctor<Grid::CAccount::CImpl>::~CObjFunctor()
vtable for CryptoPP::RandomNumberGenerator
Grid::CNewValveCDKeyGenerator::sc_cObfusticationTable
Grid::CCacheDataBlock::DecrementNumBlocksInUse()
Grid::CSClient::CReadManifestFSM::DoAbort(common::ICloneableException const&)
Grid::InternalSteamPutc(unsigned int, int, unsigned int, TSteamError*)
common::CHierarchicalNamedArgs::CHierarchicalNamedArgs(common::CNamedArgs const&)
common::CBlobKey::DeleteSubKey(std::string const&)
Grid::CAppRecord::CAppRecord(char const*, unsigned char const*, unsigned int)
ScopeGuardImpl1<int (*)(int), int>::ExecuteNowIfNotDismissed() const
typeinfo name for CryptoPP::MessageQueue
vtable for ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>
CryptoPP::ArraySink::~ArraySink()
DeleteFile(char const*)
DW.ref._ZTIN4Grid20CFileIdChecksumTable34CCorruptSerializedVersionExceptionE
common::CLog::CLog()
Grid::ICache::CNotFoundException::Clone() const
construction vtable for CryptoPP::Filter-in-CryptoPP::StringSource
typeinfo name for Grid::CAccountPaymentCardInfoRecord
Grid::CAccount::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*)
std::vector<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>, std::allocator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>*, std::vector<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>, std::allocator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>>, std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>> const&)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>::ExecuteNowIfNotDismissed() const
Grid::CClientConnection::HandleGetTotalUpdateStats()
Grid::CEngineConnection::GetEncryptedUserIDTicket(void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
vtable for CryptoPP::BlockTransformation
Grid::CAppSubscriptionIdsRecord::~CAppSubscriptionIdsRecord()
vtable for common::CObjFunctor<Grid::CAccount::CImpl>
Grid::CAccountIsDisabledException::ThrowSelf() const
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
common::CFindFile::~CFindFile()
typeinfo name for CryptoPP::FileSink
Grid::CManifestBin::CManifestBin(unsigned char const*, unsigned int, long)
typeinfo name for CryptoPP::FileSource
construction vtable for CryptoPP::PK_FixedLengthEncryptor-in-CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
CryptoPP::BufferedTransformation::Get(unsigned char*, unsigned int)
Grid::CEngineLoopbackConnection::IsAccountNameInUse(char const*, int*, TSteamError*)
Grid::CSClient::CReadManifestFSM::CSendRequestState::~CSendRequestState()
Grid::ICache::s_InstantiatedCacheSet
__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long>>>::operator*() const
CryptoPP::AES_PHM_Decryption::Put(unsigned char)
typeinfo name for Grid::CManifestIterator
CryptoPP::PrimeSieve::NextCandidate(CryptoPP::Integer&)
Grid::InternalSteamIsFileImmediatelyAvailable(unsigned int, char const*, TSteamError*)
Grid::CAccount::~CAccount()
Grid::CAccount::CImpl::s_sTimeLastUpdatedAccountRecordValueName
__deregister_frame_info
CryptoPP::OAEP_P_DEFAULT
common::CThreadSafeCountedPtr<Grid::CClientContentTicket>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*>(common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*)
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
std::_Rb_tree<unsigned long, std::pair<unsigned long const, CAsyncIOManager::data_t*>, std::_Select1st<std::pair<unsigned long const, CAsyncIOManager::data_t*>>, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, CAsyncIOManager::data_t*>>>::_M_insert_unique(std::pair<unsigned long const, CAsyncIOManager::data_t*> const&)
vtable for Grid::CCacheBatBlock
common::IRegistry::IRegistry()
common::CBlobKey::CPublicKey::ValueExists(std::string const&)
GetModuleHandle(char const*)
Grid::CCacheOneFileFixedBlock::CImpl::CCacheReadHandlerFunctor<Grid::CCacheOneFileFixedBlock::CImpl>::CCacheReadHandlerFunctor(Grid::CCacheOneFileFixedBlock::CImpl*, void (Grid::CCacheOneFileFixedBlock::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>>::reserve(unsigned int)
std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>::~pair()
Grid::CFileIdChecksumTable::GetSignature() const
Grid::CFsTable::CImpl::TClientInfo::~TClientInfo()
typeinfo name for ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>
Grid::CAppRecord::GetCurrentVersionId()
AcquireSemaphore(void*, unsigned int)
common::IRegistry::~IRegistry()
CryptoPP::RecursiveMultiplyTop(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned long const*, unsigned int)
Grid::CCellIDManager::SetNewCellID(unsigned int, unsigned int)
Grid::CFileIdChecksumTable::CException::Clone() const
typeinfo for Grid::CActivityLog
CMessageBuffer::MSG_WriteByte(int)
typeinfo name for Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockState
Grid::CResourceListFile::CResourceListFile(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::string const&, std::string const&, Grid::ContentPriority::ERequestLevel)
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::~_Rb_tree()
Grid::CAccount::CImpl::~CImpl()
common::CExceptionHolder::ThrowIfCaught() const
typeinfo name for Grid::CEngineDisconnectException
Grid::CEngineLoopbackConnection::UpdateAccountBillingInfo(TSteamPaymentCardInfo const*, TSteamError*)
Grid::CSClient::CBlockingReadFileCompletionHandler::~CBlockingReadFileCompletionHandler()
void common::OutputXMLElement<BSL::CTime>(char const*, BSL::CTime const&, std::ostream&, unsigned int)
virtual thunk to CryptoPP::MessageQueue::~MessageQueue()
Grid::CCacheOneFileFixedBlock::CImpl::FlushFile(Grid::CManifestIterator&)
Grid::CClientConnection::HandleChangeForgottenPassword()
Grid::IFsStrategy::~IFsStrategy()
CryptoPP::Integer::operator--()
Grid::CFs::CBadMountException::ThrowSelf() const
Grid::CClientConnection::HandleWaitForResources()
vtable for arg::generic_reference
Grid::CCacheQueueManager::SetSessionHandle(unsigned int, unsigned int)
common::CLog::DisableThreadId()
virtual thunk to CryptoPP::BERSequenceDecoder::~BERSequenceDecoder()
virtual thunk to CryptoPP::CBCPaddedDecryptor::~CBCPaddedDecryptor()
common::CLogContext::~CLogContext()
Grid::CFs::CNotFoundException::~CNotFoundException()
std::vector<std::vector<CryptoPP::Integer, std::allocator<CryptoPP::Integer>>, std::allocator<std::vector<CryptoPP::Integer, std::allocator<CryptoPP::Integer>>>>::~vector()
CryptoPP::HexEncoder::~HexEncoder()
vtable for Grid::CSubscriberAccountRecord
std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheGroup::TFileIndex*, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>>, Grid::CCacheGroup::TFileIndex const&)
Grid::IManifestIteratorImpl::IsEncryptedFile() const
Grid::CSClient::CConnection::SelectedConnectWithTimeout(common::CCommandStatusControl*)
common::CRegistryException::Clone() const
vtable for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState
ObjScopeGuardImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::~ObjScopeGuardImpl0()
Grid::CCachePreLoader::CImpl::CReadCompletionHandler::CompleteRead(common::ICloneableException const*, unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
Grid::CTicketExpiredException::~CTicketExpiredException()
Grid::CEngineLoopbackConnection::GetSubscriptionPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
GetCurrentThreadId()
vtable for Grid::CSubscriptionRecord
construction vtable for CryptoPP::DigestVerifier-in-CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::CAppRecord::~CAppRecord()
std::vector<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>, std::allocator<std::pair<void*, common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>>::~vector()
Grid::CFs::Flush(unsigned int, unsigned int)
std::vector<unsigned long, std::allocator<unsigned long>>::size() const
Grid::CSClient::COperationCancelledException::Clone() const
Grid::CEngineConnection::MountFilesystem(unsigned int, char const*, TSteamError*)
typeinfo name for ISteamInterface
common::IKey::AcceptVisitor(common::IVisitor&)
Grid::CNotSubscribedException::~CNotSubscribedException()
std::pair<std::string const, std::string>::~pair()
arg::grin_ptr<common::CLogContext::TLogContextImpl>::my_copy_ftn(common::CLogContext::TLogContextImpl const*)
common::CEventLoopThread::s_tsrcpNullTimeoutFunctor
common::CCommandStatusControl::PushStatusMessage(std::string const&)
Grid::ICache::CMultipleCacheInstanceException::~CMultipleCacheInstanceException()
Grid::CBadCallerErrorStructPtrException::CBadCallerErrorStructPtrException()
Grid::CSClient::CReadFileChecksumTableFSM::~CReadFileChecksumTableFSM()
typeinfo name for common::CConnResetException
Grid::CEngineLoopbackConnection::GetUserType(unsigned int*, TSteamError*)
common::CThreadSafeCountedPtr<Grid::CCellIDManager>::dispose()
common::CBlobKey::CBlobKey(common::CMultiFieldBlob*, std::string const&, common::CBlobRegistry&, common::CFastThreadMutex&, bool)
typeinfo for common::CNetworkException
CryptoPP::RijndaelDecryption::ProcessBlock(unsigned char const*, unsigned char*) const
Grid::ICommandState::s_CleanupList
typeinfo for Grid::CAccountPrepurchaseInfoRecord
Grid::ICacheGroupIteratorImpl::operator<(Grid::ICacheGroupIteratorImpl const&)
Grid::CSClient::CSession::Reconnect()
typeinfo name for CryptoPP::PublicKeyBaseTemplate<CryptoPP::RSAFunction>
Grid::CTicketCache::ClearTicketsAndPassphrase()
vtable for common::CLogContextFunctor
ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>::~ObjScopeGuardImpl0()
Grid::CCacheManifestOnly::GetCacheUsageStats(unsigned long long*, unsigned long long*)
Grid::CCacheGroup::size()
VTT for CryptoPP::Source
Grid::CFileIdChecksumTable::GetSerializedVersion(unsigned int*) const
Grid::CSClient::IProtocolFSM::BuildMessageHeaderInSendBuffer(unsigned char, unsigned int)
Grid::CCacheQueueManager::CImpl::CImpl(unsigned int, unsigned int (*)(void*), void*)
Grid::CCacheServerSessionMgr::GetNextAvailableSession()
vtable for Grid::CSClient::IBlockingCompletionHandler
CryptoPP::Store::GetNextMessage()
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~CryptoSystemBaseTemplate()
typeinfo name for CryptoPP::IteratedHash<unsigned long, true, 64u>
ScopeGuardImplBase::ExecuteNowIfNotDismissed() const
common::CThreadSafeCountedPtr<Grid::TFileEntry_t>::dispose()
vtable for BSL::CUnpackedTime::CFromStringInvalidLength
std::vector<TSteamAppDependencyInfo, std::allocator<TSteamAppDependencyInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<TSteamAppDependencyInfo*, std::vector<TSteamAppDependencyInfo, std::allocator<TSteamAppDependencyInfo>>>, TSteamAppDependencyInfo const&)
typeinfo for Grid::CManifestChecksumException
Grid::CEngineConnection::GetOfflineStatus(TSteamOfflineStatus*, TSteamError*)
CryptoPP::CBCPaddedEncryptor::LastPut(unsigned char const*, unsigned int)
common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>::CThreadSafeCountedPtr(Grid::CClientAuthenticationTicket*)
CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool()
BSL::CException::Format(bool, char const*) const
std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int>>::~set()
typeinfo for Grid::CSClient::IProtocolState
common::DoSelectedReceiveThrowOnAbort(int, common::CWSABUFWrapper&, common::CCommandStatusControl*)
common::CMultiFieldBlob::CStringFieldNotTerminatedException::~CStringFieldNotTerminatedException()
RecursiveProcessDependencyChange(Grid::CCacheGroupIterator&, std::string const&, common::CThreadSafeCountedPtr<Grid::ICache>&, std::string const&, unsigned int, bool)
CryptoPP::BufferedTransformation::Peek(unsigned char*, unsigned int) const
common::CBlobRegistry::DeleteImpl()
CreateEvent(void*, int, int, char const*)
vtable for common::CInUseException
typeinfo for common::CThread::CThreadAlreadyRunningException
Grid::CNewValveCDKeyGenerator::sc_cCodonToAsciiTable
vtable for CryptoPP::SHA
vtable for common::CValueDoesNotExistException
Grid::CAccountExternalBillingInfoRecord::~CAccountExternalBillingInfoRecord()
vtable for Grid::CSClient::CReadFileFSM
typeinfo for Grid::CFsTable
typeinfo for ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::Update(unsigned char const*, unsigned int)
Grid::CClientRegistry::s_sRegistryFileName
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::Store
ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>::ExecuteNowIfNotDismissed() const
CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::SignatureLength() const
vtable for Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState
std::string BSL::I2ES<int>(int, int, int)
Grid::CCacheFileFixedFsTree::CBadFormatVersionException::Clone() const
Grid::CCacheGroup::GenerateFileList(std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>*)
typeinfo name for CryptoPP::CipherMode
Grid::CSClient::CException::Clone() const
Grid::CAllDiscountQualifiersRecord::CValidateFieldsException::~CValidateFieldsException()
sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>::getdest() const
std::map<unsigned int, Grid::TAppEnabledBySubscriptionsInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TAppEnabledBySubscriptionsInfo>>>::operator[](unsigned int const&)
typeinfo for Grid::CClientToASProtocolOutOfDateException
CryptoPP::MultiplyByPower2Mod(unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
Grid::CCacheDescBlock::CCacheDescBlock(_IO_FILE*)
CryptoPP::IteratedHashBase<unsigned long>::DigestSize() const
common::CValue::s_sTypeNames
typeinfo for common::CValueIterator
common::CInUseException::CInUseException()
ObjScopeGuardImpl0<Grid::CPipeComm, void (Grid::CPipeComm::*)()>::~ObjScopeGuardImpl0()
Grid::CSClient::CService::CService()
Grid::CSubscriptionRecord::ValidateFields(std::ostream*, unsigned int)
typeinfo for Grid::CClientBinaryManifestRecord
typeinfo name for Grid::CClientAuthenticationTicket::CValidateFieldsException
typeinfo for Grid::CRateLimitRecord::CValidateFieldsException
typeinfo name for BSL::CUnpackedTime::CFromStringInvalidLength
common::CWSABUFWrapper::FinishedExtracting()
Grid::CPreauthenticationFailedException::~CPreauthenticationFailedException()
__gnu_cxx::hash_map<int, Handle_t*, __gnu_cxx::hash<int>, std::equal_to<int>, std::allocator<Handle_t*>>::~hash_map()
typeinfo name for CryptoPP::BERSequenceDecoder
Grid::CAppLaunchOptionsRecord::~CAppLaunchOptionsRecord()
CryptoPP::DERGeneralEncoder::DERGeneralEncoder(CryptoPP::BufferedTransformation&, unsigned char)
CryptoPP::RandomPool::RandomPool(unsigned int)
typeinfo for Grid::CResourceListStrings
sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>::emit(unsigned int)
Grid::CEngineLoopbackConnection::Putc(int, unsigned int, TSteamError*)
Grid::CFsCacheGroup::CImpl::FindFirstLocal(Grid::CSplitPath const&, TSteamElemInfo64*, unsigned int*, bool)
Grid::IManifestIteratorImpl::IsValid() const
Grid::CClientConnection::HandleGetCachePercentFragmentation()
Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException::~CSignatureCheckFailedException()
Grid::CCacheBatBlock::~CCacheBatBlock()
Grid::CCachePreLoader::~CCachePreLoader()
common::CCountedPtr<CryptoPP::RandomNumberGenerator>::~CCountedPtr()
typeinfo for Grid::CCacheQueueEntry
Grid::CFsTable::CImpl::ReleaseMultipleCacheLocks(std::vector<std::string, std::allocator<std::string>> const&)
std::set<unsigned long, std::less<unsigned long>, std::allocator<unsigned long>>::~set()
typeinfo name for Grid::IReturnBuffer
vtable for Grid::CAppFilesystemRecord
typeinfo name for Grid::CAllAppsPublicKeysRecord
typeinfo for Grid::IManifestIteratorImpl
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TSubscriptionInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TSubscriptionInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TSubscriptionInfo>>>::~_Rb_tree()
Grid::CFs::CBadArgException::ThrowSelf() const
typeinfo name for Grid::ICache::CMultipleCacheInstanceException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>> const&)
typeinfo for Grid::CSClient::CBlockingLoginCompletionHandler
CryptoPP::FileSink::~FileSink()
common::CRegistryException::~CRegistryException()
CryptoPP::Integer::Integer()
common::CMultiFieldBlob::RemoveField(unsigned short, unsigned char const*)
typeinfo for Grid::CAllDiscountsRecord
typeinfo name for common::CBlobKey
construction vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
std::vector<std::pair<common::RemoteFileHarvest::EFileType, std::string>, std::allocator<std::pair<common::RemoteFileHarvest::EFileType, std::string>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<std::pair<common::RemoteFileHarvest::EFileType, std::string>*, std::vector<std::pair<common::RemoteFileHarvest::EFileType, std::string>, std::allocator<std::pair<common::RemoteFileHarvest::EFileType, std::string>>>>, std::pair<common::RemoteFileHarvest::EFileType, std::string> const&)
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::_M_copy(std::_Rb_tree_node<std::pair<std::string const, common::CNamedArgs>> const*, std::_Rb_tree_node<std::pair<std::string const, common::CNamedArgs>>*)
typeinfo name for CryptoPP::DERSequenceEncoder
Grid::CAccount::CImpl::UpdateLicensesFromSteam3()
std::vector<unsigned long, std::allocator<unsigned long>>::operator[](unsigned int)
ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::~ObjScopeGuardImpl0()
common::CConnResetException::~CConnResetException()
typeinfo name for Grid::CAllDiscountsRecord
CryptoPP::FileSink::MessageEnd(int)
Grid::CAllDiscountsRecord::~CAllDiscountsRecord()
vtable for Grid::CCSERServerAddressCache
std::allocator<std::string>::allocator()
common::CWSABUFWrapper::ExtractNext(unsigned int*)
Grid::InternalSteamPauseCachePreloading(unsigned int, unsigned int, TSteamError*)
Grid::CFs::CFileAccessRightsException::~CFileAccessRightsException()
Grid::CFs::CBadMountException::CBadMountException(common::CErrorCodeException::ESpecificType)
Grid::CAppVersionInfoRecord::IsNotAvailable()
Grid::CSClient::CSession::Abort(std::auto_ptr<common::ICloneableException>)
StaticInitializers::~StaticInitializers()
Grid::CFsCacheGroup::CImpl::~CImpl()
std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>::~pair()
Grid::CAllAppsEncryptedPrivateKeysRecord::~CAllAppsEncryptedPrivateKeysRecord()
typeinfo name for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>
Grid::CSClient::CLogoutFSM::CSendSessionLogoutRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
Grid::CCacheOneFileFixedBlock::CImpl::ConvertCacheToCurrentVersion()
Grid::CSClient::CReadManifestFSM::CRecvDataChunkState::~CRecvDataChunkState()
Grid::CBufferTable::~CBufferTable()
CryptoPP::AES_PHM_Encryption::AES_PHM_Encryption(CryptoPP::RandomNumberGenerator&, unsigned char const*, unsigned int, CryptoPP::BufferedTransformation*)
common::CBlobRegistry::SetValue(std::string const&, std::string const&, unsigned int)
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::~_Rb_tree()
vtable for common::CBlobKey
CryptoPP::BufferedTransformation::MaxRetrievable() const
vtable for common::CBlobRegistry
ScopeGuardImpl1<bool (*)(std::string const&), char const*>::ExecuteNowIfNotDismissed() const
typeinfo name for Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState
Grid::CSClient::CBlockingReadManifestHandler::CompleteReadManifest(common::ICloneableException const*, unsigned int)
CMessageBuffer::SZ_Clear()
typeinfo for Grid::CSClient::CReadFileFSM::CSendRequestState
Grid::CCacheManifestOnly::CImpl::~CImpl()
CopyFile(char const*, char const*, int)
typeinfo for Grid::CClientAuthenticationTicket::CValidateFieldsException
Grid::CCacheFileFixedDirectory::CCacheFileFixedDirectory(unsigned int)
CryptoPP::AES_PHM_Decryption::InvalidCiphertextOrKey::~InvalidCiphertextOrKey()
Grid::ICache::CCorruptionException::~CCorruptionException()
std::vector<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>::~vector()
Grid::CCacheFileFixedChecksum::CCacheFileFixedChecksum(common::CMallocedBlock&, std::string const&, unsigned int)
typeinfo name for Grid::CAccountPrepurchaseInfoRecord
Grid::CFs::CheckCacheFingerprints(std::string const&, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&, common::CCommandStatusControl*)
vtable for ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>
vtable for Grid::CAuthenticationServerIsNotMasterException
typeinfo for CryptoPP::Filter
Grid::CAllAppsRecord::~CAllAppsRecord()
Grid::ICache::CInternalErrorException::~CInternalErrorException()
common::CThread::CThread(std::string const&, bool, common::CThread::EPriority)
std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, unsigned int const&)
CryptoPP::BufferedTransformation::Flush(bool, int)
Grid::CResourceListNodes::~CResourceListNodes()
Grid::CClientConnection::HandleHintResourceNeed()
Grid::CSClient::CLogoutFSM::s_SendSessionLogoutRequestState
vtable for ScopeGuardImpl1<int (*)(void*), void*>
arg::generic_reference::generic_reference(arg::generic_reference const&)
typeinfo for Grid::CSClient::CBlockingReadFileCompletionHandler
Grid::CEngineConnection::GetLocalClientVersion(unsigned int*, unsigned int*, TSteamError*)
Grid::CClientConnection::HandleSetMaxStallCount()
Grid::CFileHandleList::RemoveFile(unsigned int)
Grid::CCacheGroup::FindCache(Grid::CCacheGroup::TCacheGroupEntry&, unsigned int&)
vtable for Grid::CAccountOrUserDoesNotExistException
vtable for ICmd_
vtable for Grid::IClientConnection
Grid::CSClient::CReadPurgeListFSM::CSendRequestState::~CSendRequestState()
construction vtable for CryptoPP::PK_FixedLengthEncryptor-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Divide(CryptoPP::Integer const&, CryptoPP::Integer const&) const
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
_length_code
Grid::CAccount::CImpl::Logout(common::CCommandStatusControl&)
CBlockingUDPSocket::WaitForMessage(float)
Grid::CCacheOneFileFixedBlock::CImpl::OpenExistingCacheFile(std::string const&)
vtable for Grid::CCacheServerSessionMgr
common::CFastThreadMutex::~CFastThreadMutex()
typeinfo name for CryptoPP::StringStore
Grid::CContentDescriptionDBCache::~CContentDescriptionDBCache()
common::CWSABUFWrapper::TWSABUFInfo* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*>(common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*)
CryptoPP::AbstractGroup<CryptoPP::Integer>::CascadeScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CSClient::ConnectToContentServer(common::CIPAddrPort const&, bool, common::CCommandStatusControl*)
Grid::CSClient::CConnection::RemoveSessionIfPresent(unsigned int)
typeinfo for common::CSocketCommandAbortedByCallerException
common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException::~CNoAuthenticatorTimestampsRecordedForThisClientException()
Grid::CUserAppAccessRightsRecord::~CUserAppAccessRightsRecord()
vtable for ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>
Grid::ICacheGroupIteratorImpl::AdvanceToParent()
Steam_RegisterInterfaceFuncs
typeinfo for CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>
_findclose(int)
Grid::CCacheDescBlock::SetForceFixupFlag(bool)
Grid::CAccount::CImpl::~CImpl()
Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException::~CValidateFieldsException()
std::map<unsigned int, Grid::CAppStatus::TAppStatusInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::operator[](unsigned int const&)
typeinfo name for CryptoPP::MontgomeryRepresentation
typeinfo name for Grid::CSubscriptionAppIdsRecord
Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CSClient::IProtocolState
CryptoPP::HashModule::CalculateDigest(unsigned char*, unsigned char const*, unsigned int)
Grid::ICacheGroupIteratorImpl::~ICacheGroupIteratorImpl()
vtable for ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>
common::CBlobKey::EndValueIteration()
virtual thunk to CryptoPP::PK_FixedLengthCryptoSystem::~PK_FixedLengthCryptoSystem()
typeinfo for ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>
std::vector<common::CWSABUFWrapper::TWSABUFInfo, std::allocator<common::CWSABUFWrapper::TWSABUFInfo>>::~vector()
typeinfo name for arg::typed_reference<Grid::IResourceList>
Grid::CSClient::CUnacceptableProtocolVersionException::~CUnacceptableProtocolVersionException()
Grid::CActivityLog::CAssertObserver::~CAssertObserver()
Grid::InternalSteamLoadFileToCache(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::disconnect_all()
typeinfo for Grid::IServerAddressCache
common::CThreadSafeCounter::Decrement()
Grid::GetClientExternalIPAddress()
common::CThreadSafeCountedPtr<Grid::CContentDescriptionRecord>::~CThreadSafeCountedPtr()
typeinfo for common::CConnectException
Grid::CLibraryNotInitializedException::~CLibraryNotInitializedException()
Grid::CReadFileChecksumFailedException::CReadFileChecksumFailedException()
typeinfo name for common::CMultiFieldBlob::index_iterator_impl
Grid::CManifestBinException::~CManifestBinException()
common::IKey::~IKey()
Grid::InternalSteamIsAccountNameInUse(unsigned int, char const*, int*, TSteamError*)
Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException::Clone() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::~_Rb_tree()
Grid::CCacheManifestOnly::CImpl::GenerateMinFootprintList(Grid::CManifestIterator, std::vector<unsigned int, std::allocator<unsigned int>>&)
Grid::IManifestIteratorImpl::GetName(char*, unsigned int) const
Grid::CCacheOneFileFixedBlock::CImpl::DecryptFile(Grid::CManifestIterator&, common::CCommandStatusControl*)
typeinfo name for Grid::CClientContentTicket
Grid::CAppLaunchOptionRecord::CValidateFieldsException::ThrowSelf() const
Grid::CClientManager::CClientManager()
common::CLog::EnableGroupName()
Grid::CAccountPrepurchaseReceiptRecord::~CAccountPrepurchaseReceiptRecord()
common::CThreadSafeAutoSeededRandomPoolSingleton::~CThreadSafeAutoSeededRandomPoolSingleton()
Grid::CClientConnection::HandleGetSubscriptionIds()
ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>::ExecuteNowIfNotDismissed() const
Grid::CAllAppsPublicKeysRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::ICache::ICacheCompletionHandler::s_Mutex
common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException::~CLoginRateTooHighException()
Grid::CFsTable::CImpl::GetPreloaderCacheGroup(std::string const&, unsigned int)
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::_M_erase(std::_Rb_tree_node<std::string>*)
ScopeGuardImpl1<void (*)(unsigned int), unsigned int>::~ScopeGuardImpl1()
Grid::CCacheManifestOnly::BytesNotPresent(Grid::CManifestIterator&, unsigned long long, unsigned long long, unsigned long long*)
Grid::CSClient::CSession::ReadVersionChangeFileIdPurgeList(unsigned int, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::CManifestBin::GetFingerPrint() const
Grid::CClientConnection::HandleWriteFile()
virtual thunk to CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
Grid::CSClient::CConnectionPool::CConnectionPool(Grid::CSClient::CService&, common::CLogContext*)
typeinfo name for CryptoPP::MDC<CryptoPP::SHA>
Grid::CAccount::CImpl::OnCacheFingerprintMismatchOnReconnect(std::string const&, unsigned int)
void std::_Destroy_aux<false>::__destroy<common::CMultiFieldBlob::TFieldDescriptor*>(common::CMultiFieldBlob::TFieldDescriptor*, common::CMultiFieldBlob::TFieldDescriptor*)
vtable for Grid::CSClient::CException
Grid::CSClient::CBlockingLoginCompletionHandler::~CBlockingLoginCompletionHandler()
Grid::CAllAppsPublicKeysRecord::~CAllAppsPublicKeysRecord()
typeinfo name for Grid::CDiscountRecord
Grid::CTicketCache::GetCurrentTicket(unsigned int, unsigned int, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&)
Grid::CAccount::CAccount()
typeinfo name for Grid::CAppRegionRecord::CValidateFieldsException
Grid::CCSERServerAddressCache::~CCSERServerAddressCache()
std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&)
common::CValueDoesNotExistException::~CValueDoesNotExistException()
vtable for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>
Grid::CDiscountQualifierRecord::~CDiscountQualifierRecord()
Grid::CSClient::CReadPurgeListFSM::s_RecvRespState
common::g_cszEnvVariableNameProvidingFullConfigDatabasePathName
CloseSemaphoreInternal(int, bool, char const*)
Grid::GeneralDirectoryServerCommands::FindAllValidateUserIDTicketServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
Grid::ICache::COpenException::~COpenException()
Grid::CClientConnection::HandleDefragCaches()
Grid::CClientConnection::HandleSeekFile()
Grid::ICacheGroupIteratorImpl::CInvalidCache::ThrowSelf() const
common::CBlobRegistry::SetValue(std::string const&, std::string const&, void const*, unsigned int)
Grid::CClientAgentThread::CClientAgentThread(Grid::IClientConnection*)
common::CBlobKey::BeginSubKeyIteration()
Grid::CAccountEmptyReceiptRecord::~CAccountEmptyReceiptRecord()
Grid::CContentDescriptionRecord::~CContentDescriptionRecord()
CryptoPP::StringSource::StringSource(unsigned char const*, unsigned int, bool, CryptoPP::BufferedTransformation*)
vtable for Grid::CAccountPendingException
typeinfo for Grid::CAppRecord::CValidateFieldsException
Grid::CSClient::CReadFileFSM::DoFinish()
common::CFileUtil::FixSlashes(char*)
Grid::CBadApiArgumentException::CBadApiArgumentException()
typeinfo for Grid::CCacheOneFileFixedBlock
typeinfo name for CryptoPP::AES_PHM_Decryption::InvalidCiphertextOrKey
typeinfo name for CryptoPP::HashModuleWithTruncation
Grid::CEngineLoopbackConnection::ClearError(TSteamError*)
typeinfo for CryptoPP::BERSequenceDecoder
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo> const&)
CryptoPP::CBCPaddedDecryptor::LastPut(unsigned char const*, unsigned int)
typeinfo for Grid::CErrnoErrorException
Grid::CEngineConnection::CloseFile(unsigned int, TSteamError*)
CryptoPP::MessageQueue::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
Grid::CCacheFileFixedChecksum::CCacheFileFixedChecksum(common::CMallocedBlock&, std::string const&, unsigned int)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, bool>, std::_Select1st<std::pair<unsigned int const, bool>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, bool>>*)
Grid::CAppRegionSpecificRecord::~CAppRegionSpecificRecord()
CryptoPP::Filter::Attachable()
ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int> MakeObjGuard<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>(common::CMultiFieldBlob&, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int)
Grid::InternalSteamGetSubscriptionReceipt(unsigned int, unsigned int, TSteamSubscriptionReceipt*, TSteamError*)
typeinfo for CryptoPP::InvertibleTrapdoorFunction
vtable for CryptoPP::ByteQueue::Walker
typeinfo name for Grid::CAppIconsRecord
common::CThreadSafeCountedPtr<Grid::CFsTable::IMountedCache>::dispose()
Grid::CFs::RemoveMount(unsigned int)
vtable for common::CEventLoopThread::CException
std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>::~vector()
typeinfo for Grid::CContentDescriptionRecord::CValidateFieldsException
vtable for Grid::ICache::CException
Grid::CCacheManifestOnly::CImpl::ValidateFile(Grid::CManifestIterator&, common::CMallocedBlock&, (anonymous namespace)::EFileState&, common::CCommandStatusControl*, unsigned long long, unsigned long long*)
Grid::CCacheOneFileFixedBlock::CImpl::SortDirectoryBlocks()
Grid::CCacheServerSessionMgr::ReadComplete(unsigned int, unsigned int)
Grid::CSClient::Cleanup()
CryptoPP::RSAFunction::ImageBound() const
Grid::InternalSteamIsSecureComputer(unsigned int, int*, TSteamError*)
typeinfo for sigslot::signal1<unsigned int, sigslot::multi_threaded_local>
typeinfo name for common::CValueIterator
common::CMultiFieldBlob::CInvalidMemoryMappedFileException::ThrowSelf() const
typeinfo for ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>
ScopeGuardImpl1<int (*)(char*), char*>::~ScopeGuardImpl1()
Grid::CMultipleCacheLock::AddCache(std::string const&)
Grid::CNewValveCDKeyGenerator::CNewValveCDKeyGenerator(std::string const&, std::string const&)
std::vector<Grid::CFsCacheGroup::CImpl::CFindHandleEntry, std::allocator<Grid::CFsCacheGroup::CImpl::CFindHandleEntry>>::~vector()
Grid::CClientConnection::HandleChangePersonalQA()
Grid::CLibraryAlreadyInitializedException::~CLibraryAlreadyInitializedException()
common::CMultiFieldBlob::CFieldAlreadyExistsException::Clone() const
Grid::CEngineLoopbackConnection::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
CryptoPP::Integer::operator=(CryptoPP::Integer const&)
std::vector<common::TBuf, std::allocator<common::TBuf>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::TBuf*, std::vector<common::TBuf, std::allocator<common::TBuf>>>, common::TBuf const&)
CryptoPP::InvertibleRSAFunction::DEREncode(CryptoPP::BufferedTransformation&) const
arg::grin_ptr<common::CLogGroup::TLogGroupImpl>::my_delete_ftn(common::CLogGroup::TLogGroupImpl*)
Grid::CEngineConnection::s_ReturnBufferTable
Grid::CSClient::GetPerfStats(unsigned int, Grid::CSClient::TPerfStats&)
common::CBlobRegistry::CBlobRegistry(std::string const&, bool, unsigned int)
typeinfo name for common::CMultiFieldBlob::CInvalidSerializedBlobException
_Unwind_GetCFA
Grid::CClientConnection::HandleUpdateSubscriptionBillingInfo()
common::CBlobKey::GetValue(std::string const&, void*, unsigned int, unsigned int*)
Grid::CReturnBufferData::~CReturnBufferData()
common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::operator()()
Grid::CClientConnection::HandleGetLocalClientVersion()
ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>::~ObjScopeGuardImpl0()
Grid::CDerivedSubscribedAppsRecord::~CDerivedSubscribedAppsRecord()
Grid::InternalSteamLoadCacheFromDir(unsigned int, unsigned int, char const*, TSteamError*)
Grid::CClientConnection::HandleRefreshAccountInfo()
Grid::CEngineLoopbackConnection::GetAppDLCStatus(unsigned int, unsigned int, int*, TSteamError*)
common::CBlobKey::CreateSubKey(std::string const&, bool)
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::~_Rb_tree()
Grid::CSClient::CConnection::RecvThreadDeinit()
Grid::CCacheOneFileFixedBlock::CImpl::DecryptData(unsigned char const*, unsigned char const*, Grid::CCacheQueueEntry::TFileReqEntry const&, Grid::CManifestIterator&)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Mod(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CTicketCache::CImpl::DeserializeContentTickets(std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>&, unsigned int, bool)
virtual thunk to CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob::index_iterator const&, unsigned int, unsigned char const*)
std::setbase(int)
CryptoPP::RandomPool::~RandomPool()
Grid::CReturnBufferItem<int>::~CReturnBufferItem()
Grid::CAccount::Login(common::CCommandStatusControl&, std::string const&, std::string const&, bool, BSL::CTime*, BSL::CTime*)
Grid::CEngineConnection::Logout(TSteamError*)
void std::_Destroy_aux<false>::__destroy<Grid::CFsCacheGroup::CImpl::CFindHandleEntry*>(Grid::CFsCacheGroup::CImpl::CFindHandleEntry*, Grid::CFsCacheGroup::CImpl::CFindHandleEntry*)
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::ScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
typeinfo name for common::CRecvException
Grid::CCacheDescBlock::GetDescBlk(Grid::TCacheDescriptor*) const
common::SerializeMultipleIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, common::CMallocedBlock*)
std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>::~vector()
Grid::CCacheGroup::CCacheGroup(std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>> const&, std::string const&)
Grid::CCacheServerSessionMgr::~CCacheServerSessionMgr()
vtable for Grid::ICache::CCacheNeedsDecryptionException
std::map<int, LicenseInfo_t, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::operator[](int const&)
vtable for Grid::CAppVersionInfoRecord
Grid::CSClient::CDownloadRateEstimator::DoRecordStatistics(Grid::CSClient::CDownloadRateEstimator::Timer_t&, unsigned int, unsigned int)
Grid::CManifestBin::GetMinimumFootprintFiles(std::vector<unsigned int, std::allocator<unsigned int>>&) const
Grid::CAppRecord::CAppRecord(char const*, unsigned char const*, unsigned int)
CryptoPP::StringSource::~StringSource()
Grid::CAppLaunchOptionRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
vtable for ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>
vtable for ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>
Grid::CSClient::CConnection::SelectedSendWithTimeout(common::CWSABUFWrapper&, common::CCommandStatusControl*)
vtable for common::CThread::CThreadCreateException
CryptoPP::IteratedHashBase<unsigned long>::HashMultipleBlocks(unsigned long const*, unsigned int)
typeinfo name for common::CSubKeyIterator
Grid::ICache::ICacheCompletionHandler::PostReadProgress(unsigned long long, unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
common::CInUseException::ThrowSelf() const
common::CConnectException::~CConnectException()
common::CConfigTree::~CConfigTree()
vtable for Grid::ICache::CCorruptionException
Grid::InternalSteamRequestEmailAddressVerificationEmail(unsigned int, TSteamError*)
common::CMultiFieldBlob::InternalAddField(unsigned short, unsigned char const*, unsigned int, unsigned char const*, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, unsigned int)
Grid::InternalSteamDeleteAccount(unsigned int, TSteamError*)
Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler::CompleteReadFile(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
common::CMultiFieldBlob::CFailedToOpenMemoryMappedFileException::~CFailedToOpenMemoryMappedFileException()
CryptoPP::BERDecodeNull(CryptoPP::BufferedTransformation&)
ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>::ExecuteNowIfNotDismissed() const
vtable for common::CConfigDatabase
AcquireSemaphoreInternal(int, unsigned int)
Grid::CAppStatus::TAppStatusInfo::~TAppStatusInfo()
common::CCommandStatusControl::IsStalled() const
ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>::~ObjScopeGuardImpl0()
typeinfo name for Grid::CAllAppsPublicKeysRecord::CValidateFieldsException
CryptoPP::ByteQueue::Walker::~Walker()
Grid::CManifestBin::~CManifestBin()
common::CMultiFieldBlob::CInvalidSerializedBlobException::~CInvalidSerializedBlobException()
Grid::CFsTable::CImpl::Checkin(bool)
Grid::CEngineLoopbackConnection::SetUser(char const*, int*, TSteamError*)
typeinfo name for ScopeGuardImpl0<void (*)()>
Grid::CActivityLog::~CActivityLog()
common::CMultiFieldBlob::CBlobException::CBlobException(char const*)
construction vtable for CryptoPP::FilterWithBufferedInput-in-CryptoPP::CBCPaddedDecryptor
Grid::CClientConnection::HandleProcessCall()
Grid::CLockedCDDBCache::GetCachedAppList()
void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*)
vtable for common::CSendException
Grid::CTicketCache::CImpl::~CImpl()
common::CBlobKey::CPublicKey::~CPublicKey()
Grid::CCacheFileFixedFsTree::GetCacheSearchKey(unsigned int)
typeinfo name for BSL::CUnpackedTime::COutOfRange
Grid::CClientRegistry::CreateUsersListKeyName()
CryptoPP::PK_FixedLengthCryptoSystem::MaxPlainTextLength(unsigned int) const
typeinfo name for Grid::CMustBeOnlineException
Grid::CCacheOneFileFixedBlock::CImpl::DeleteLocalFile(Grid::CManifestIterator&, std::string const&, Grid::CManifestIterator*)
std::_Rb_tree<std::string, std::pair<std::string const, common::CNamedArgs>, std::_Select1st<std::pair<std::string const, common::CNamedArgs>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CNamedArgs>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, common::CNamedArgs> const&)
Grid::CCellIDManager::GetCurrentBestCellID(common::CCommandStatusControl*)
BSL::CUnpackedTime::CFromStringException::~CFromStringException()
construction vtable for CryptoPP::Filter-in-CryptoPP::AES_PHM_Decryption
CryptoPP::BufferedTransformation::TransferMessagesTo(CryptoPP::BufferedTransformation&, unsigned int)
Grid::CSClient::CConnectionPool::Cleanup()
std::vector<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile, std::allocator<Grid::CCacheOneFileFixedBlock::CImpl::CCacheFilePtrs::TFile>>::~vector()
_Unwind_GetDataRelBase
Grid::CCacheManifestOnly::GetManifestIterator(unsigned int)
common::CStringTable::CImpl::~CImpl()
typeinfo name for Grid::CRateLimitRecord
typeinfo name for Grid::CCacheQueueManager
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
DW.ref._ZTIN6common33CUsedAuthenticatorTimestampsCache29CReusedAuthenticatorExceptionE
Grid::GeneralDirectoryServerCommands::FindSlaveASClientAuthenticationIPAddrPort(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, unsigned int, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
common::CThreadSafeQueue<unsigned int>::~CThreadSafeQueue()
Grid::CAppFilesystemRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
typeinfo name for common::CBlobException
non-virtual thunk to CryptoPP::RandomPool::Put(unsigned char)
typeinfo name for common::CMainConfigDatabase
CryptoPP::NonblockingRng::GenerateBlock(unsigned char*, unsigned int)
Grid::CAccount::EnumerateSubscription(unsigned int, TSteamSubscription*)
vtable for ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>>::~_Rb_tree()
BSL::CUnpackedTime::CFromStringInvalidLength::~CFromStringInvalidLength()
common::CScopedWriteLock::~CScopedWriteLock()
std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>>::~map()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM>>>*)
Grid::ICache::CResourceIsNotFile::~CResourceIsNotFile()
Grid::CReturnBufferAggregate::Receive(Grid::CPipeComm*)
typeinfo name for common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>
Grid::CEngineLoopbackConnection::ChangeOfflineStatus(TSteamOfflineStatus*, TSteamError*)
CryptoPP::BlockTransformation::~BlockTransformation()
Grid::CEngineLoopbackConnection::ObserveCallbackEvent(ESteamNotificationCallbackEvent, unsigned int)
CryptoPP::Integer::WordCount() const
typeinfo name for CryptoPP::ByteQueue
BSL::CTime::FromUnpackedTime(BSL::CUnpackedTime const&)
Grid::CEngineLoopbackConnection::GetCacheDefaultDirectory(char*, TSteamError*)
typeinfo for CryptoPP::MessageQueue
Grid::ICache::CInvalidResourceOffset::~CInvalidResourceOffset()
Grid::CClientConnection::HandleIsAppSubscribed()
common::CThread::CThreadCreateException::~CThreadCreateException()
typeinfo name for CryptoPP::BitBucket
virtual thunk to CryptoPP::Source::MessageEnd(int)
Grid::CSClient::CSession::CSession(unsigned int, std::string const&, unsigned int, unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&, Grid::CSClient::CConnectionPool&, Grid::CSClient::CService&)
Grid::CEngineConnection::GetLocalFileCopy(char const*, TSteamError*)
Grid::CAccountSubscriptionRecord::~CAccountSubscriptionRecord()
vtable for common::CCommandStatusControlAutoTimeout
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::InternalSteamGetSubscriptionIds(unsigned int, unsigned int*, unsigned int, TSteamError*)
std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>::~vector()
virtual thunk to CryptoPP::FilterWithBufferedInput::~FilterWithBufferedInput()
Grid::CFsCacheGroup::CImpl::Open(Grid::CSplitPath const&, char const*, int, bool&, bool&, unsigned long long&)
typeinfo name for CryptoPP::FileSink::Err
CryptoPP::Integer::DivideByZero::~DivideByZero()
Grid::CCacheOneFileFixedBlock::CImpl::CommitDirEntry((anonymous namespace)::EDirOp, unsigned int, Grid::CCacheFileFixedDirectoryEntry&)
Grid::CEngineNotRunningException::~CEngineNotRunningException()
vtable for Grid::CErrnoErrorException
Grid::CAllSubscriptionsRecord::~CAllSubscriptionsRecord()
Grid::ICommandState::StartSubscribe(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, TSteamSubscriptionBillingInfo const*)
g_CrashedSteamPid
Grid::GeneralDirectoryServerCommands::FindAllHL2MasterServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
Grid::CCacheBatBlock::GetDiskPerEntrySize()
CryptoPP::member_ptr<CryptoPP::BufferedTransformation>::~member_ptr()
virtual thunk to CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
common::CNamedArgsInsertException::~CNamedArgsInsertException()
CryptoPP::HexDecoder::Put(unsigned char const*, unsigned int)
Grid::CFsCacheGroup::CImpl::SeekFromEnd(unsigned int, long long)
typeinfo for Grid::CReturnBufferData
vtable for common::CValueIterator
common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException::ThrowSelf() const
Grid::CAccountUsersRecord::CValidateFieldsException::ThrowSelf() const
Grid::CCacheOneFileFixedBlock::CImpl::DefragCache(common::CCommandStatusControl*)
Grid::CEngineLoopbackConnection::RefreshLogin(char const*, int, TSteamError*)
common::CEventLoopThread::ExecuteThreadDeinitFunctor()
common::ICloneableException::ICloneableException(std::string const&)
_findnext(int, _finddata_t*)
typeinfo name for Grid::CSClient::CReadFileFSM::CSendRequestState
common::CReadWriteThreadMutex::ReleaseWriteLock()
common::CValueIterator::GetName() const
ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>::~ObjScopeGuardImpl0()
Grid::CleanupNetworkIfNecessary()
typeinfo name for common::CStringTable::CImpl
Grid::CFs::CReadException::~CReadException()
CryptoPP::ByteQueue::Peek(unsigned char&) const
typeinfo name for common::CMultiFieldBlob::CBlobException
Grid::CCacheFileFixedChecksum::CException::~CException()
Grid::IResourceList::IsDone()
Grid::CSubscriptionRecord::~CSubscriptionRecord()
vtable for common::CThread::CThreadAlreadyRunningException
Grid::CFsBuffer::SetBuffered(bool)
CryptoPP::AbstractRing<CryptoPP::Integer>::CascadeExponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
common::CValueIterator::CValueIterator(common::IValueIteratorImpl*)
Grid::CFsCacheGroup::Flush(unsigned int)
common::CThreadSafeAutoSeededRandomPoolSingleton::s_CreateInstanceMutex
common::IAssertObserver::~IAssertObserver()
vtable for CryptoPP::RandomPool
vtable for Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException
CCallbackMgr::DispatchCallbackNoTryCatch(CallbackMsg_t&, bool)
typeinfo name for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkState
ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>::~ObjScopeGuardImpl0()
Grid::CAccount::CImpl::OnCreatePreloaderFail(unsigned int)
common::CThreadSafeCountedPtr<Grid::IReturnBuffer>::dispose()
CryptoPP::Filter::AttachedTransformation() const
construction vtable for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>-in-CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
vtable for CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
DW.ref._ZTIN8CryptoPP18AES_PHM_Decryption22InvalidCiphertextOrKeyE
Grid::CFsBuffer::Putc(int)
std::vector<common::CCountedPtr<CryptoPP::HMAC<CryptoPP::SHA>>, std::allocator<common::CCountedPtr<CryptoPP::HMAC<CryptoPP::SHA>>>>::~vector()
Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
typeinfo for ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>
Grid::CSubscriberAccountRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAppIconsRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo name for ScopeGuardImpl1<bool (*)(std::string const&), std::string>
virtual thunk to CryptoPP::PK_FixedLengthDecryptor::~PK_FixedLengthDecryptor()
typeinfo for CryptoPP::FileSink::OpenErr
Grid::CClientConnection::HandleOpenFile2()
typeinfo for Grid::CActivityLog::CAssertObserver
Grid::InternalSteamLogout(unsigned int, TSteamError*)
CryptoPP::InvertibleRSAFunction::~InvertibleRSAFunction()
vtable for Grid::CAccountUserRecord
Grid::IManifestIteratorImpl::~IManifestIteratorImpl()
common::CMainConfigDatabase::~CMainConfigDatabase()
CryptoPP::MD5::Init()
Grid::CClientConnection::HandleGetCacheDecryptionKey()
CryptoPP::BufferedTransformation::ChannelPut(std::string const&, unsigned char)
CryptoPP::AES_PHM_Decryption::MessageEnd(int)
Grid::InternalSteamGetAppUpdateStats(unsigned int, unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
common::CWSABUFWrapper::TWSABUFInfo* std::__uninitialized_copy<false>::uninitialized_copy<common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*>(common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*, common::CWSABUFWrapper::TWSABUFInfo*)
Grid::CFsTable::AppUnlock(std::string const&)
Grid::CCacheDataBlock::SetBlocksInUse(unsigned int)
Grid::CEngineLoopbackConnection::~CEngineLoopbackConnection()
common::IEventLoopFunctor::~IEventLoopFunctor()
Grid::CEngineLoopbackConnection::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
typeinfo for common::CRegistryException
vtable for CryptoPP::FileStore::ReadErr
typeinfo name for CryptoPP::HashFilter
Grid::CSClient::CUnacceptableProtocolVersionException::~CUnacceptableProtocolVersionException()
CloseThread(void*)
typeinfo for Grid::CAllSubscriptionsRecord
typeinfo for ObjScopeGuardImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>
std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::reserve(unsigned int)
Grid::IServerAddressCache::InsideMutexStoreListOfAddresses()
Grid::CDiscountQualifierRecord::CValidateFieldsException::~CValidateFieldsException()
CryptoPP::BufferedTransformation::AnyMessages() const
Grid::CFs::CCannotWriteNonUserConfigFile::~CCannotWriteNonUserConfigFile()
Grid::CManifestBin::GetManifestIterator(char const*) const
Grid::CClientConnection::HandleEnumerateAppLaunchOption()
Grid::InternalSteamAbortCall(unsigned int, unsigned int, TSteamError*)
Grid::ICacheGroupIteratorImpl::GetNodeName() const
virtual thunk to CryptoPP::AES_PHM_Encryption::~AES_PHM_Encryption()
CryptoPP::FilterWithBufferedInput::BlockQueue::Put(unsigned char const*, unsigned int)
vtable for Grid::CCacheServerSession
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Accumulate(CryptoPP::Integer&, CryptoPP::Integer const&) const
typeinfo for Grid::CSClient::IBlockingCompletionHandler
Grid::CCacheManifestOnly::CImpl::ValidateCache(Grid::CManifestIterator, common::CMallocedBlock&, common::CCommandStatusControl*, unsigned long long, unsigned long long*, Grid::CValidationLogger*)
CryptoPP::PK_Encryptor::~PK_Encryptor()
CryptoPP::ByteQueue::~ByteQueue()
Grid::CEngineLoopbackConnection::ChangeEmailAddress(char const*, TSteamError*)
typeinfo name for CryptoPP::FixedKeyLength<64u>
CryptoPP::Integer::GetBit(unsigned int) const
Grid::CAccountPaymentCardReceiptRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CFsTable::DestroyPreloader(std::string const&, unsigned int)
__gnu_cxx::hash_map<int, Handle_t*, __gnu_cxx::hash<int>, std::equal_to<int>, std::allocator<Handle_t*>>::~hash_map()
CryptoPP::Rijndael::Te0
Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
Grid::CSClient::CSessionLoginFailedException::~CSessionLoginFailedException()
common::CObjFunctor<Grid::CAccount::CImpl>::operator()()
vtable for common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
Grid::CTicketCache::Instance(std::string const&)
CryptoPP::Filter::Filter(CryptoPP::BufferedTransformation*)
CryptoPP::Integer::Times(CryptoPP::Integer const&) const
common::CEventLoopThread::CException::~CException()
ScopeGuardImpl1<bool (*)(std::string const&), std::string>::~ScopeGuardImpl1()
typeinfo for Grid::CFs::CMountInUseException
vtable for Grid::CFs::CNotFoundException
Grid::CCacheManifestOnly::CImpl::ReadHandlerProc(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
typeinfo for Grid::CFs::CCannotWriteNonUserConfigFile
Grid::CFs::Open(unsigned int, char const*, char const*, int, bool&, bool&, unsigned long long&, char const**)
CryptoPP::InvertibleRSAFunction::CalculateInverse(CryptoPP::Integer const&) const
CryptoPP::MontgomeryRepresentation::~MontgomeryRepresentation()
virtual thunk to CryptoPP::HexDecoder::Put(unsigned char)
Grid::CSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
common::CStringTable::~CStringTable()
common::CMultiFieldBlob::CFlushMemoryMappedFileFailedException::~CFlushMemoryMappedFileFailedException()
Grid::CEngineConnection::WaitForAppReadyToLaunch(unsigned int, TSteamError*)
common::CCountedPtr<CryptoPP::RandomNumberGenerator>::~CCountedPtr()
Grid::CCacheManifestOnly::GetContentServerInfo(unsigned int*, unsigned int*)
CryptoPP::MessageQueue::CopyMessagesTo(CryptoPP::BufferedTransformation&, unsigned int) const
vtable for CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT
typeinfo for common::CMultiFieldBlob::CInvalidMemoryMappedFileException
Grid::CEngineConnection::OpenFile64(char const*, char const*, int, unsigned long long*, bool*, bool*, TSteamError*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::~EuclideanDomainOf()
common::CTypeMismatchException::~CTypeMismatchException()
Grid::CSClient::IProtocolFSM::HandleCompletedSend(unsigned int)
Grid::CAccountSubscriptionsRecord::~CAccountSubscriptionsRecord()
vtable for Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>
Grid::ICacheGroupIteratorImpl::CInvalidCache::~CInvalidCache()
Grid::ICommandState::Abort(unsigned int)
Grid::CFs::HintResourceNeed(std::string const&, unsigned int, std::vector<std::string, std::allocator<std::string>>&, bool)
Grid::CFs::CEndOfFileException::~CEndOfFileException()
Grid::CEngineConnection::FindApp(char const*, unsigned int*, TSteamError*)
common::CBlobKey::CPublicKey::EndValueIteration()
common::CWin32Event::~CWin32Event()
common::CSocketCommandAbortedByCallerException::~CSocketCommandAbortedByCallerException()
CryptoPP::TrapdoorFunction::MaxPreimage() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::_M_insert_unique(std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>> const&)
std::string* std::__uninitialized_copy_aux<__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*>(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*, std::__false_type)
typeinfo for CryptoPP::StringSinkTemplate<std::string>
Grid::CAccountPrepurchaseInfoRecord::~CAccountPrepurchaseInfoRecord()
Grid::InternalSteamGetCacheDefaultDirectory(unsigned int, char*, TSteamError*)
Grid::CSClient::IProtocolFSM::HandleCompletedRecv()
CryptoPP::Integer::AbsoluteValue() const
CryptoPP::ModularArithmetic::Divide(CryptoPP::Integer const&, CryptoPP::Integer const&) const
typeinfo name for Grid::CAppSubscriptionIdsRecord
Grid::CBufferTable::CBufferTable(Grid::IEngineConnection*)
common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::operator()()
std::vector<unsigned int, std::allocator<unsigned int>>::~vector()
CryptoPP::HMAC<CryptoPP::SHA>::~HMAC()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::IReturnBuffer>> const&)
common::CThread::CImpl::Cleanup()
Grid::OfflineStatus::SetNextLaunchState(Grid::OfflineStatus::EState)
Grid::CAppFilesystemRecord::ValidateFields(std::ostream*, unsigned int)
CryptoPP::BlockingRng::GenerateByte()
std::vector<Grid::CAuthenticatorPayloadChunk, std::allocator<Grid::CAuthenticatorPayloadChunk>>::~vector()
CryptoPP::BitBucket::~BitBucket()
typeinfo for Grid::IEngineConnection
typeinfo for Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
common::CNamedArgs::~CNamedArgs()
typeinfo name for common::CAdaptPlainToEventLoopFunctor
common::CMultiFieldBlob::InternalAddField(unsigned short, unsigned char const*, unsigned int, unsigned char const*, unsigned int)
CloseFileMappingHandle(void*)
Grid::CSplitPath::CSplitPath()
common::CThreadLocalPtr<Grid::IEngineConnection>::~CThreadLocalPtr()
construction vtable for CryptoPP::PK_Decryptor-in-CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
typeinfo name for Grid::CFs::CConfigException
std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
common::CWSABUFWrapper::Append(unsigned int)
typeinfo for common::CFileUtil::IFindFile
Grid::CBadApiArgumentException::Clone() const
common::CLogContext::LogMessage(unsigned int, char const*)
virtual thunk to CryptoPP::Store::Put(unsigned char)
typeinfo for Grid::CFs::CNotFoundException
vtable for Grid::CLibraryNotInitializedException
std::vector<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>, std::allocator<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, std::vector<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>, std::allocator<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>>>>, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord> const&)
common::CSubKeyIterator::operator!=(common::CSubKeyIterator const&) const
typeinfo name for Grid::CBufferTable
RunIOCompletions(int*)
Grid::CFsTable::CImpl::TClientInfo::~TClientInfo()
std::vector<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>, std::allocator<common::CThreadSafeCountedPtr<common::IEventLoopFunctor>>>::reserve(unsigned int)
SetFilePointerEx(void*, _LARGE_INTEGER, _LARGE_INTEGER*, unsigned int)
Grid::CClientConnection::HandleWasBlobRegistryFileDeleted()
typeinfo for CryptoPP::FileSink::Err
Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState::~CRecvDataChunkState()
typeinfo name for CryptoPP::IteratedHash<unsigned long, false, 64u>
Grid::CEngineDisconnectException::~CEngineDisconnectException()
EnsureSemaphorePostedInternal(int)
ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>(Grid::CCacheQueueManager&, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int)
std::_List_base<common::CThreadSafeCountedPtr<sigslot::_connection_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>>, std::allocator<common::CThreadSafeCountedPtr<sigslot::_connection_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>>>>::_M_clear()
Grid::CSClient::CReadManifestFSM::CRecvDataChunkState::~CRecvDataChunkState()
vtable for Grid::CClientManager::CImpl
std::vector<Grid::CSClient::TClientBandwidthStats, std::allocator<Grid::CSClient::TClientBandwidthStats>>::~vector()
CryptoPP::IteratedHash<unsigned long, true, 64u>::~IteratedHash()
Grid::CAuthenticationServerIsNotMasterException::~CAuthenticationServerIsNotMasterException()
typeinfo for Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException
typeinfo name for sigslot::_connection_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
vtable for CAppSystem
Grid::CAccountPaymentCardReceiptRecord::~CAccountPaymentCardReceiptRecord()
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::append(unsigned int, char)
typeinfo name for common::CNamedArgsException
Grid::CBufferTable::GetBufElem(unsigned int)
Grid::CEngineConnection::Login(char const*, char const*, int, TSteamError*)
common::CBadAlloc::~CBadAlloc()
Grid::CEngineLoopbackConnection::IsFileNeededByApp(unsigned int, char const*, unsigned long long, unsigned int*, TSteamError*)
Grid::CClientAgentThread::CClientAgentThread(Grid::IClientConnection*)
typeinfo for BSL::CException
Grid::CCacheGroup::GetCache(unsigned int)
typeinfo for Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState
Grid::ICommandState::StartChangePassword(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, std::string const&)
Grid::CCacheFileFixedDirectory::Add(unsigned int, Grid::CCacheFileFixedDirectoryEntry&)
CreateFileMapping(void*, void*, unsigned int, unsigned int, unsigned int, char const*)
Grid::CCacheDataBlock::Serialize(_IO_FILE*)
Grid::CLauncher::CImpl::CImpl(ISteam2Bridge*, Grid::CAccount*, Grid::CAppRecord&, unsigned int, std::string const&, std::string const&, common::CCommandStatusControl&)
Grid::TPreloaderCacheInfo::~TPreloaderCacheInfo()
ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>::~ObjScopeGuardImpl1()
Grid::CCacheQueueManager::MarkItemBlockComplete(unsigned int, unsigned int, unsigned int, unsigned int, common::ICloneableException const*)
inflate_codes
Grid::CSClient::CConnection::BlockingDisconnect()
VTT for CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
typeinfo for Grid::CAccountSubscriptionsBillingInfoRecord
Grid::CCommandThreadPool::~CCommandThreadPool()
typeinfo for CryptoPP::BufferedTransformation
typeinfo for CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>
Grid::CFs::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*)
Grid::CSClient::CDownloadRateEstimator::AggregateRecordStatistics(unsigned int)
Grid::CFsCacheGroup::~CFsCacheGroup()
CryptoPP::BitBucket::Put(unsigned char const*, unsigned int)
typeinfo for Grid::CResourceListNodes
std::vector<common::CLogGroup*, std::allocator<common::CLogGroup*>>::_M_insert_aux(__gnu_cxx::__normal_iterator<common::CLogGroup**, std::vector<common::CLogGroup*, std::allocator<common::CLogGroup*>>>, common::CLogGroup* const&)
typeinfo name for Grid::CCachePreLoader::CImpl::CReadCompletionHandler
CryptoPP::SHA::~SHA()
common::CMultiFieldBlob::CRequiresDecryptionKeyException::~CRequiresDecryptionKeyException()
Grid::TFileEntry_t::~TFileEntry_t()
Grid::CUserAppAccessRightsRecord::CValidateFieldsException::Clone() const
typeinfo for common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>
common::CBlobRegistry::~CBlobRegistry()
CryptoPP::FileStore::OpenErr::~OpenErr()
Overlapped_t::Overlapped_t()
typeinfo for ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>
CryptoPP::ArrayXorSink::~ArrayXorSink()
common::CLog::SetContextDescDisplayWidth(unsigned int)
Grid::CFsTable::CImpl::TPreloader::TPreloader(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int, std::string const&, std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>> const&, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>> const&, std::string const&, bool)
Grid::CSClient::CInvalidSessionHandleException::ThrowSelf() const
vtable for Grid::CFs::CReadException
std::vector<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>, std::allocator<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>>>::~vector()
inflate_set_dictionary
Grid::ICache::CWriteException::~CWriteException()
ScopeGuardImpl2<void (*)(unsigned int, unsigned int), unsigned int, unsigned int>::~ScopeGuardImpl2()
Grid::CEngineLoopbackConnection::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
vtable for ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>
Grid::CFs::CBadArgException::~CBadArgException()
typeinfo for Grid::CFsCacheGroup
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>::~ScopeGuardImpl1()
CMessageBuffer::CMessageBuffer(unsigned int)
ScopeGuardImpl0<void (*)()>::~ScopeGuardImpl0()
sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::clone()
Grid::CAccount::CImpl::GetAppCurrentVersion(unsigned int, std::string*)
vtable for Grid::CClientAuthenticationTicket::CValidateFieldsException
typeinfo name for Grid::CSClient::CSessionLoginFailedException
typeinfo for Grid::CBadCallerErrorStructPtrException
typeinfo name for Grid::ICache::CNotFoundException
typeinfo for CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::~_Rb_tree()
CryptoPP::PK_Verifier::~PK_Verifier()
sigslot::signal1<unsigned int, sigslot::multi_threaded_local>::~signal1()
OpenEvent(unsigned int, int, char const*)
BSL::InitExceptionParams(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&)
Grid::CAppRegionRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CCacheGroup::~CCacheGroup()
common::ICloneableException::~ICloneableException()
Grid::CSClient::CUnacceptableProtocolVersionException::Clone() const
common::CMultiFieldBlob::FreeMallocedBlocks()
SteamGetCurrentAppId
virtual thunk to CryptoPP::AES_PHM_Encryption::~AES_PHM_Encryption()
Grid::CFs::CConfigException::CConfigException()
vtable for Grid::CSClient::CBlockingLogoutCompletionHandler
typeinfo for Grid::ICache::CReadException
Grid::CFs::RefreshMinimumFootprintFiles(std::string const&, unsigned int, std::string const&, common::CCommandStatusControl*, bool)
Grid::CRateLimitRecord::~CRateLimitRecord()
fpattern_match
CryptoPP::BufferedTransformation::ChannelMessageSeriesEnd(std::string const&, int)
CCallbackMgr::OnSteamAPICallCompleted(SteamAPICallCompleted_t*)
Grid::CEngineConnection::PauseCachePreloading(unsigned int, TSteamError*)
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::reserve(unsigned int)
Grid::CFsTable::DisablePreloader(std::string const&, unsigned int)
Grid::CValidationLogger::Instance()
CryptoPP::BufferedTransformation::CopyAllTo(CryptoPP::BufferedTransformation&) const
Grid::CSClient::CBlockingLogoutCompletionHandler::CompleteLogout(common::ICloneableException const*, unsigned int)
construction vtable for CryptoPP::DigestVerifier-in-CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
Grid::CCacheNone::GetManifestIterator(std::string const&)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>::~ScopeGuardImpl1()
common::CNamedArgs::CNamedArgs()
Grid::CAccount::VerifyEmailAddress(common::CCommandStatusControl&, std::string const&)
void std::__insertion_sort<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
Grid::CSClient::CReadFileFSM::DoAbort(common::ICloneableException const&)
Grid::CAccount::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*)
void std::_Destroy_aux<false>::__destroy<Grid::TAppFilesystemInfo*>(Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*)
Grid::CCellIDManager::~CCellIDManager()
CryptoPP::DEREncodeNull(CryptoPP::BufferedTransformation&)
Grid::CFs::CBadHandleException::CBadHandleException(common::CErrorCodeException::ESpecificType)
common::CThreadLocalBase::GetThreadID()
Grid::CCacheDataBlock::GetMaxEntries() const
typeinfo for Grid::CSClient::IProtocolFSM
Grid::CSClient::IBlockingCompletionHandler::WaitForCompletionOrTimeout(unsigned int)
Grid::InternalSteamGetAppUserDefinedRecord(unsigned int, unsigned int, common::CMallocedBlock&, TSteamError*)
common::CCommandStatusControl::SetStalled()
Grid::CSClient::CService::ReconnectSession()
common::CMultiFieldBlob::sc_EmptyBlobHeader
Grid::CCacheServerSessionMgr::GetPerfStats(Grid::CSClient::TPerfStats&)
Grid::TAppFilesystemInfo* std::__uninitialized_copy<false>::uninitialized_copy<Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*>(Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*, Grid::TAppFilesystemInfo*)
virtual thunk to CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
Grid::CAccountUsersRecord::~CAccountUsersRecord()
typeinfo name for Grid::CContentDescriptionRecord
typeinfo name for CryptoPP::SHA256
Grid::CEngineConnection::GetContentServerInfo(unsigned int, unsigned int*, unsigned int*, TSteamError*)
CryptoPP::AES_PHM_Decryption::~AES_PHM_Decryption()
inflate_trees_dynamic
typeinfo name for ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>
Grid::CEngineConnection::SetCacheDefaultDirectory(char const*, TSteamError*)
Grid::CFs::CFileAccessRightsException::CFileAccessRightsException(common::CErrorCodeException::ESpecificType)
typeinfo for common::CAdaptPlainToEventLoopFunctor
Grid::ICommandState::StartVerifyEmailAddress(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&)
vtable for ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>
Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAppLaunchOptionRecord::~CAppLaunchOptionRecord()
Grid::CAccount::GetUser() const
SteamOpenFile2
common::ObjFunctorImpl0<Grid::CClientManager::CImpl, void (Grid::CClientManager::CImpl::*)()>::~ObjFunctorImpl0()
CAsyncIOManager::~CAsyncIOManager()
CryptoPP::StringSinkTemplate<std::string>::Put(unsigned char)
construction vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>-in-CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CSClient::CSessionDestroyedException::~CSessionDestroyedException()
Grid::CCacheDescBlock::~CCacheDescBlock()
CryptoPP::BufferedTransformation::Detach(CryptoPP::BufferedTransformation*)
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::~_Rb_tree()
typeinfo for Grid::CDiscountRecord::CValidateFieldsException
CryptoPP::Integer::Decode(unsigned char const*, unsigned int, CryptoPP::Integer::Signedness)
common::CMultiFieldBlob::CPreprocessingFailedException::Clone() const
common::CConfigDatabase::~CConfigDatabase()
DW.ref._ZTIN4Grid6ICache14CReadExceptionE
Grid::CSClient::CReadFileFSM::s_RecvNextCompressedBlockChunkState
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::string const&)
Grid::CAppFilesystemRecord::CValidateFieldsException::ThrowSelf() const
Grid::CSClient::CManifestFingerprintMistatchOnReconnectException::~CManifestFingerprintMistatchOnReconnectException()
vtable for Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState
Grid::CFs::CBadMountException::CBadMountException(common::CErrorCodeException::ESpecificType)
Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler::~CBlockingReadVersionChangeFileIdPurgeListHandler()
Grid::CFs::GetCacheDecryptionKey(unsigned int)
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::BERGeneralDecoder
Grid::IServerAddressCache::~IServerAddressCache()
Grid::CCachePreLoader::QueueFile(std::string const&, Grid::ContentPriority::ERequestLevel, bool)
vtable for Grid::CAppVersionLaunchOptionIdsRecord
Grid::CClientManager::ClientConnect(std::string const&)
common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::~ObjFunctorImpl0()
vtable for Grid::CFsTable
common::CBlobKey::SetValue(std::string const&, void const*, unsigned int)
Grid::CAccount::Delete(common::CCommandStatusControl&)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::IsUnit(CryptoPP::Integer const&) const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
CryptoPP::FileSink::WriteErr::~WriteErr()
Grid::CCacheFileFixedDirectory::SortChain(unsigned int)
typeinfo for Grid::CSClient::COperationCancelledException
Grid::CEngineConnection::LoadFileToApp(unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
DW.ref._ZTIN4Grid21CManifestBinExceptionE
Grid::CEngineConnection::~CEngineConnection()
std::vector<__gnu_cxx::_Hashtable_node<std::pair<int const, Handle_t*>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<int const, Handle_t*>>*>>::~vector()
Grid::CSClient::HelperTicketCacheRemoveTicket(std::string const&, unsigned int, common::CIPAddrPort const&)
Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CCacheFileFixedDirectory::~CCacheFileFixedDirectory()
Grid::CCommandThreadPool::CCommandThreadPool()
typeinfo name for common::CStringTable
Grid::CClientManager::CImpl::FlushMasterPipe()
Grid::CFsTable::CImpl::EnablePreloader(std::string const&, unsigned int)
Grid::CAccountSubscriptionRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CFsCacheGroup::CImpl::CFileHandleEntry::~CFileHandleEntry()
common::CExceptionHolder::~CExceptionHolder()
Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::IEngineConnection::~IEngineConnection()
Grid::CAllSubscriptionsRecord::CValidateFieldsException::Clone() const
construction vtable for CryptoPP::PK_FixedLengthDecryptor-in-CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl()
common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::~FunctorImpl2()
vtable for CryptoPP::BERSequenceDecoder
typeinfo for Grid::CAccountSubscriptionBillingInfoRecord::CValidateFieldsException
vtable for ScopeGuardImplBase
common::CMultiFieldBlob::~CMultiFieldBlob()
Grid::CEngineLoopbackConnection::IsFileNeededByCache(unsigned int, char const*, unsigned long long, TSteamError*)
Grid::CEngineConnection::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
typeinfo for CryptoPP::StringStore
Grid::CSClient::CSession::StartNewFSM(common::CThreadSafeCountedPtr<Grid::CSClient::IProtocolFSM> const&)
Grid::ICommandState::StartRequestAccountsByEmailAddressEmail(std::string const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CCountedPtr<Grid::IEngineConnection>>>*)
CryptoPP::Filter::~Filter()
CryptoPP::Source::~Source()
CreateFile(char const*, unsigned int, unsigned int, void*, unsigned int, unsigned int, void*)
Grid::CSubExtendedInfoRecord::~CSubExtendedInfoRecord()
Grid::InternalSteamEnumerateSubscription(unsigned int, unsigned int, TSteamSubscription*, TSteamError*)
Grid::CCacheFileFixedFsTree::CCacheFileFixedFsTree(unsigned char*, unsigned int, long)
typeinfo for CryptoPP::FixedBlockSize<20u>
ObjScopeGuardImpl0<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)()>::~ObjScopeGuardImpl0()
typeinfo for BSL::CUnpackedTime::CFromStringException
vtable for Grid::CAccountUserPasswordRecord
Grid::CEngineConnection::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
Grid::CUserAppAccessRightsRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::ICache::CResourceIsNotFile
Grid::CFs::FlushCache(std::string const&, unsigned int, unsigned int, common::CCommandStatusControl*)
Grid::CReadFileChecksumFailedException::~CReadFileChecksumFailedException()
common::CEventLoopThread::~CEventLoopThread()
CryptoPP::Rijndael::Td1
Grid::CAccount::CImpl::CImpl(Grid::CAccount&)
common::CFileUtil::IsLegalFileOrDirName(std::string const&)
typeinfo for Grid::CEngineNotRunningException
vtable for Grid::CFs::CSeekException
typeinfo name for Grid::CAppFilesystemRecord::CValidateFieldsException
CryptoPP::StreamCipher::~StreamCipher()
CryptoPP::Store::Put(unsigned char)
vtable for ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>
Grid::CAccountSubscriptionsRecord::~CAccountSubscriptionsRecord()
common::CCommandStatusControlAutoTimeout::~CCommandStatusControlAutoTimeout()
Grid::CSClient::CBlockingReadFileCompletionHandler::~CBlockingReadFileCompletionHandler()
std::vector<Grid::CSClient::TClientBandwidthStats, std::allocator<Grid::CSClient::TClientBandwidthStats>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CSClient::TClientBandwidthStats*, std::vector<Grid::CSClient::TClientBandwidthStats, std::allocator<Grid::CSClient::TClientBandwidthStats>>>, Grid::CSClient::TClientBandwidthStats const&)
Grid::CAppRegionSpecificRecord::~CAppRegionSpecificRecord()
_Unwind_GetIP
Grid::CAllSubscriptionsRecord::ValidateFields(std::ostream*, unsigned int)
vtable for common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
Grid::CSClient::CConnection::Send(common::CWSABUFWrapper*, Overlapped_t const*, void (*)(unsigned int, unsigned int, Overlapped_t*, unsigned int))
DW.ref._ZTIN4Grid6ICache24CResourceChecksumFailureE
typeinfo name for Grid::ICache::CReadException
CryptoPP::Integer::~Integer()
typeinfo for Grid::CAppRegionRecord::CValidateFieldsException
typeinfo name for Grid::CAppLaunchOptionRecord
common::ILogFunctor::~ILogFunctor()
ScopeGuardImpl1<int (*)(int), long>::~ScopeGuardImpl1()
typeinfo for IAppSystem
std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts*, std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>>, Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts const&)
std::deque<aiocb*, std::allocator<aiocb*>>::_M_reallocate_map(unsigned int, bool)
Grid::ICache::CAppIdDoesNotMatchException::~CAppIdDoesNotMatchException()
common::CThread::CImpl::CImpl(std::string const&, common::CThread::EPriority)
common::CLog::EnableContextName()
Grid::CFs::DefragCaches(std::string const&, EGameState, unsigned int, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&, common::CCommandStatusControl*)
Grid::CInstallPath::UniverseName()
typeinfo name for Grid::CCacheNone
common::CThreadSafeCountedPtr<Grid::CCachePreLoader>::dispose()
common::CNamedArgsUndefinedNameException::~CNamedArgsUndefinedNameException()
Grid::CFsTable::AppLock(std::string const&, unsigned int)
typeinfo for Grid::ICache::CInvalidResourceOffset
sigslot::multi_threaded_local::~multi_threaded_local()
Grid::CManifestBin::Serialize(_IO_FILE*) const
typeinfo name for Grid::CCacheExceptionTranslator
typeinfo name for common::CCompressionException
CryptoPP::MessageQueue::MaxRetrievable() const
Grid::CAppRecord::CValidateFieldsException::~CValidateFieldsException()
std::auto_ptr<Overlapped_t>::~auto_ptr()
SteamAPI_UnregisterCallback
Grid::ICache::CInternalErrorException::~CInternalErrorException()
Grid::ICache::CReadException::~CReadException()
vtable for Grid::CFs::CBadMountException
Grid::CAllSubscriptionsRecord::~CAllSubscriptionsRecord()
typeinfo for Grid::CStalledCallException
vtable for common::IAssertObserver
std::vector<BSL::CTime, std::allocator<BSL::CTime>>::~vector()
std::_Deque_base<unsigned long, std::allocator<unsigned long>>::_M_create_nodes(unsigned long**, unsigned long**)
common::CObjFunctor<Grid::CSClient::CConnection>::~CObjFunctor()
std::basic_string<char, std::char_traits<char>, BSL::CAllocator<char>>::~basic_string()
typeinfo for CryptoPP::Rijndael
Grid::CEngineLoopbackConnection::EnumerateSubscriptionDiscount(unsigned int, unsigned int, TSteamSubscriptionDiscount*, TSteamError*)
Grid::CEngineConnection::GetSubscriptionExtendedInfo(unsigned int, char const*, char*, unsigned int, unsigned int*, TSteamError*)
CryptoPP::ByteQueue::Get(unsigned char&)
Grid::ICache::CInvalidResourceOffset::Clone() const
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::~_Rb_tree()
common::CConfigTree::GetValue(char const*)
typeinfo for CryptoPP::FileSink
typeinfo name for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkHeaderState
Grid::CEngineLoopbackConnection::GetAppIds(unsigned int*, unsigned int, TSteamError*)
Grid::ContentServerDirectoryServerCommands::FindBestClientContentIPAddrPorts(common::CIPAddrPort const&, std::vector<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts, std::allocator<Grid::ContentServerDirectoryServerCommands::TCsClientContentIPAddrPorts>>*, unsigned short, unsigned int, unsigned int, unsigned int, unsigned int, common::CCommandStatusControl*)
vtable for Grid::CAppVersionLaunchOptionIdsRecord::CValidateFieldsException
Grid::CManifestFormatException::Clone() const
Grid::CCacheManifestOnly::CImpl::CImpl(std::string const&, std::string const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int, bool)
Grid::CNotFoundException::~CNotFoundException()
Grid::ICache::CResourceIsNotFile::ThrowSelf() const
typeinfo name for ObjScopeGuardImpl1<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)(unsigned int), unsigned int>
typeinfo name for CryptoPP::PK_SignatureSystem
typeinfo name for Grid::CPipeComm
vtable for Grid::IEngineConnection
Grid::InternalSteamGetLocalClientVersion(unsigned int, unsigned int*, unsigned int*, TSteamError*)
common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>* std::__uninitialized_copy<false>::uninitialized_copy<common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*>(common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*, common::CCountedPtr<Grid::CAppSubscriptionIdsRecord>*)
vtable for common::IFunctor
Grid::CEngineLoopbackConnection::TellFile64(unsigned int, TSteamError*)
MapViewOfFile(void*, unsigned int, unsigned int, unsigned int, unsigned int)
Grid::CLockedCDDBCache::BSubscriptionExists(unsigned int)
typeinfo for Grid::CFs::CUnknownException
CryptoPP::CFBEncryption::ProcessString(unsigned char*, unsigned char const*, unsigned int)
typeinfo for CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
_Unwind_SetGR
Grid::CSClient::CLogoutFSM::CLogoutFSM(Grid::CSClient::CSession&, Grid::CSClient::ICompletionHandler*, unsigned int)
vtable for BSL::CTime::CTimeToPackNegative
Grid::CFs::Close(unsigned int, unsigned int)
Grid::CEngineConnection::GetSubscriptionPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
Grid::CEngineLoopbackConnection::LaunchApp(unsigned int, unsigned int, char const*, TSteamError*)
Grid::CFs::CAppHasNoCacheFileException::ThrowSelf() const
typeinfo name for common::CMultiFieldBlob::CFieldDoesNotExistException
Grid::CCacheBatBlock::Set(unsigned int, unsigned int)
common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>::~ObjFunctorImpl1()
void std::__introsort_loop<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, int, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, int, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
Grid::CAccountEmptyReceiptRecord::~CAccountEmptyReceiptRecord()
Grid::CClientManager::~CClientManager()
common::CMultiFieldBlob::CInvalidSerializedBlobException::Clone() const
Grid::CReturnBufferAggregate::~CReturnBufferAggregate()
Grid::CLocalClockSkewException::CLocalClockSkewException(BSL::CTime const&)
ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int> MakeObjGuard<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>(Grid::CSClient::CConnection&, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int)
Grid::CFs::CBadMountException::~CBadMountException()
Grid::CCacheExceptionTranslator::~CCacheExceptionTranslator()
common::CMultiFieldBlob::CFieldDoesNotExistException::~CFieldDoesNotExistException()
Grid::CCacheDataBlock::CCacheDataBlock(unsigned int, unsigned int, unsigned int)
vtable for ObjScopeGuardImpl0<common::LockGuard<common::CFastThreadMutex>, void (common::LockGuard<common::CFastThreadMutex>::*)()>
typeinfo for Grid::CAppSubscriptionIdsRecord
vtable for Grid::CSClient::CLoginFSM
std::_Rb_tree<int, std::pair<int const, CCallbackBase*>, std::_Select1st<std::pair<int const, CCallbackBase*>>, std::less<int>, std::allocator<std::pair<int const, CCallbackBase*>>>::~_Rb_tree()
Grid::CCacheOneFileFixedBlock::CImpl::WorkThreadProc(void*)
typeinfo name for Grid::CBadCallerErrorStructPtrException
Grid::InternalSteamWasBlobRegistryDeleted(unsigned int, int*, TSteamError*)
Grid::CClientAgentThread::~CClientAgentThread()
typeinfo name for Grid::CSClient::CReadPurgeListFSM::CRecvDataChunkState
Grid::CEngineLoopbackConnection::GetCacheFilePath(unsigned int, char*, unsigned int, unsigned int*, TSteamError*)
Grid::CPreauthenticationFailedException::~CPreauthenticationFailedException()
Grid::CFs::CFileAccessRightsException::~CFileAccessRightsException()
common::CSendException::~CSendException()
CryptoPP::BufferedTransformation::~BufferedTransformation()
std::vector<void*, std::allocator<void*>>::~vector()
CryptoPP::HexEncoder::~HexEncoder()
vtable for Grid::CSClient::CReadPurgeListFSM
sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>::~_signal_base1()
common::UnserializeMultipleIPAddrPorts(unsigned char const*, unsigned int, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
Grid::InternalSteamLogin(unsigned int, char const*, char const*, int, TSteamError*)
typeinfo for Grid::CUserAppAccessRightsRecord
vtable for CryptoPP::SHA256
Grid::CNotLoggedInException::Clone() const
common::CDefaultAssertCatcher::RegisterAssertObserver(common::IAssertObserver*)
common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>::operator()()
typeinfo name for sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
Grid::CEngineLoopbackConnection::WaitForResources(unsigned int, bool, char const*, TSteamError*)
Grid::CAppStatus::Instance()
vtable for Grid::CAppLaunchOptionsRecord
Grid::CAccountIsDisabledException::~CAccountIsDisabledException()
typeinfo for Grid::CSClient::CManifestFingerprintMistatchOnReconnectException
typeinfo for BSL::CUnpackedTime::CFromStringInvalidLength
Grid::CSClient::CReadFileFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::CSClient::CReadFileFSM::s_RecvInitialReplyState
Grid::CEngineLoopbackConnection::IsSubscribed(unsigned int, int*, int*, TSteamError*)
CryptoPP::FileSink::OpenErr::~OpenErr()
non-virtual thunk to CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool()
Grid::CCacheExceptionTranslator::ThrowSelf() const
Grid::ICacheGroupIteratorImpl::GetCache() const
Grid::CLockedCDDBCache::s_pAllSubsRecord
common::IKey::~IKey()
Grid::CResourceFile::LoadResourceFile()
Grid::CEngineConnection::InsertAppDependency(unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
CryptoPP::BufferedTransformation::AttachedTransformation()
Grid::CEngineLoopbackConnection::SetUser2(char const*, TSteamError*)
_Unwind_Resume_or_Rethrow
common::CValue::CValue(std::string const&, common::CValue::EType, unsigned char const*, unsigned int)
CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>::~RSAPrivateKeyTemplate()
typeinfo name for CryptoPP::AutoSeededRandomPool
Grid::CMasterResourceList::~CMasterResourceList()
CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestSignatureSystemBaseTemplate()
typeinfo name for Grid::CFileHandleList
typeinfo for common::CLogContext
Grid::CCacheFileFixedFsTree::~CCacheFileFixedFsTree()
non-virtual thunk to CryptoPP::RandomPool::Put(unsigned char const*, unsigned int)
Grid::CCacheQueueManager::PrepareForShutdown()
Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException::ThrowSelf() const
std::_List_base<arg::counted_ptr<Grid::IResourceList>, std::allocator<arg::counted_ptr<Grid::IResourceList>>>::_M_clear()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::~_Rb_tree()
CloseHandle(void*)
Grid::CAccount::SetAppCurrentVersion(common::CCommandStatusControl&, unsigned int, unsigned int)
vtable for Grid::CCacheDataBlock
Grid::CCellIDManager::SetIPCountry(char const*)
typeinfo name for Grid::CAccountUsersRecord::CValidateFieldsException
vtable for Grid::CAppUserDefinedRecord
common::CLogContextFunctor::~CLogContextFunctor()
__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>::operator*() const
Grid::CEngineConnection::ChangeForgottenPassword(char const*, char const*, char const*, char const*, int*, TSteamError*)
Grid::CDerivedSubscribedAppsRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for Grid::CCacheBatBlock
virtual thunk to CryptoPP::MessageQueue::NumberOfMessages() const
common::CUsedAuthenticatorTimestampsCache::PurgeClientRecordIfNoAuthenticatorTimestampsInsideSensitiveWindow(unsigned int, unsigned int, BSL::CTime const&)
Grid::CAppIconsRecord::CValidateFieldsException::Clone() const
common::CThreadSafeCountedPtr<Grid::CAppStatus>::~CThreadSafeCountedPtr()
Grid::CFs::CBadMountException::Clone() const
Grid::CSClient::CSessionLoginFailedException::~CSessionLoginFailedException()
Grid::CSClient::CancelPendingCall(unsigned int, unsigned int)
Grid::ICommandState::StartDefragCaches(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int)
Grid::CEngineLoopbackConnection::Getc(unsigned int, TSteamError*)
CloseMutex(void*)
typeinfo for ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>
BSL::CTimePrecisionInvalid::~CTimePrecisionInvalid()
common::CValueDoesNotExistException::Clone() const
CryptoPP::HexEncoder::Put(unsigned char const*, unsigned int)
Grid::CFs::HandleChangingAppDependency(std::string const&, EGameState, unsigned int, unsigned int, Grid::TAppFilesystemInfo&, bool, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>, std::_Select1st<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock>>, std::pair<std::string const, Grid::CFsTable::CImpl::TAppLock> const&)
typeinfo name for common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::NewMessageAccumulator() const
std::auto_ptr<common::CThreadSafeCountedPtr<Grid::CSClient::CSendCompletionDemuxInfo>>::~auto_ptr()
vtable for CryptoPP::ModularArithmetic
Grid::CEngineLoopbackConnection::OpenFile(char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)
CryptoPP::NonblockingRng::~NonblockingRng()
typeinfo for ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>
Grid::CClientConnection::~CClientConnection()
RecursiveDeleteFiles(Grid::CManifestIterator&, std::string const&)
typeinfo for Grid::CSubscriptionRecord
Grid::CAccount::RefreshAccountInfo(bool, bool, common::CCommandStatusControl&)
CAppSystem::Shutdown()
Grid::CMasterResourceList::~CMasterResourceList()
sigslot::_connection2<Grid::CClientConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::emit(ESteamNotificationCallbackEvent, unsigned int)
Grid::ICache::ICacheCompletionHandler::ICacheCompletionHandler()
Grid::CCacheFileFixedDirectory::NoBoundsCheckAdd(unsigned int, Grid::CCacheFileFixedDirectoryEntry&)
CryptoPP::RecursiveMultiply(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
Grid::CAccountPendingException::~CAccountPendingException()
typeinfo for Grid::CAppVersionsRecord
construction vtable for CryptoPP::Filter-in-CryptoPP::AES_PHM_Encryption
Grid::CEngineConnection::GetUserType(unsigned int*, TSteamError*)
Grid::CSClient::CReadManifestFSM::s_RecvDataChunkHeaderState
Grid::CBufferTable::~CBufferTable()
Grid::CBufferTable::Read(unsigned int, unsigned int, unsigned char*)
Grid::IManifestIteratorImpl::IsUserConfigFile() const
virtual thunk to CryptoPP::Filter::~Filter()
Grid::CSubscriberAccountRecord::~CSubscriberAccountRecord()
Grid::CEngineLoopbackConnection::WriteFile(void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
typeinfo name for ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>
Grid::CEngineLoopbackConnection::DefragCaches(unsigned int, TSteamError*)
std::vector<Grid::CAuthenticatorPayloadChunk, std::allocator<Grid::CAuthenticatorPayloadChunk>>::~vector()
Grid::CAppSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CEngineConnection::GetAppDLCStatus(unsigned int, unsigned int, int*, TSteamError*)
Grid::CAppIconsRecord::~CAppIconsRecord()
common::CFileUtil::ReadFileIntoMallocedMemory(std::string const&, unsigned int*)
typeinfo name for Grid::CAllAppsEncryptedPrivateKeysRecord
Grid::CCacheOneFileFixedBlock::CImpl::FlushEntry(unsigned int)
vtable for Grid::CNotFoundException
CryptoPP::BufferedTransformation::PutWord32(unsigned long, bool)
__i686.get_pc_thunk.cx
typeinfo for Grid::CResourceListFile
common::CThread::~CThread()
Grid::GeneralDirectoryServerCommands::FindAllFriendsServerIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
vtable for CryptoPP::IteratedHash<unsigned long, true, 64u>
Grid::CAppUserDefinedRecord::~CAppUserDefinedRecord()
typeinfo name for Grid::CCacheGroup
Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException::~CValidateFieldsException()
__register_frame_info_bases
inflate_mask
Grid::CCacheDataBlock::SplitData(std::vector<_IO_FILE*, std::allocator<_IO_FILE*>> const&, unsigned long long)
Grid::ICache::COpenException::~COpenException()
Grid::CEngineConnection::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>::~CmdAdaptor()
CryptoPP::Rijndael::Td4
Grid::CFsCacheGroup::CImpl::GetFileSize(unsigned int)
Grid::CSClient::CReadManifestFSM::CSendRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
void std::random_shuffle<__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>(__gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, __gnu_cxx::__normal_iterator<common::CIPAddrPort*, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>)
CryptoPP::ByteQueue::MaxRetrievable() const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvInitialReplyState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
std::vector<unsigned char, std::allocator<unsigned char>>::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char>>>, unsigned int, unsigned char const&)
Grid::CAccount::ChangeAccountName(common::CCommandStatusControl&, std::string const&, std::string const&)
common::CBlobRegistry::ValueExists(std::string const&, std::string const&)
common::IValueIteratorImpl::~IValueIteratorImpl()
BSL::CUnpackedTime::ThrowOutOfRange() const
std::_Rb_tree<int, std::pair<int const, CCallbackBase*>, std::_Select1st<std::pair<int const, CCallbackBase*>>, std::less<int>, std::allocator<std::pair<int const, CCallbackBase*>>>::_M_erase(std::_Rb_tree_node<std::pair<int const, CCallbackBase*>>*)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::string>>, std::pair<unsigned int const, std::string> const&)
Grid::CClientAgentThread::ThreadProc()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>> const&)
Grid::CFsTable::CImpl::CImpl()
typeinfo name for Grid::ICache::COpenException
Grid::CFs::WaitForResources(unsigned int, std::string const&, unsigned int, bool, std::vector<std::string, std::allocator<std::string>>&, common::CCommandStatusControl*)
Grid::CEngineLoopbackConnection::RefreshAccountInfo(int, int, TSteamError*)
Grid::InternalSteamVerifyPassword(unsigned int, char const*, int*, TSteamError*)
typeinfo for Grid::CAppIconsRecord::CValidateFieldsException
ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>::~ObjScopeGuardImpl0()
std::vector<Grid::CCacheReplacementLru::TLru32, std::allocator<Grid::CCacheReplacementLru::TLru32>>::~vector()
common::ObjFunctorImpl0<common::CBlobRegistry, void (common::CBlobRegistry::*)()>::~ObjFunctorImpl0()
Grid::CCacheFileFixedDirectory::Invalidate(unsigned int)
typeinfo name for ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>
std::string* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*, std::string>(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string>>>, std::string*, std::allocator<std::string>)
CryptoPP::OID::BERDecodeAndCheck(CryptoPP::BufferedTransformation&) const
Grid::CCacheQueueManager::CImpl::AddItem(std::string const&, unsigned long long, unsigned long long, unsigned int, unsigned char*, bool, Grid::ContentPriority::ERequestLevel, bool, common::CWin32Event*, unsigned int, unsigned long long)
common::CCommandStatusControlAutoTimeoutIfStalled::~CCommandStatusControlAutoTimeoutIfStalled()
Grid::CFs::CEndOfFileException::CEndOfFileException(unsigned int, common::CErrorCodeException::ESpecificType)
typeinfo for CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
typeinfo for Grid::CPipeComm::CBrokenPipeException
Grid::CClientConnection::HandleFindNext()
typeinfo name for ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>
CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>::~CCallback()
common::CBlobException::CBlobException(std::string const&)
ObjScopeGuardImpl0<common::CBlobKey, void (common::CBlobKey::*)()>::~ObjScopeGuardImpl0()
virtual thunk to CryptoPP::MessageQueue::MessageEnd(int)
Grid::CEngineConnection::GetAppUpdateStats(unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*, TSteamError*)
typeinfo name for Grid::CNotFoundException
Grid::CFs::CException::~CException()
common::CSimpleBitString::ReversiblyObfusticateBitsFromStart(unsigned int, unsigned char const*, unsigned int)
Grid::CLauncher::~CLauncher()
Grid::CSClient::CBlockingLoginCompletionHandler::~CBlockingLoginCompletionHandler()
void std::_Destroy<unsigned long*, unsigned long>(unsigned long*, unsigned long*, std::allocator<unsigned long>)
construction vtable for CryptoPP::Store-in-CryptoPP::BERSequenceDecoder
typeinfo for Grid::CSClient::CReadPurgeListFSM
common::CFindFile::Next()
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Multiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CMasterResourceList::Add(std::vector<std::string, std::allocator<std::string>>&, Grid::ContentPriority::ERequestLevel, bool, bool)
Grid::CFs::GetCacheFilePath(unsigned int, Grid::CFs::EMountType*, bool)
std::_Deque_base<unsigned long, std::allocator<unsigned long>>::~_Deque_base()
Grid::CCacheServerSessionMgr::ReadManifest(common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
common::CFileUtil::FindFilesInDir(std::string const&, std::string const&)
Grid::CCellIDManager::~CCellIDManager()
Grid::CAppSubscriptionIdsRecord::~CAppSubscriptionIdsRecord()
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState::~CRecvSizeOfNextCompressedBlockChunkState()
vtable for Grid::CAccountUsersRecord
Grid::IFsStrategy::IFsStrategy()
common::CBlobKey::CPublicKey::DeleteSubKeyTreeNoThrow(std::string const&)
Grid::CCacheFileFixedFsTree::CBadFormatVersionException::~CBadFormatVersionException()
Grid::CManifestBinException::CManifestBinException(std::string const&)
__gnu_cxx::new_allocator<unsigned long>::new_allocator(__gnu_cxx::new_allocator<unsigned long> const&)
std::string BSL::HexEncode<std::string>(unsigned char const*, unsigned int, bool)::szHexDigits
CryptoPP::MessageQueue::MessageEnd(int)
vtable for Grid::CReturnBufferItem<char [256]>
Grid::CCacheOneFileFixedBlock::GetContentServerInfo(unsigned int*, unsigned int*)
common::CLogFile::CLogFile(char const*, bool, common::CLogFile::FileMode, common::CLogFile::FileLogMode)
Grid::CErrnoErrorException::ThrowSelf() const
Grid::CFs::CSeekException::CSeekException(common::CErrorCodeException::ESpecificType)
typeinfo name for Grid::IFsStrategy
Grid::CAppRecord::CValidateFieldsException::ThrowSelf() const
Grid::CLibraryAlreadyInitializedException::ThrowSelf() const
common::CEventLoopThread::CException::Clone() const
Grid::CAccount::IsSubscriptionPending(unsigned int)
inflate_codes_new
Grid::CMutexGuard::CMutexGuard(void*, unsigned int)
std::string std::stringize<unsigned int>(unsigned int)
CryptoPP::ByteQueue::FinalizeLazyPut()
vtable for common::CErrorCodeException
typeinfo for ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>
Grid::CEngineConnection::GetSubscriptionIds(unsigned int*, unsigned int, TSteamError*)
Grid::CEngineConnection::WriteFile(void const*, unsigned int, unsigned int, unsigned int, unsigned int, TSteamError*)
Grid::CClientManager::CImpl::s_uNewClientConnectCode
ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
Grid::CManifestBin::CManifestBin(unsigned char const*, unsigned int, long)
Grid::CSClient::IProtocolState::~IProtocolState()
common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>::dispose()
Grid::CInstallPath::Instance()
vtable for CryptoPP::HashModule
construction vtable for CryptoPP::PK_Decryptor-in-CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
vtable for sigslot::_connection1<Grid::CAccount::CImpl, unsigned int, sigslot::multi_threaded_local>
common::ConnectToServer(common::CIPAddrPort const&)
virtual thunk to CryptoPP::PK_FixedLengthCryptoSystem::~PK_FixedLengthCryptoSystem()
Grid::CAccount::GetAppPurchaseCountry(unsigned int, int*)
Grid::CCacheExceptionTranslator::Clone() const
common::CBlobKey::CPublicKey::OpenSubKey(std::string const&)
Grid::CSClient::CReadManifestFSM::DoFinish()
common::CMultiFieldBlob::CBlobException::~CBlobException()
vtable for common::CSubKeyIterator
Grid::CSClient::IBlockingCompletionHandler::WaitForCompletion()
typeinfo name for BSL::CUnpackedTime::CFromStringException
CryptoPP::BufferedTransformation::TotalBytesRetrievable() const
vtable for common::CNamedArgsUndefinedNameException
Grid::CResourceListFile::~CResourceListFile()
Grid::CAccount::ChangePersonalQA(common::CCommandStatusControl&, std::string const&, std::string const&, std::string const&)
Grid::GeneralDirectoryServerCommands::FindAllConfigServerClientIPAddrPorts(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>> const&, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*, common::CCommandStatusControl*)
common::OutputXMLCloseTag(char const*, std::ostream&, unsigned int)
Grid::AuthenticationServer_AuthenticateAndRequestTGT(std::string const&, std::string const&, std::string const&, BSL::CTime*, BSL::CTime*, common::CMallocedBlock*, common::CCommandStatusControl*)
typeinfo name for ObjScopeGuardImpl0<common::CCommandStatusControl, void (common::CCommandStatusControl::*)()>
typeinfo for Grid::CAppVersionLaunchOptionIdsRecord
Grid::OfflineStatus::GetNextLaunchState()
Grid::CResourceListNodes::~CResourceListNodes()
vtable for Grid::CContentDescriptionRecord
CAppSystem::Connect(void* (*)(char const*, int*))
typeinfo name for Grid::CSClient::CBlockingReadManifestHandler
CryptoPP::BufferedTransformation::GetWord16(unsigned short&, bool)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>, std::_Select1st<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>>>, std::pair<unsigned int const, std::map<unsigned int, bool, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>> const&)
common::CFileUtil::FixSlashes(std::string&)
vtable for Grid::IFsStrategy
Grid::CAccount::CImpl::MakeSureOnline()
common::CWSABUFWrapper::~CWSABUFWrapper()
common::CUsedAuthenticatorTimestampsCache::CNoAuthenticatorTimestampsRecordedForThisClientException::~CNoAuthenticatorTimestampsRecordedForThisClientException()
ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>::ExecuteNowIfNotDismissed() const
virtual thunk to CryptoPP::PK_Verifier::~PK_Verifier()
typeinfo name for Grid::CCacheDataBlock
std::vector<std::string, std::allocator<std::string>>::end() const
typeinfo for Grid::CAppVersionInfoRecord
Grid::CEngineLoopbackConnection::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
inflateSetDictionary
std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, CCallbackBase*>, std::_Select1st<std::pair<unsigned long long const, CCallbackBase*>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, CCallbackBase*>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned long long const, CCallbackBase*>>*)
Grid::CSClient::SignalBadProtocolVersion
Grid::CSClient::CReadFileChecksumTableFSM::~CReadFileChecksumTableFSM()
Grid::CLibraryAlreadyInitializedException::~CLibraryAlreadyInitializedException()
CCallback<CCallbackMgr, SteamAPICallCompleted_t, false>::GetCallbackSizeBytes()
typeinfo name for Grid::CAccount::CImpl
Grid::CCacheOneFileFixedBlock::CImpl::GetCountFragmentedFiles(unsigned int*, unsigned int*)
CryptoPP::Integer::swap(CryptoPP::Integer&)
common::CSubKeyIterator::CSubKeyIterator(common::ISubKeyIteratorImpl*)
__register_frame_info_table_bases
CryptoPP::xorbuf(unsigned char*, unsigned char const*, unsigned int)
ObjScopeGuardImpl0<common::CBlobRegistry::CImpl, void (common::CBlobRegistry::CImpl::*)()>::~ObjScopeGuardImpl0()
CMessageBuffer::MSG_WriteShort(int)
Grid::CAccount::TryToEnsureLoginIsValid(common::CCommandStatusControl&)
CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>::~PKCS_DecoratedHashModule()
VTT for CryptoPP::PK_FixedLengthDecryptor
Grid::CEngineLoopbackConnection::Stat64(char const*, TSteamElemInfo64*, TSteamError*)
Grid::IResourceList::~IResourceList()
typeinfo for Grid::CClientManager::CImpl
CryptoPP::RSAFunction::PreimageBound() const
Grid::CAppStatus::~CAppStatus()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CCountedPtr<std::string>>, std::_Select1st<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>>::erase(std::_Rb_tree_iterator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>, std::_Rb_tree_iterator<std::pair<unsigned int const, common::CCountedPtr<std::string>>>)
typeinfo for Grid::CReturnBufferAggregate
common::CNamedArgsUndefinedNameException::~CNamedArgsUndefinedNameException()
construction vtable for CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
Grid::CClientManager::CImpl::ClientConnect(std::string const&)
Grid::CAppIconsRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CSClient::CReadManifestFSM::CRecvDataChunkState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
typeinfo for Grid::CRateLimitRecord
typeinfo name for Grid::CAccountSubscriptionRecord::CValidateFieldsException
Grid::CSClient::COperationCancelledException::~COperationCancelledException()
vtable for Grid::CAppVersionsRecord
common::CExceptionHolder::CExceptionHolder()
Grid::CCacheOneFileFixedBlock::ValidateCache(common::CCommandStatusControl*, Grid::ICacheCallback*)
Grid::ICommandState::~ICommandState()
common::CBlobValueIterator::Advance()
Grid::ICache::CInternalErrorException::ThrowSelf() const
Grid::CBadLaunchConfigException::~CBadLaunchConfigException()
Grid::CSClient::CConnection::IssueReadForMessageHeader()
Grid::CSClient::CReadFileFSM::CSendRequestState::~CSendRequestState()
Grid::CSClient::CLogoutFSM::DoAbort(common::ICloneableException const&)
typeinfo name for CryptoPP::VariableKeyLength<16u, 0u, 4294967295u, 1u>
std::auto_ptr<common::CThreadSafeCountedPtr<common::CThread::CImpl>>::~auto_ptr()
Grid::CAccountUserPasswordsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CFsCacheGroup::CImpl::CImpl(unsigned int, unsigned int, common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&)
typeinfo name for CryptoPP::Source
vtable for Grid::CManifestFormatException
Grid::CAppVersionLaunchOptionIdsRecord::ValidateFields(std::ostream*, unsigned int)
std::vector<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>>>::~vector()
Grid::CEngineConnection::SeekFile64(unsigned int, long long, ESteamSeekMethod, TSteamError*)
vtable for CryptoPP::OS_RNG_Err
std::_Rb_tree<sigslot::_signal_base<sigslot::multi_threaded_local>*, sigslot::_signal_base<sigslot::multi_threaded_local>*, std::_Identity<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::less<sigslot::_signal_base<sigslot::multi_threaded_local>*>, std::allocator<sigslot::_signal_base<sigslot::multi_threaded_local>*>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, sigslot::_signal_base<sigslot::multi_threaded_local>* const&)
Grid::CAppVersionLaunchOptionIdsRecord::~CAppVersionLaunchOptionIdsRecord()
Grid::CEngineConnection::EnumerateAppIcon(unsigned int, unsigned int, unsigned char*, unsigned int, unsigned int*, TSteamError*)
Grid::InternalSteamInsertAppDependency(unsigned int, unsigned int, unsigned int, TSteamAppDependencyInfo*, TSteamError*)
common::ICloneableException::ICloneableException(std::string const&)
vtable for arg::counted_ptr<Grid::IResourceList>
vtable for Grid::CAllAppsRecord
typeinfo name for CryptoPP::Integer::DivideByZero
Grid::CContentDescriptionDBCache::CContentDescriptionDBCache()
Grid::CSClient::CUnacceptableProtocolVersionException::ThrowSelf() const
Grid::CSClient::CReadPurgeListFSM::s_RecvDataChunkState
common::CThreadSafeAutoSeededRandomPoolSingleton::GenerateByte()
CryptoPP::CFBEncryption::~CFBEncryption()
BSL::CUnpackedTime::CFromStringException::DefaultMessage() const
Grid::CAccount::IsSubscribed(unsigned int)
common::CAdaptPlainToEventLoopFunctor::~CAdaptPlainToEventLoopFunctor()
typeinfo for Grid::ICache::CAppIdDoesNotMatchException
std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
Grid::CEngineConnection::GetAppCacheSize(unsigned int, unsigned int*, TSteamError*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::Square(CryptoPP::Integer const&) const
Grid::CEngineLoopbackConnection::Unsubscribe(unsigned int, TSteamError*)
Grid::CUserAppAccessRightsRecord::CValidateFieldsException::~CValidateFieldsException()
typeinfo for CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT
CryptoPP::MessageQueue::AnyRetrievable() const
Grid::CSClient::CService::DestroySession(unsigned int)
CryptoPP::SecBlock<unsigned long>::~SecBlock()
common::CFindFile::~CFindFile()
Grid::CResourceListFile::GetPriority()
vtable for Grid::CSubscriberAccountRecord::CValidateFieldsException
Grid::CAccount::CImpl::HandleDestroyPreloader(unsigned int)
CryptoPP::RSAPublicKeyTemplate<CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>>::~RSAPublicKeyTemplate()
common::CMultiFieldBlob::CUnableToGrowBlobException::~CUnableToGrowBlobException()
inflate_trees_fixed
Grid::CAccountSubscriptionRecord::~CAccountSubscriptionRecord()
Grid::CEngineLoopbackConnection::GetCachePercentFragmentation(unsigned int, unsigned int*, TSteamError*)
Grid::CSClient::CBlockingLogoutCompletionHandler::~CBlockingLogoutCompletionHandler()
Grid::CAccount::SetUser(common::CCommandStatusControl&, std::string const&)
Grid::CClientConnection::HandleGetAppUserDefinedInfo()
DW.ref._ZTIN4Grid41CAuthenticationServerIsNotMasterExceptionE
BSL::CUnpackedTime::CFromStringInvalidCharacter::CFromStringInvalidCharacter(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
Grid::CCacheOneFileFixedBlock::Stat(Grid::CManifestIterator&, TSteamElemInfo64*, bool*)
typeinfo for BSL::CTimePrecisionInvalid
Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException::Clone() const
Grid::CFileIdChecksumTable::CFileIdChecksumTable(void*, unsigned int)
Grid::CEngineLoopbackConnection::Subscribe(unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
typeinfo name for common::CBlobKey::CPublicKey
typeinfo for common::CConfigDatabase
typeinfo for Grid::CAllDiscountQualifiersRecord
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~CryptoSystemBaseTemplate()
common::CThread::CException::ThrowSelf() const
Grid::CAppStatus::StoreCacheMountPathUsed(unsigned int, std::string const&)
Grid::CClientAuthenticationTicket::ValidateFields()
Grid::CCacheServerSessionMgr::GetContentServerInfo(unsigned int*, unsigned int*)
Grid::CEngineLoopbackConnection::EnumerateAppVersion(unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>::~ObjScopeGuardImpl0()
Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
vtable for CryptoPP::AbstractGroup<CryptoPP::Integer>
Grid::CFsTable::CImpl::GetClientWorkingDir(unsigned int)
Grid::CSClient::CLoginFSM::s_RecvSessionLoginReplyStatusState
std::_List_base<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::_M_clear()
Grid::CAccount::Launch(common::CCommandStatusControl&, unsigned int, unsigned int, std::string const&)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>::find(std::string const&)
CryptoPP::SHA256::Init()
common::CValue::GetType() const
typeinfo for ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>
vtable for Grid::CShippingInfoRecord::CValidateFieldsException
common::OutputAsHexData(unsigned char const*, unsigned int, std::ostream&)
std::map<std::string, common::CBlobKey*, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::operator[](std::string const&)
typeinfo name for Grid::CClientBinaryManifestRecord
common::CBlobRegistry::InitImpl(std::string const&, bool, bool)
typeinfo for CryptoPP::AbstractRing<CryptoPP::Integer>
DW.ref._ZTIN4Grid6ICache33CFingerPrintDoesNotMatchExceptionE
ScopeGuardImpl1<void (*)(_IO_FILE*), _IO_FILE*>::~ScopeGuardImpl1()
virtual thunk to CryptoPP::MessageQueue::~MessageQueue()
Grid::CMasterResourceList::Remove(Grid::ContentPriority::ERequestLevel)
Grid::InternalSteamCloseFile(unsigned int, unsigned int, TSteamError*)
Grid::CEngineConnection::GetAppDependencies(unsigned int, unsigned int*, unsigned int, bool, TSteamError*)
CryptoPP::HashModuleWithTruncation::VerifyTruncatedDigest(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
BSL::CTime::CPackingException::~CPackingException()
vtable for CryptoPP::PublicKeyBaseTemplate<CryptoPP::RSAFunction>
typeinfo name for common::CThread::CException
Grid::CNotSubscribedException::CNotSubscribedException()
ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
common::CBlobKey::~CBlobKey()
vtable for common::CMultiFieldBlob::CInvalidMemoryMappedFileException
virtual thunk to CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>::~RSAPublicKeyTemplate()
typeinfo name for CryptoPP::ArrayXorSink
Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
Grid::ICache::CMultipleCacheInstanceException::Clone() const
_FixSlashes(char const*, char*, unsigned int)
Grid::CCacheManifestOnly::Read(Grid::CManifestIterator&, unsigned long long, unsigned long long, Grid::ContentPriority::ERequestLevel, unsigned char*, unsigned long long, unsigned int)
Grid::CalculateChecksum(unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int)
common::CSubKeyIterator::operator*() const
sigslot::_signal_base2<std::string const&, unsigned int, sigslot::multi_threaded_local>::~_signal_base2()
vtable for Grid::CAppFilesystemRecord::CValidateFieldsException
ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
typeinfo name for Grid::CFs::CAppHasNoCacheFileException
ScopeGuardImpl1<bool (*)(std::string const&), char const*>::~ScopeGuardImpl1()
std::vector<std::string, std::allocator<std::string>>::~vector()
Grid::CNotSubscribedException::Clone() const
Grid::CFs::CEndOfFileException::ThrowSelf() const
Grid::CNotSubscribedException::ThrowSelf() const
virtual thunk to CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>::~SignatureSystemBaseTemplate()
Grid::CMutexGuard::CTimeoutException::~CTimeoutException()
std::map<std::string, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::operator[](std::string const&)
typeinfo for common::CObjFunctor<Grid::CSClient::CService>
common::CMultiFieldBlob::CInvalidSerializedBlobException::~CInvalidSerializedBlobException()
typeinfo name for CryptoPP::FileSink::OpenErr
Grid::CCacheOneFileFixedBlock::CCacheOneFileFixedBlock(std::string const&, std::vector<std::string, std::allocator<std::string>> const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int)
Grid::CCacheQueueManager::CImpl::WorkerThreadEndItemService(unsigned int, common::ICloneableException const*)
Grid::CFsTable::CImpl::CreateClientViewOfMount(std::string const&, unsigned int, std::string const&, std::string const&)
vtable for Grid::CCacheManifestOnly
virtual thunk to CryptoPP::HexEncoder::~HexEncoder()
CryptoPP::AbstractRing<CryptoPP::Integer>::Divide(CryptoPP::Integer const&, CryptoPP::Integer const&) const
CryptoPP::P1363_MGF1<CryptoPP::SHA>::GenerateAndMask(unsigned char*, unsigned int, unsigned char const*, unsigned int)
typeinfo name for Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState
typeinfo for Grid::CCacheFileFixedChecksum
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>::ExecuteNowIfNotDismissed() const
Grid::CCachePreLoader::CCachePreLoader(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, unsigned int)
Grid::CUnknownInternalException::~CUnknownInternalException()
common::CFileUtil::IFindFile::~IFindFile()
CBlockingUDPSocket::CBlockingUDPSocket()
Grid::CClientConnection::HandleRequestForgottenPasswordEmail()
sigslot::_signal_base2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::slot_disconnect(sigslot::has_slots<sigslot::multi_threaded_local>*)
typeinfo for CryptoPP::BERDecodeErr
Grid::CSClient::ICompletionHandler::~ICompletionHandler()
vtable for Grid::ICache::CMultipleCacheInstanceException
typeinfo for CryptoPP::SHA
typeinfo for Grid::CAppSubscriptionIdsRecord::CValidateFieldsException
vtable for CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>
vtable for ScopeGuardImpl1<void (*)(common::CThreadSafeCountedPtr<common::CFastThreadMutex> const&), common::CThreadSafeCountedPtr<common::CFastThreadMutex>>
Grid::InternalSteamGetTotalUpdateStats(unsigned int, TSteamUpdateStats*, TSteamError*)
typeinfo for CryptoPP::PK_FixedLengthCryptoSystem
typeinfo for common::CThreadLocalPtr<Grid::IEngineConnection>
Grid::CMustBeOnlineException::Clone() const
Grid::CAccountPrepurchaseReceiptRecord::CValidateFieldsException::Clone() const
vtable for Grid::CAppVersionInfoRecord::CValidateFieldsException
Grid::ICommandState::StartRefreshAccountInfo(common::CThreadSafeCountedPtr<Grid::CAccount> const&, bool, bool)
_Unwind_GetGR
std::vector<Grid::TRequestInfo_t, std::allocator<Grid::TRequestInfo_t>>::reserve(unsigned int)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::TSubscriptionInfo>, std::_Select1st<std::pair<unsigned int const, Grid::TSubscriptionInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::TSubscriptionInfo>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, Grid::TSubscriptionInfo>>*)
CryptoPP::BlockTransformation::~BlockTransformation()
_tr_tally
Grid::CClientConnection::HandleWaitForAppReadyToLaunch()
inflate_blocks
virtual thunk to CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::~DigestVerifierTemplate()
Grid::CClientContentTicket::GetClientContentIPAddrPort()
Grid::CEngineLoopbackConnection::StopLoadingCache(unsigned int, TSteamError*)
Grid::CCommandThreadPool::CommandThreadFunc(common::CThread*)
typeinfo name for common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException
vtable for Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState
Grid::CCacheBatBlock::CCacheBatBlock(unsigned int)
common::CNetworkException::~CNetworkException()
sigslot::_connection2<Grid::CAccount::CImpl, std::string const&, unsigned int, sigslot::multi_threaded_local>::getdest() const
Grid::CManifestIterator::~CManifestIterator()
common::CConfigDatabase::Get(std::string const&, bool*)
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, Grid::TCacheDescriptor>>, std::pair<std::string const, Grid::TCacheDescriptor> const&)
CryptoPP::ModularArithmetic::Square(CryptoPP::Integer const&) const
Grid::CSClient::IBlockingCompletionHandler::~IBlockingCompletionHandler()
typeinfo for Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException
Grid::CBadCallHandleException::~CBadCallHandleException()
__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string>>>::operator*() const
typeinfo for CAppSystem
typeinfo for ScopeGuardImpl0<void (*)()>
typeinfo name for CryptoPP::BlockTransformation
common::CThreadSafeCountedPtr<common::IFunctor>::dispose()
Grid::ICommandState::StartGetAppUpdateStats(common::CThreadSafeCountedPtr<Grid::CAccount> const&, unsigned int, ESteamAppUpdateStatsQueryType, TSteamUpdateStats*)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::~_Rb_tree()
Grid::CFs::RepairOrDecryptCaches(std::string const&, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>> const&, bool, common::CCommandStatusControl*)
typeinfo name for common::CObjFunctor<Grid::CSClient::CConnection>
Grid::CSClient::CService::CreateSession(std::string const&, unsigned int, unsigned int, unsigned int, unsigned int*, std::string*, common::CCommandStatusControl*, unsigned int)
Grid::IEngineConnection::NewLoopbackConnection(std::string const&, std::string const&, std::string const&)
Grid::CSClient::CInvalidSessionHandleException::~CInvalidSessionHandleException()
typeinfo for common::CMultiFieldBlob
vtable for Grid::CCacheFileFixedChecksum
sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>::duplicate(sigslot::has_slots<sigslot::multi_threaded_local>*)
Grid::CClientRegistry::CreateAppsListKeyName(std::string const&)
GetEnvironmentStrings()
CryptoPP::BufferedTransformation::SetAutoSignalPropagation(int)
typeinfo name for Grid::CClientManager::CImpl
common::IRegistry::~IRegistry()
typeinfo for ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>
common::CCommandStatusControl::~CCommandStatusControl()
Grid::CCacheBatBlock::GetBlkInfo(unsigned int, unsigned int, unsigned int, unsigned int*)
__gnu_cxx::new_allocator<unsigned long>::deallocate(unsigned long*, unsigned int)
typeinfo name for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
vtable for Grid::CUserAppAccessRightsRecord
vtable for Grid::CSClient::CReadFileChecksumTableFSM
Grid::CEngineLoopbackConnection::FindNext64(unsigned int, TSteamElemInfo64*, TSteamError*)
Grid::CFs::IsCacheFilePresent(unsigned int)
Grid::CAppLaunchOptionsRecord::~CAppLaunchOptionsRecord()
Grid::CEngineConnection::CEngineConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*)
Grid::CAccount::EnumerateAppLaunchOption(unsigned int, unsigned int, TSteamAppLaunchOption*)
Grid::CCacheBatBlock::~CCacheBatBlock()
Grid::CAccount::GetCurrentEmailAddress()
typeinfo name for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<char [256]>*>
Steam_RunCallbacks
Grid::CFs::CBadArgException::CBadArgException(common::CErrorCodeException::ESpecificType)
Grid::CSClient::CancelPendingCalls(unsigned int)
Grid::CAllAppsEncryptedPrivateKeysRecord::ValidateFields(std::ostream*, unsigned int)
CryptoPP::IsPrime(CryptoPP::Integer const&)
common::ObjFunctorImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>::~ObjFunctorImpl0()
typeinfo name for Grid::CSClient::CReadFileFSM::CRecvInitialReplyState
typeinfo name for common::CUsedAuthenticatorTimestampsCache::CException
Grid::IServerAddressCache::~IServerAddressCache()
Grid::CResourceListNodes::GetNextResource(Grid::CCacheGroupIterator&, std::string&, unsigned long long*, unsigned long long*, Grid::ContentPriority::ERequestLevel*)
Grid::CCSERServerAddressCache::Instance()
Grid::CBufferTable::Write(unsigned int, unsigned int, unsigned char const*)
common::CIPAddrPort::CIPAddrPort(std::string const&, unsigned int, unsigned short)
construction vtable for CryptoPP::DigestVerifier-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
void std::_Destroy<unsigned long*>(unsigned long*, unsigned long*)
Grid::CCacheBatBlock::NoBoundsCheckSet(unsigned int, unsigned int)
Grid::CSClient::CReadManifestFSM::CReadManifestFSM(Grid::CSClient::CSession&, common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
typeinfo name for Grid::CFs::CException
Grid::CAppIconsRecord::CValidateFieldsException::ThrowSelf() const
Grid::CFsCacheGroup::HandleCacheDismount(unsigned int)
CryptoPP::MDC<CryptoPP::SHA>::ProcessBlock(unsigned char const*, unsigned char*) const
Grid::CAccountPendingException::~CAccountPendingException()
Grid::CLauncher::CImpl::CImpl(ISteam2Bridge*, Grid::CAccount*, Grid::CAppRecord&, unsigned int, std::string const&, std::string const&, common::CCommandStatusControl&)
std::vector<common::CWSABUFWrapper::TWSABUFInfo, std::allocator<common::CWSABUFWrapper::TWSABUFInfo>>::_M_fill_insert(__gnu_cxx::__normal_iterator<common::CWSABUFWrapper::TWSABUFInfo*, std::vector<common::CWSABUFWrapper::TWSABUFInfo, std::allocator<common::CWSABUFWrapper::TWSABUFInfo>>>, unsigned int, common::CWSABUFWrapper::TWSABUFInfo const&)
Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState::HandleCompletedSend(Grid::CSClient::IProtocolFSM&) const
Grid::CCacheFileFixedChecksum::CException::Clone() const
Grid::CCacheGroup::CCacheGroup(std::vector<Grid::CCacheGroup::TCacheGroupEntry, std::allocator<Grid::CCacheGroup::TCacheGroupEntry>> const&, std::string const&)
typeinfo for ScopeGuardImpl2<void (*)(bool&, char const*), RefHolder<bool>, char const*>
Grid::CCacheNone::~CCacheNone()
CloseSemaphore(void*)
typeinfo for sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
common::CThreadSafeCountedPtr<common::IRegistry>::~CThreadSafeCountedPtr()
Grid::ICommandState::~ICommandState()
common::ObjFunctorImpl0<Grid::CClientAgentThread, void (Grid::CClientAgentThread::*)()>::~ObjFunctorImpl0()
Grid::CClientAuthenticationTicket::CValidateFieldsException::ThrowSelf() const
common::CThreadSafeCountedPtr<Grid::ICache>::dispose()
typeinfo for Grid::CMustBeOnlineException
vtable for common::CMultiFieldBlob::CPreprocessingFailedException
Grid::CClientAuthenticationTicket::~CClientAuthenticationTicket()
vtable for common::ISubKeyIteratorImpl
Grid::InternalSteamGetEncryptedUserIDTicket(unsigned int, void const*, unsigned int, void*, unsigned int, unsigned int*, TSteamError*)
typeinfo for Grid::ICache::CResourceIsNotFile
vtable for Grid::CSClient::CReadFileFSM::CSendRequestState
Grid::CFs::FindNext(unsigned int, unsigned int, TSteamElemInfo64*)
Grid::CEngineLoopbackConnection::GetNumAccountsWithEmailAddress(char const*, unsigned int*, TSteamError*)
typeinfo name for Grid::CIndexAppIdToSubscriptionIdsRecord::CValidateFieldsException
Grid::CCacheGroup::TCacheGroupEntry::~TCacheGroupEntry()
Grid::InternalSteamFindFirst64(unsigned int, char const*, ESteamFindFilter, TSteamElemInfo64*, TSteamError*)
Grid::CAllAppsEncryptedPrivateKeysRecord::CValidateFieldsException::Clone() const
zcfree
vtable for Grid::CFsCacheGroup
Grid::CLockedCDDBCache::s_pCDDB
virtual thunk to CryptoPP::PK_FixedLengthCryptoSystem::MaxPlainTextLength(unsigned int) const
VTT for CryptoPP::AES_PHM_Encryption
common::CThreadSafeCountedPtr<common::CConfigTree>::~CThreadSafeCountedPtr()
vtable for Grid::CSClient::CManifestFingerprintMistatchOnReconnectException
CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::CascadeScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
CryptoPP::ByteQueue::IsEmpty() const
CryptoPP::AlmostInverse(unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
typeinfo name for ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>
BSL::CCumulativeDays::~CCumulativeDays()
ObjScopeGuardImpl0<common::CThread::CImpl, void (common::CThread::CImpl::*)()>::~ObjScopeGuardImpl0()
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>> const&)
std::vector<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*>>::~vector()
vtable for ObjScopeGuardImpl0<common::CFastThreadMutex, void (common::CFastThreadMutex::*)()>
MoveFile(char const*, char const*)
Grid::CFsTable::CImpl::InvalidateUser(std::string const&, unsigned int)
Grid::CClientBinaryManifestRecord::~CClientBinaryManifestRecord()
Grid::CClientConnection::HandleGetAppStats()
common::CBlobValueIterator::~CBlobValueIterator()
__wrap_unlink
common::CThread::CImpl::ThreadProc(void*)
CryptoPP::BERGeneralDecoder::BERGeneralDecoder(CryptoPP::BufferedTransformation&, unsigned char)
Grid::ICache::CCacheNeedsDecryptionException::~CCacheNeedsDecryptionException()
common::CValueDoesNotExistException::CValueDoesNotExistException(std::string const&, std::string const&)
vtable for Grid::CUnknownInternalException
typeinfo for common::FunctorImplBase
typeinfo name for Grid::CSClient::CReadFileChecksumTableFSM::CSendRequestState
common::CFileUtil::FixSlashes(std::string const&, std::string&)
typeinfo for CryptoPP::ArrayXorSink
Grid::ICache::CWriteException::Clone() const
common::CMultiFieldBlob::CMultiFieldBlob(std::vector<common::CMultiFieldBlob::TFieldDescriptor, std::allocator<common::CMultiFieldBlob::TFieldDescriptor>> const&, unsigned int, unsigned int)
Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
common::s_cszUnknownAssertName
vtable for Grid::CCacheOneFileFixedBlock::CImpl::CCacheCompletionHandler
Grid::CCommandThreadPool::QueueCommand(Grid::ICommandState*)
std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&)
CCallbackMgr::DispatchCallbackTryCatch(CallbackMsg_t&, bool)
DW.ref._ZTIN4Grid3CFs20CMountInUseExceptionE
ObjScopeGuardImpl0<common::CThreadSafeCounter, void (common::CThreadSafeCounter::*)()>::~ObjScopeGuardImpl0()
vtable for CryptoPP::Source
Grid::CContentDescriptionDBCache::~CContentDescriptionDBCache()
CryptoPP::MD5::Transform(unsigned long*, unsigned long const*)
std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int>>::~set()
typeinfo for ScopeGuardImpl1<bool (*)(std::string const&), char const*>
Grid::CTicketCache::CImpl::s_sPassphraseValueName
CreateNamedPipe(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, void*)
ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>::ExecuteNowIfNotDismissed() const
common::CBlobKey::SetValue(std::string const&, unsigned int)
std::string BSL::I2ES<BSL::ETimePrecision>(BSL::ETimePrecision, int, int)
common::CObjFunctor<Grid::CSClient::CService>::~CObjFunctor()
std::vector<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*>>::_M_fill_insert(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>*>>>, unsigned int, __gnu_cxx::_Hashtable_node<std::pair<common::CUsedAuthenticatorTimestampsCache::TClientUsageInfoKey const, common::CUsedAuthenticatorTimestampsCache::TClientUsageInfo>>* const&)
Grid::CAppRegionRecord::ValidateFields(std::ostream*, unsigned int)
typeinfo name for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
typeinfo name for Grid::CAccountSubscriptionsRecord
std::_Deque_base<unsigned long, std::allocator<unsigned long>>::_M_initialize_map(unsigned int)
Grid::CPipeComm::CPipeComm(char const*, unsigned int, unsigned int, unsigned int, bool)
Grid::CSClient::CLoginFSM::CRecvSessionLoginReplyArgsState::~CRecvSessionLoginReplyArgsState()
Grid::CSClient::IProtocolFSM::~IProtocolFSM()
std::vector<Grid::TPreloaderCacheInfo, std::allocator<Grid::TPreloaderCacheInfo>>::~vector()
Grid::CManifestBin::CManifestBin(_IO_FILE*, long)
CryptoPP::ByteQueue::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
common::CThreadSafeCountedPtr<Grid::CContentDescriptionRecord>::~CThreadSafeCountedPtr()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>, std::_Select1st<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>>::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CSubscriptionRecord>>>*)
common::CBadAlloc::ThrowSelf() const
Grid::CAccountExternalBillingInfoRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for Grid::CVTSIPAddressCache
CryptoPP::BERGeneralDecoder::BERGeneralDecoder(CryptoPP::BERGeneralDecoder&, unsigned char)
typeinfo for Grid::CSubscriberAccountRecord::CValidateFieldsException
std::_Rb_tree<unsigned int, std::pair<unsigned int const, bool>, std::_Select1st<std::pair<unsigned int const, bool>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, bool>>>::~_Rb_tree()
common::CBlobRegistry::GetValue(std::string const&, std::string const&, unsigned int*)
Grid::ICache::CCacheNeedsDecryptionException::CCacheNeedsDecryptionException()
typeinfo for Grid::CAccountPrepurchaseInfoRecord::CValidateFieldsException
Grid::CSClient::IBlockingCompletionHandler::Complete(common::ICloneableException const*, unsigned int)
Grid::CSClient::CException::~CException()
vtable for Grid::CManifestIterator
typeinfo for CryptoPP::ModularArithmetic
Grid::CSClient::CConnection::DownloadRateBlockTransferComplete(unsigned int, unsigned int)
common::CBlobKey::CPublicKey::DeleteSubKeyNoThrow(std::string const&)
Grid::CFs::CSeekException::ThrowSelf() const
typeinfo name for Grid::CAppLaunchOptionRecord::CValidateFieldsException
Grid::CClientManager::CImpl::CImpl()
ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>::~ObjScopeGuardImpl0()
Grid::CStalledCallException::ThrowSelf() const
vtable for Grid::CAccountUserPasswordsRecord
construction vtable for CryptoPP::BERGeneralDecoder-in-CryptoPP::BERSequenceDecoder
typeinfo for ObjScopeGuardImpl0<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)()>
common::FunctorImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::~FunctorImpl2()
std::basic_string<char, std::char_traits<char>, std::allocator<char>> std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)
Grid::CSClient::CReadPurgeListFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
Grid::InternalSteamTellFile(unsigned int, unsigned int, TSteamError*)
Grid::CAppSubscriptionIdsRecord::CValidateFieldsException::ThrowSelf() const
Grid::ICache::COpenException::ThrowSelf() const
common::CLogFile::~CLogFile()
Grid::CEngineConnection::RepairOrDecryptCaches(unsigned int, int, TSteamError*)
CryptoPP::Integer::Power2(unsigned int)
Grid::CAccount::CImpl::IsSubscriptionPending(unsigned int, bool)
DW.ref._ZTIN4Grid3CFs18CNotFoundExceptionE
common::ObjFunctorImpl0<Grid::CEngineConnection, void (Grid::CEngineConnection::*)()>::~ObjFunctorImpl0()
CryptoPP::AbstractEuclideanDomain<CryptoPP::Integer>::~AbstractEuclideanDomain()
typeinfo name for ObjScopeGuardImpl1<Grid::CBufferTable, void (Grid::CBufferTable::*)(unsigned int), unsigned int>
Grid::CManifestReadException::~CManifestReadException()
Grid::CReturnBufferItem<int>::Receive(Grid::CPipeComm*)
common::CPeerGracefullyClosedConnectionCommException::~CPeerGracefullyClosedConnectionCommException()
Grid::CSubscriptionRecord::~CSubscriptionRecord()
typeinfo name for Grid::CSClient::COperationCancelledException
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::BERSequenceDecoder
common::CConnResetException::~CConnResetException()
typeinfo name for Grid::CLibraryNotInitializedException
common::EncryptWithMachineDependentPassphrase(unsigned char const*, unsigned int, std::string*)
Grid::CAppUserDefinedRecord::ValidateFields(std::ostream*, unsigned int)
common::CMultiFieldBlob::CBlobException::~CBlobException()
typeinfo name for Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState
Grid::CAppVersionInfoRecord::~CAppVersionInfoRecord()
Grid::CAccountIsDisabledException::~CAccountIsDisabledException()
Grid::CCacheOneFileFixedBlock::DefragCache(common::CCommandStatusControl*)
Grid::CEngineLoopbackConnection::OpenFile2(char const*, char const*, int, unsigned int*, bool*, bool*, TSteamError*)
Grid::CMultipleCacheLock::~CMultipleCacheLock()
typeinfo name for Grid::ICache
construction vtable for CryptoPP::PK_FixedLengthCryptoSystem-in-CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
ObjScopeGuardImpl0<Grid::CCSERServerAddressCache, void (Grid::IServerAddressCache::*)()>::ExecuteNowIfNotDismissed() const
Grid::CRateLimitRecord::~CRateLimitRecord()
Grid::CContentDescriptionRecord::GetSerializedVersion(unsigned int*) const
Grid::CEngineLoopbackConnection::UnmountFilesystem(unsigned int, TSteamError*)
Grid::IManifestIteratorImpl::InvalidateIterator()
CryptoPP::BufferedTransformation::ChannelMessageEnd(std::string const&, int)
typeinfo for CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
construction vtable for CryptoPP::PK_Encryptor-in-CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>
Grid::CNotLoggedInException::ThrowSelf() const
Grid::CAllAppsPublicKeysRecord::CValidateFieldsException::ThrowSelf() const
std::vector<TSteamAppDependencyInfo, std::allocator<TSteamAppDependencyInfo>>::~vector()
void std::_Destroy_aux<false>::__destroy<common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*>(common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*, common::CThreadSafeCountedPtr<Grid::CClientContentTicket>*)
CryptoPP::CipherMode::~CipherMode()
Grid::CEngineConnection::RequestAccountsByCdKeyEmail(char const*, TSteamError*)
CryptoPP::AbstractRing<CryptoPP::Integer>::Square(CryptoPP::Integer const&) const
typeinfo for ScopeGuardImpl1<int (*)(int), long>
typeinfo name for ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
Grid::CNotLoggedInException::~CNotLoggedInException()
Grid::CSClient::CBlockingLoginCompletionHandler::~CBlockingLoginCompletionHandler()
Grid::CResourceListFile::~CResourceListFile()
vtable for Grid::CCacheFileFixedFsTree
Grid::CTicketCache::CImpl::~CImpl()
typeinfo name for common::ISubKeyIteratorImpl
Grid::CSClient::CManifestFingerprintMistatchOnReconnectException::ThrowSelf() const
vtable for Grid::CLibraryAlreadyInitializedException
std::auto_ptr<Grid::CCacheFileFixedFsTree>::reset(Grid::CCacheFileFixedFsTree*)
CryptoPP::FileSink::Flush(bool, int)
CryptoPP::FeedBackMode::DoFeedBack()
Grid::CAccountOrUserDoesNotExistException::ThrowSelf() const
Grid::CReturnBufferAggregate::CReturnBufferAggregate()
Grid::ConnectToMasterAuthenticationServerAndVerifyProtocol(unsigned int, common::CCommandStatusControl*, unsigned int*, unsigned int*)
CryptoPP::BuildPrimeTable()
std::vector<Grid::CCacheReplacementLru::TLru16, std::allocator<Grid::CCacheReplacementLru::TLru16>>::~vector()
Grid::CAccountUsersRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CSClient::CDownloadRateEstimator::ReportStatistics()
ObjScopeGuardImpl1<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>, void (std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>::*)(std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>&), RefHolder<std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>>::~ObjScopeGuardImpl1()
Grid::CReturnBufferAggregate::~CReturnBufferAggregate()
typeinfo name for CryptoPP::RijndaelEncryption
unsigned long* std::__copy<true, std::random_access_iterator_tag>::copy<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
common::CLog::DisableElapsedTime()
pathmatch(char const*, char**, bool, char*, unsigned int)
inflate_blocks_new
construction vtable for CryptoPP::BufferedTransformationWithAutoSignal-in-CryptoPP::StringStore
_GLOBAL_OFFSET_TABLE_
Grid::CAppStatus::FindAppStatusInfo(unsigned int)
Grid::CFs::CAppHasNoCacheFileException::~CAppHasNoCacheFileException()
Grid::InternalSteamEnumerateApp(unsigned int, unsigned int, TSteamApp*, TSteamError*)
typeinfo for Grid::CSubscriberAccountRecord
CryptoPP::ModularArithmetic::Double(CryptoPP::Integer const&) const
CryptoPP::FilterWithBufferedInput::BlockQueue::GetAll(unsigned char*)
Grid::CEngineLoopbackConnection::IsFileNeededByCache(unsigned int, char const*, unsigned int, TSteamError*)
Grid::CSClient::CLoginFSM::s_SendSessionLoginRequestState
vtable for CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>
vtable for CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
vtable for common::CNamedArgsInsertException
Grid::CTicketCache::SetUser2(std::string const&, common::CThreadSafeCountedPtr<Grid::CClientAuthenticationTicket>&)
Grid::CClientConnection::HandleStopLoadingCache()
common::CUsedAuthenticatorTimestampsCache::CReusedAuthenticatorException::~CReusedAuthenticatorException()
typeinfo name for Grid::ICache::CCorruptionException
typeinfo name for Grid::CUnknownInternalException
_open
common::CMultiFieldBlob::CStringFieldNotTerminatedException::~CStringFieldNotTerminatedException()
common::CFindFile::GetCurrent()
vtable for Grid::CClientBinaryManifestRecord
common::CInUseException::~CInUseException()
typeinfo name for CryptoPP::PK_CryptoSystem
typeinfo name for Grid::CAccountPrepurchaseReceiptRecord
common::CValue::GetBinary(unsigned int*) const
typeinfo for Grid::ICommandState
virtual thunk to CryptoPP::MessageQueue::TotalBytesRetrievable() const
Grid::CFs::LoadCacheFromDir(std::string const&, unsigned int, unsigned int, std::string const&, common::CCommandStatusControl*)
Grid::CSClient::CReadPurgeListFSM::DoAbort(common::ICloneableException const&)
typeinfo name for Grid::CSClient::CInvalidSessionHandleException
ObjScopeGuardImpl1<Grid::CFsTable, void (Grid::CFsTable::*)(bool), bool>::ExecuteNowIfNotDismissed() const
typeinfo name for BSL::CUnpackedTime::CFromStringInvalidCharacter
CryptoPP::Integer::operator++()
vtable for sigslot::_signal_base1<unsigned int, sigslot::multi_threaded_local>
vtable for Grid::CResourceListFile
common::CFindFile::CurrentIsDir()
ObjScopeGuardImpl1<Grid::CSClient::CSession, void (Grid::CSClient::CSession::*)(unsigned int), unsigned int>::ExecuteNowIfNotDismissed() const
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>, std::_Select1st<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>>::erase(std::_Rb_tree_iterator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>, std::_Rb_tree_iterator<std::pair<unsigned int const, std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>>>)
common::CMultiFieldBlob::CBlobException::ThrowSelf() const
CryptoPP::RandomPool::Stir()
common::CThreadLocalRegistrar::~CThreadLocalRegistrar()
common::CThreadLocalBase::CThreadLocalBase()
CryptoPP::RecursiveSquare(unsigned long*, unsigned long*, unsigned long const*, unsigned int)
Grid::TAppFilesystemInfo* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Grid::TAppFilesystemInfo const*, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>>, Grid::TAppFilesystemInfo*>(__gnu_cxx::__normal_iterator<Grid::TAppFilesystemInfo const*, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>>, __gnu_cxx::__normal_iterator<Grid::TAppFilesystemInfo const*, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>>, Grid::TAppFilesystemInfo*)
common::CFileUtil::GetFileCreationTime(std::string const&)
Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState::~CSendSessionLoginRequestState()
typeinfo name for Grid::CFs::CCacheFileMissingException
Grid::CSClient::CSession::RemoveCompletedFSM(unsigned int)
BSL::CTime::CPackingException::CPackingException(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>>)
arg::grin_ptr<common::CLog::TLogImpl>::my_delete_ftn(common::CLog::TLogImpl*)
Grid::ICommandState::StartSetUser(common::CThreadSafeCountedPtr<Grid::CAccount> const&, std::string const&, int*)
CryptoPP::EuclideanDomainOf<CryptoPP::Integer>::One() const
CryptoPP::HexDecoder::MessageEnd(int)
__wrap_fopen64
ScopeGuardImpl1<void (*)(unsigned int), unsigned int>::~ScopeGuardImpl1()
Grid::CCommandThreadPool::StartThreadsIfNecessary()
typeinfo name for Grid::CSubscriptionRecord
common::CThreadSafeAutoSeededRandomPoolSingleton::GenerateBit()
Grid::CManifestBin::IsLongRoll() const
Grid::CCacheExceptionTranslator::~CCacheExceptionTranslator()
common::ObjFunctorImpl8<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int), std::string, EGameState, unsigned int, std::vector<Grid::TAppFilesystemInfo, std::allocator<Grid::TAppFilesystemInfo>>, bool, bool, unsigned int, unsigned int>::~ObjFunctorImpl8()
Grid::CSubscriberAccountRecord::~CSubscriberAccountRecord()
Grid::InternalSteamOpenFile(unsigned int, char const*, char const*, unsigned int*, bool*, bool*, char const**, TSteamError*)
common::CThreadSafeCountedPtr<common::IFunctor> common::MakeObjFunctor<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>(Grid::CAccount::CImpl&, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int)
Grid::CCacheGroup::GetFiles(Grid::CNodeGroup*, Grid::CCacheGroupIterator)
void std::__push_heap<__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int, TPreloaderInfo>(__gnu_cxx::__normal_iterator<TPreloaderInfo*, std::vector<TPreloaderInfo, std::allocator<TPreloaderInfo>>>, int, int, TPreloaderInfo)
common::CGetTokensException::~CGetTokensException()
common::CCommandStatusControl::~CCommandStatusControl()
ObjScopeGuardImpl0<Grid::CFsTable, void (Grid::CFsTable::*)()>::ExecuteNowIfNotDismissed() const
BSL::CTime::Minute()
Grid::CSubExtendedInfoRecord::~CSubExtendedInfoRecord()
std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>::~vector()
CryptoPP::HashFilter::MessageEnd(int)
CryptoPP::NonblockingRng::GenerateByte()
Grid::CTicketCache::CImpl::CImpl()
CryptoPP::BytePrecision(unsigned long)
Grid::CSClient::CDownloadRateEstimator::sm_StaticMutex
Grid::CCacheQueueEntry::CCacheQueueEntry()
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::PaddedBlockBitLength() const
typeinfo name for common::CUsedAuthenticatorTimestampsCache::CLoginRateTooHighException
CryptoPP::HashModule::Verify(unsigned char const*)
Grid::CSClient::CConnectionPool::Disconnect(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&)
CryptoPP::IteratedHashBase<unsigned long>::~IteratedHashBase()
std::_List_base<common::CThreadSafeCountedPtr<Grid::CClientAgentThread>, std::allocator<common::CThreadSafeCountedPtr<Grid::CClientAgentThread>>>::_M_clear()
Grid::CAccountUserRecord::~CAccountUserRecord()
std::_Rb_tree<std::string, std::pair<std::string const, common::CBlobKey*>, std::_Select1st<std::pair<std::string const, common::CBlobKey*>>, std::less<std::string>, std::allocator<std::pair<std::string const, common::CBlobKey*>>>::~_Rb_tree()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::string>, std::_Select1st<std::pair<unsigned int const, std::string>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::string>>>::_M_insert_unique(std::pair<unsigned int const, std::string> const&)
adler32
CryptoPP::InvertibleRSAFunction::InvertibleRSAFunction(CryptoPP::BufferedTransformation&)
std::map<unsigned int, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::map<unsigned int, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CTicketCache::CImpl::TTGSQueryRateLimitInfo>>>>>>::operator[](unsigned int const&)
common::CThread::Start(common::CThreadSafeCountedPtr<common::IFunctor> const&, common::CThreadSafeCountedPtr<common::ExceptionCatcherBase> const&)
typeinfo for Grid::CLibraryNotInitializedException
typeinfo name for CryptoPP::RandomNumberGenerator
typeinfo for BSL::CTime::CTimeToPackNegative
CryptoPP::PK_FixedLengthDecryptor::Decrypt(unsigned char const*, unsigned int, unsigned char*)
common::CObjFunctor<Grid::CSClient::CConnection>::~CObjFunctor()
Grid::CStalledCallException::CStalledCallException()
Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException::Clone() const
Grid::CEngineNotRunningException::~CEngineNotRunningException()
typeinfo name for Grid::CAppRegionRecord
CryptoPP::MessageQueue::MessageQueue(unsigned int)
vtable for Grid::CClientContentTicket
Grid::CAppStatus::TAppStatusInfo::~TAppStatusInfo()
common::CMultiFieldBlob::RecursivelyCheckAllChildrenAreCollapsed()
Grid::CAppFilesystemRecord::CValidateFieldsException::~CValidateFieldsException()
vtable for common::IEventLoopFunctor
typeinfo name for Grid::ICacheGroupIteratorImpl
common::CMultiFieldBlob::UpdateField(unsigned short, unsigned char const*, unsigned int, unsigned char const*)
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<int>*>::~ScopeGuardImpl1()
Grid::CAccountSubscriptionsBillingInfoRecord::~CAccountSubscriptionsBillingInfoRecord()
common::CEventLoopThread::SaveCaughtException(common::ICloneableException const&)
void std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::COrderTFieldHeaderOffsetsByFieldName)
CryptoPP::Integer::SetBit(unsigned int, bool)
common::ConvertStringToUnsignedInt32(char const*)
Grid::CSClient::CReadFileFSM::CRecvInitialReplyState::~CRecvInitialReplyState()
CryptoPP::BufferedTransformationWithAutoSignal::~BufferedTransformationWithAutoSignal()
CryptoPP::ByteQueue::Get(unsigned char*, unsigned int)
Grid::CCacheServerSessionMgr::~CCacheServerSessionMgr()
Grid::CFsTable::Cleanup()
VTT for CryptoPP::Filter
common::CSimpleBitString::iterator::GetNextBits(unsigned int)
common::CUsedAuthenticatorTimestampsCache::CUsedAuthenticatorTimestampsCache(BSL::CTime const&, unsigned int)
typeinfo for Grid::CSClient::CReadManifestFSM::CRecvInitialReplyState
typeinfo for Grid::CSClient::CInvalidSessionHandleException
std::vector<Grid::CCacheReplacementLru::TLru32, std::allocator<Grid::CCacheReplacementLru::TLru32>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheReplacementLru::TLru32*, std::vector<Grid::CCacheReplacementLru::TLru32, std::allocator<Grid::CCacheReplacementLru::TLru32>>>, Grid::CCacheReplacementLru::TLru32 const&)
Grid::CBufferTable::LockBuffer(unsigned int)
ObjScopeGuardImpl0<common::CEventLoopThread, void (common::CEventLoopThread::*)()>::~ObjScopeGuardImpl0()
Grid::CCacheQueueManager::~CCacheQueueManager()
typeinfo name for CryptoPP::RSAPrivateKeyTemplate<CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>>
Grid::CSClient::CReadFileFSM::CSendRequestState::~CSendRequestState()
CryptoPP::BERDecodeErr::~BERDecodeErr()
vtable for Grid::CClientToASProtocolOutOfDateException
std::map<unsigned long, unsigned short, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned short>>>::~map()
common::CThreadSafeCountedPtr<Grid::CValidationLogger>::~CThreadSafeCountedPtr()
Grid::CEngineConnection::GetFlags(char const*, unsigned int*, TSteamError*)
CryptoPP::RandomPool::GenerateBlock(unsigned char*, unsigned int)
Grid::CClientConnection::HandleChangeAccountName()
CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::VerifyDigest(unsigned char const*, unsigned int, unsigned char const*) const
Grid::CSClient::CSession::DownloadRateBlockTransferStarted()
Grid::IReturnBuffer::~IReturnBuffer()
Grid::CCacheQueueManager::ResubmitItemsFromSession(unsigned int)
typeinfo name for Grid::CSubExtendedInfoRecord
operator delete(void*, void*)
Grid::CClientConnection::CClientConnection(Grid::CPipeComm*, Grid::CPipeComm*, void*, void*, unsigned int, std::string const&, std::string const&, std::string const&, sigslot::signal2<ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>&)
CryptoPP::PK_FixedLengthDecryptor::~PK_FixedLengthDecryptor()
CAsyncIOManager::CAsyncIOManager()
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~CryptoSystemBaseTemplate()
vtable for Grid::CSubscriptionRecord::CValidateFieldsException
Grid::CManifestFormatException::ThrowSelf() const
common::CStringTable::~CStringTable()
vtable for CryptoPP::AES_PHM_Encryption
Grid::CFs::CConfigException::~CConfigException()
Grid::CCacheManifestOnly::CImpl::CCacheCompletionHandler::~CCacheCompletionHandler()
virtual thunk to CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::MaxPlainTextLength() const
std::vector<Grid::CAuthenticatorPayloadChunk, std::allocator<Grid::CAuthenticatorPayloadChunk>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CAuthenticatorPayloadChunk*, std::vector<Grid::CAuthenticatorPayloadChunk, std::allocator<Grid::CAuthenticatorPayloadChunk>>>, Grid::CAuthenticatorPayloadChunk const&)
CEnvironmentTweaker::~CEnvironmentTweaker()
vtable for Grid::CCacheFileFixedDirectory
ScopeGuardImpl3<void (*)(std::string const&, unsigned int, common::CIPAddrPort const&), std::string, unsigned int, common::CIPAddrPort>::~ScopeGuardImpl3()
Grid::CCachePreLoader::CImpl::CPreloaderReadHandlerFunctor<Grid::CCachePreLoader::CImpl>::CPreloaderReadHandlerFunctor(Grid::CCachePreLoader::CImpl*, void (Grid::CCachePreLoader::CImpl::*)(common::ICloneableException const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
typeinfo name for Grid::CAllDiscountQualifiersRecord
Grid::CTicketCache::CImpl::ClearContentTickets(unsigned int)
common::CValueDoesNotExistException::~CValueDoesNotExistException()
vtable for common::CMultiFieldBlob::CFieldDoesNotExistException
typeinfo name for common::CObjFunctor<Grid::CSClient::CService>
typeinfo name for Grid::CCacheManifestOnly::CImpl::CCacheReadHandlerFunctor<Grid::CCacheManifestOnly::CImpl>
Grid::CBufferTable::InitElement(unsigned int, char const*, bool, bool, unsigned long long, char const*)
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_M_get_Tp_allocator() const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState::HandleCompletedRecv(Grid::CSClient::IProtocolFSM&) const
Grid::CActivityLog::Instance()
Grid::CEngineLoopbackConnection::GetAppUserDefinedRecord(unsigned int, common::CMallocedBlock&, TSteamError*)
CryptoPP::BufferedTransformation::Err::Err(CryptoPP::BufferedTransformation::ErrorType, std::string const&)
typeinfo name for CryptoPP::FileStore::Err
typeinfo for CryptoPP::PK_FixedLengthDecryptor
CryptoPP::BERGeneralDecoder::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
vtable for Grid::CBadCallHandleException
common::CBlobRegistry::SignalAndJoinDelayedCleanupThread(common::LockGuard<common::CFastThreadMutex>*, bool*)
std::_Vector_base<unsigned long, std::allocator<unsigned long>>::_M_allocate(unsigned int)
Grid::CFs::CCannotWriteNonUserConfigFile::CCannotWriteNonUserConfigFile(common::CErrorCodeException::ESpecificType)
common::CValue::GetUnsignedNumber() const
Grid::CReturnBufferAggregate::Send(Grid::CPipeComm*)
Grid::ICache::CCacheKeysNotAvailableException::~CCacheKeysNotAvailableException()
typeinfo name for sigslot::_connection2<Grid::CEngineLoopbackConnection, ESteamNotificationCallbackEvent, unsigned int, sigslot::multi_threaded_local>
common::CBlobValueIterator::GetFormattedValueString(std::string&)
CryptoPP::AbstractGroup<CryptoPP::Integer>::Reduce(CryptoPP::Integer&, CryptoPP::Integer const&) const
typeinfo name for CryptoPP::RijndaelDecryption
Grid::CFsTable::ResumePausedPreloaders()
Grid::CFsTable::CacheLock(std::string const&, unsigned int)
virtual thunk to CryptoPP::Store::~Store()
std::vector<CryptoPP::Integer, std::allocator<CryptoPP::Integer>>::~vector()
Grid::InternalSteamAckSubscriptionReceipt(unsigned int, unsigned int, TSteamError*)
VTT for CryptoPP::AES_PHM_Decryption
Grid::CResourceListStrings::CResourceListStrings(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::vector<std::string, std::allocator<std::string>>&, Grid::ContentPriority::ERequestLevel)
common::CObjFunctor<Grid::CSClient::CService>::operator()()
CryptoPP::PK_SignatureSystem::~PK_SignatureSystem()
Grid::CAllAppsPublicKeysRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CClientConnection::~CClientConnection()
Grid::s_VTSAddressCache
typeinfo for common::CGetTokensException
typeinfo name for Grid::CReadFileChecksumFailedException
CryptoPP::PK_FixedLengthEncryptor::~PK_FixedLengthEncryptor()
Grid::CClientConnection::HandleGetLocalFileCopy()
Grid::CReturnBufferItem<char [256]>::~CReturnBufferItem()
Grid::CSClient::IProtocolFSM::Restart()
common::CBlobException::Clone() const
vtable for ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
CryptoPP::RijndaelDecryption::~RijndaelDecryption()
common::CReadWriteThreadMutex::ReleaseReadLock()
std::vector<common::TBuf, std::allocator<common::TBuf>>::~vector()
Grid::CBufferTable::s_uBufSizeDefault
common::ICloneableException::ICloneableException(char const*, bool)
Grid::CEngineConnection::IsFileImmediatelyAvailable(char const*, TSteamError*)
Grid::CBufferTable::Tell(unsigned int)
Grid::CDiscountQualifierRecord::ValidateFields(std::ostream*, unsigned int)
CryptoPP::BufferedTransformation::Attach(CryptoPP::BufferedTransformation*)
common::CFileUtil::GetCurrentExeDirPath()
Grid::CFsCacheGroup::FindNext(unsigned int, TSteamElemInfo64*)
Grid::CAccount::VerifyPassword(std::string const&)
Grid::ICommandState::StartIsAccountNameInUse(std::string const&, int*)
CryptoPP::DigestSignatureSystemBaseTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>::PaddedBlockBitLength() const
std::hex(std::ios_base&)
typeinfo name for Grid::CCacheFileFixedFsTree
std::_Rb_tree<std::string, std::pair<std::string const, Grid::TCacheDescriptor>, std::_Select1st<std::pair<std::string const, Grid::TCacheDescriptor>>, std::less<std::string>, std::allocator<std::pair<std::string const, Grid::TCacheDescriptor>>>::_M_insert_unique(std::pair<std::string const, Grid::TCacheDescriptor> const&)
Grid::CEngineLoopbackConnection::GetAppPurchaseCountry(unsigned int, char*, unsigned int, int*, TSteamError*)
vtable for Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState
vtable for CryptoPP::FileSource
Grid::CPipeComm::CBrokenPipeException::Clone() const
typeinfo name for CryptoPP::OS_RNG_Err
Grid::CAccountSubscriptionBillingInfoRecord::ValidateFields(unsigned char const*, std::ostream*, unsigned int, bool)
Grid::ICache::CException::~CException()
CryptoPP::HashModule::~HashModule()
common::CMultiFieldBlob::UpdateField(unsigned short, unsigned char const*, common::CMultiFieldBlob*, bool)
common::CConfigTree::~CConfigTree()
typeinfo for Grid::CSClient::CReadFileFSM::CRecvNextCompressedBlockChunkState
Grid::IManifestIteratorImpl::AdvanceToChild()
common::LockGuard<common::CFastThreadMutex>::~LockGuard()
Grid::CAccountPaymentCardInfoRecord::CValidateFieldsException::ThrowSelf() const
Grid::CAppLaunchOptionRecord::CValidateFieldsException::~CValidateFieldsException()
Grid::CManifestFormatException::~CManifestFormatException()
typeinfo name for sigslot::_connection_base1<unsigned int, sigslot::multi_threaded_local>
__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int>>> std::__find<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int>>>, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int>>>, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int>>>, unsigned int const&, std::random_access_iterator_tag)
std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string>>, TCompareStrings, std::allocator<std::pair<std::string const, std::string>>>::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string>>, std::pair<std::string const, std::string> const&)
typeinfo name for Grid::CDiscountQualifierRecord::CValidateFieldsException
Grid::ICache::CResourceIsNotFile::Clone() const
Grid::CFs::CFileAccessRightsException::ThrowSelf() const
Grid::CAccount::CImpl::HandleCreatePreloaderFailure(unsigned int)
Grid::InternalSteamSetUser2(unsigned int, char const*, TSteamError*)
CryptoPP::ByteQueue::Walker::Get(unsigned char*, unsigned int)
Grid::CEngineConnection::MountAppFilesystem(unsigned int, unsigned int, TSteamError*)
Grid::CFsBuffer::GetDataMode()
ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>::ExecuteNowIfNotDismissed() const
Grid::CFileIdChecksumTable::CCorruptSerializedVersionException::~CCorruptSerializedVersionException()
Grid::CFsCacheGroup::Read(unsigned int, unsigned int, unsigned char*)
Grid::CClientConnection::s_ReturnBufferTable
typeinfo for Grid::CSClient::CSessionLoginFailedException
Grid::CSClient::CReadFileFSM::CSendRequestState::~CSendRequestState()
std::vector<common::CCountedPtr<CryptoPP::HMAC<CryptoPP::SHA>>, std::allocator<common::CCountedPtr<CryptoPP::HMAC<CryptoPP::SHA>>>>::~vector()
common::CMultiFieldBlob::CPreprocessingFailedException::~CPreprocessingFailedException()
std::vector<Grid::CCacheDataBlock::TFileInfo, std::allocator<Grid::CCacheDataBlock::TFileInfo>>::_M_insert_aux(__gnu_cxx::__normal_iterator<Grid::CCacheDataBlock::TFileInfo*, std::vector<Grid::CCacheDataBlock::TFileInfo, std::allocator<Grid::CCacheDataBlock::TFileInfo>>>, Grid::CCacheDataBlock::TFileInfo const&)
common::CMultiFieldBlob::CMultiFieldBlob(common::CMultiFieldBlob const&)
common::CLog::EnableAllLogging()
Grid::CNoContentServerAvailableException::CNoContentServerAvailableException(char const*)
Grid::IResourceList::~IResourceList()
common::CUsedAuthenticatorTimestampsCache::StoreAuthenticatorTimestampAndDetectReuse(unsigned int, unsigned int, BSL::CTime const&, BSL::CTime const&)
Grid::CCachePreLoader::CImpl::GetNextManifestItem(Grid::CCacheGroupIterator&)
Grid::CSClient::CReadManifestFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
Grid::CResourceFile::GetNextLine(char*, unsigned int)
typeinfo for common::CThreadLocalBase
typeinfo for Grid::CAccountPaymentCardReceiptRecord::CValidateFieldsException
typeinfo name for ScopeGuardImpl1<int (*)(void*), void*>
Grid::CFsTable::MountInUse(std::string const&) const
Grid::CEngineLoopbackConnection::ProcessCall(unsigned int, TSteamProgress*, TSteamError*)
Grid::InternalSteamFindFirst(unsigned int, char const*, ESteamFindFilter, TSteamElemInfo*, TSteamError*)
common::DoSelectedConnectionShutdown(int, common::CWSABUFWrapper&, common::CCommandStatusControl*)
Grid::CFileIdChecksumTable::~CFileIdChecksumTable()
Grid::IManifestIteratorImpl::IManifestIteratorImpl(Grid::CManifestBin::TDirNodeBin const*, char const*, unsigned int, long)
ObjScopeGuardImpl0<Grid::CSClient::IProtocolFSM, void (Grid::CSClient::IProtocolFSM::*)()>::ExecuteNowIfNotDismissed() const
Grid::CLocalClockSkewException::Clone() const
Grid::CCacheQueueManager::UpdateEntryReqList(unsigned int, std::vector<Grid::CCacheQueueEntry::TFileReqEntry, std::allocator<Grid::CCacheQueueEntry::TFileReqEntry>>&)
CryptoPP::AbstractGroup<CryptoPP::Integer>::SimultaneousMultiply(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
Grid::CCacheQueueEntry::~CCacheQueueEntry()
vtable for Grid::CSClient::CInvalidSessionHandleException
typeinfo for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CEngineLoopbackConnection::SetCacheDefaultDirectory(char const*, TSteamError*)
CryptoPP::IteratedHash<unsigned long, false, 64u>::~IteratedHash()
Grid::InternalSteamLoadFileToApp(unsigned int, unsigned int, char const*, void const*, unsigned int, unsigned long long, TSteamError*)
__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>> std::adjacent_find<__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::CTestEqualityOfTFieldHeaderOffsetsByFieldName>(__gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, __gnu_cxx::__normal_iterator<common::CMultiFieldBlob::TFieldHeaderOffset*, std::vector<common::CMultiFieldBlob::TFieldHeaderOffset, std::allocator<common::CMultiFieldBlob::TFieldHeaderOffset>>>, common::CMultiFieldBlob::CTestEqualityOfTFieldHeaderOffsetsByFieldName)
CryptoPP::MontgomeryRepresentation::CascadeExponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
Grid::CSClient::CReadFileFSM::CRecvSizeOfNextCompressedBlockChunkState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
vtable for CryptoPP::HashFilter
typeinfo for common::CNamedArgsInsertException
Grid::CCacheManifestOnly::CImpl::DecryptData(unsigned char*, unsigned long long, unsigned long long, Grid::CManifestIterator&)
_Unwind_Backtrace
typeinfo name for ScopeGuardImplBase
CryptoPP::Exception::~Exception()
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferData*>::~ScopeGuardImpl1()
arg::generic_reference::counted_ptr_body::~counted_ptr_body()
common::ObjFunctorImpl1<Grid::CAccount::CImpl, void (Grid::CAccount::CImpl::*)(unsigned int), unsigned int>::~ObjFunctorImpl1()
typeinfo name for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
Grid::CCellIDManager::GetWinningPingTime()
Grid::CFs::CReadException::~CReadException()
common::OutputXMLElement(char const*, char const*, std::ostream&, unsigned int)
Grid::ICache::GetPerfStats(TSteamUpdateStats*)
CryptoPP::Rijndael::~Rijndael()
typeinfo for Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler
CryptoPP::IteratedHashBase<unsigned long>::Update(unsigned char const*, unsigned int)
DW.ref._ZTIN4Grid25CSimpleErrorCodeExceptionE
Grid::CCSERServerAddressCache::DerivedGetNewAddressList(std::vector<common::CIPAddrPort, std::allocator<common::CIPAddrPort>>*)
std::vector<unsigned long, std::allocator<unsigned long>>::end()
typeinfo name for CryptoPP::HMAC<CryptoPP::SHA>
std::pair<std::string const, std::string>::~pair()
Grid::CBadCallerErrorStructPtrException::Clone() const
typeinfo for Grid::CReturnBufferItem<char [256]>
Grid::CBadApiArgumentException::ThrowSelf() const
CryptoPP::SHA::SHA()
Grid::CSClient::CLoginFSM::~CLoginFSM()
common::CGetTokensException::ThrowSelf() const
typeinfo for Grid::CUnknownReadException
construction vtable for CryptoPP::SignatureSystemBaseTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>-in-CryptoPP::RSAPublicKeyTemplate<CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>, CryptoPP::RSAPrivateKeyTemplate<CryptoPP::SignerTemplate<CryptoPP::DigestSignerTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::InvertibleRSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>>>
typeinfo name for CryptoPP::FilterWithBufferedInput
common::CValueIterator::~CValueIterator()
common::CBlobKey::CPublicKey::AcceptVisitor(common::IVisitor&)
typeinfo for Grid::CVTSIPAddressCache
CryptoPP::MessageQueue::NumberOfMessages() const
sigslot::_signal_base<sigslot::multi_threaded_local>::~_signal_base()
Grid::CAccount::Create(common::CCommandStatusControl&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&)
CryptoPP::DecryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>::~DecryptorTemplate()
typeinfo name for Grid::CCacheServerSession
Grid::CAppFilesystemRecord::~CAppFilesystemRecord()
common::IKey::GetName()
StaticInitializers::~StaticInitializers()
Grid::CFs::CMountInUseException::ThrowSelf() const
common::CThreadSafeCountedPtr<Grid::CCSERServerAddressCache>::~CThreadSafeCountedPtr()
Grid::TRequestInfo_t::~TRequestInfo_t()
Grid::CCacheFileFixedChecksum::CSignatureCheckFailedException::ThrowSelf() const
Grid::CEngineLoopbackConnection::GetAppDependencies(unsigned int, unsigned int*, unsigned int, bool, TSteamError*)
Grid::CSClient::CSession::ReadManifest(common::CMallocedBlock&, Grid::CSClient::ICompletionHandler*, unsigned int)
Grid::ICacheGroupIteratorImpl::ICacheGroupIteratorImpl(char const*, Grid::CCacheGroup*)
std::vector<unsigned int, std::allocator<unsigned int>>::operator=(std::vector<unsigned int, std::allocator<unsigned int>> const&)
CryptoPP::BERDecodeErr::~BERDecodeErr()
ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>::~ScopeGuardImpl2()
Grid::InternalSteamGetUserType(unsigned int, unsigned int*, TSteamError*)
CryptoPP::HexDecoder::~HexDecoder()
common::CMultiFieldBlob::CAttemptToUpdateFieldWithRegisteredChildException::~CAttemptToUpdateFieldWithRegisteredChildException()
deflateParams
typeinfo name for Grid::CCSERServerAddressCache
Grid::CContentDescriptionRecord::CValidateFieldsException::Clone() const
std::vector<void*, std::allocator<void*>>::_M_insert_aux(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*>>>, void* const&)
typeinfo name for CryptoPP::PK_Decryptor
typeinfo for CryptoPP::DERGeneralEncoder
Grid::CSClient::CReadPurgeListFSM::s_RecvDataChunkHeaderState
construction vtable for CryptoPP::PK_Verifier-in-CryptoPP::VerifierTemplate<CryptoPP::DigestVerifierTemplate<CryptoPP::PKCS_SignaturePaddingScheme, CryptoPP::RSAFunction>, CryptoPP::PKCS_DecoratedHashModule<CryptoPP::SHA>>
Grid::CMasterResourceList::GetNextResource(Grid::CCacheGroupIterator&, unsigned long long*, unsigned long long*, Grid::ContentPriority::ERequestLevel*)
Grid::CSClient::CBlockingReadVersionChangeFileIdPurgeListHandler::~CBlockingReadVersionChangeFileIdPurgeListHandler()
Grid::CAccountPaymentCardInfoRecord::~CAccountPaymentCardInfoRecord()
arg::generic_reference::~generic_reference()
CryptoPP::g_bitBucket
typeinfo name for common::CLogContext
std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int>>>::~_Rb_tree()
typeinfo for Grid::CEngineLoopbackConnection
typeinfo for ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>
common::CBlobKey::CPublicKey::SetValue(std::string const&, std::string const&)
Grid::CFsTable::RemoveMount(std::string const&)
vtable for ObjScopeGuardImpl1<Grid::CCacheQueueManager, void (Grid::CCacheQueueManager::*)(unsigned int), unsigned int>
virtual thunk to CryptoPP::StringSource::~StringSource()
common::CMultiFieldBlob::CInvalidMemoryMappedFileException::~CInvalidMemoryMappedFileException()
typeinfo for common::CMainConfigDatabase
Grid::CAppRecord::~CAppRecord()
typeinfo name for CryptoPP::PK_FixedLengthEncryptor
common::CNamedArgs::s_szOverrideExistingNamePrefix
vtable for ScopeGuardImpl1<int (*)(int), long>
CryptoPP::Parity(unsigned long)
Grid::ICache::~ICache()
Grid::CClientConnection::HandleSetAppVersion()
Grid::CCacheNone::IsEncrypted(Grid::CManifestIterator&) const
Grid::CCachePreLoader::CImpl::CReadCompletionHandler::~CReadCompletionHandler()
Grid::CAppVersionInfoRecord::ValidateFields(std::ostream*, unsigned int)
Grid::CEngineLoopbackConnection::SetAppCacheSize(unsigned int, unsigned int, bool, TSteamError*)
common::CMainConfigDatabase::Instance()
Grid::CClientConnection::HandleSetCacheDefaultDirectory()
typeinfo name for CryptoPP::PK_Encryptor
Grid::CSClient::WrappedRequestLatestContentDescriptionDB(common::CIPAddrPort const&, unsigned char*, common::CMallocedBlock*, bool, common::CCommandStatusControl*)
vtable for CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::InvertibleRSAFunction>
typeinfo for Grid::CAccountSubscriptionsRecord
BSL::CException::CException(char const*, unsigned int, std::vector<std::string, std::allocator<std::string>> const&)
Grid::CMutexGuard::CTimeoutException::ThrowSelf() const
Grid::CFsCacheGroup::Close(unsigned int)
Grid::CCacheOneFileFixedBlock::CImpl::CImpl(std::string const&, std::vector<std::string, std::allocator<std::string>> const&, unsigned int, unsigned int, std::string const&, std::string const&, std::string const&, bool, common::CCommandStatusControl*, unsigned int)
CryptoPP::BlockingRng::~BlockingRng()
vtable for Grid::CActivityLog
ObjScopeGuardImpl1<Grid::CTicketCache, void (Grid::CTicketCache::*)(unsigned int), unsigned int>::~ObjScopeGuardImpl1()
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CAppStatus::TAppStatusInfo>>>::~_Rb_tree()
typeinfo for ScopeGuardImpl2<void (*)(std::string const&, unsigned int), std::string, unsigned int>
std::vector<Grid::CCacheFileFixedDirectory::TEntry_mini, std::allocator<Grid::CCacheFileFixedDirectory::TEntry_mini>>::~vector()
CryptoPP::HashFilter::~HashFilter()
construction vtable for CryptoPP::FilterWithBufferedInput-in-CryptoPP::CBCPaddedEncryptor
CryptoPP::DigestSignatureSystem::~DigestSignatureSystem()
common::CLog::~CLog()
typeinfo for Grid::CBadCallHandleException
typeinfo for Grid::ICache::CException
Grid::CClientContentTicket::CClientContentTicket(unsigned short, std::string const&, std::string const&, unsigned short, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned short, unsigned int, unsigned short, unsigned char const*, BSL::CTime, BSL::CTime, unsigned short, unsigned char const*, unsigned int, unsigned int, common::CIPAddrPort const&, common::CIPAddrPort const&)
typeinfo for CryptoPP::HashFilter
Grid::CReturnBufferItem<unsigned int>::~CReturnBufferItem()
CryptoPP::PK_Encryptor::~PK_Encryptor()
Grid::CFsTable::CImpl::TPreloader::~TPreloader()
common::CBlobSubKeyIterator::~CBlobSubKeyIterator()
ICmd_::~ICmd_()
common::CBlobKey::DeleteBlobsInCorrectOrder()
CryptoPP::CBCPaddedEncryptor::FirstPut(unsigned char const*)
Grid::CSClient::CBlockingReadManifestHandler::~CBlockingReadManifestHandler()
Grid::InternalSteamSubscribe(unsigned int, unsigned int, TSteamSubscriptionBillingInfo const*, TSteamError*)
common::CHierarchicalNamedArgs::PopulateFromStream(std::istream*)
CryptoPP::BufferedTransformation::ChannelPutMessageEnd(std::string const&, unsigned char const*, unsigned int, int)
Grid::CLibraryNotInitializedException::CLibraryNotInitializedException()
Grid::ICommandState::StartRequestForgottenPasswordEmail(std::string const&, char*)
typeinfo for CryptoPP::HexDecoder
Grid::CEngineConnection::LoadCacheFromDir(unsigned int, char const*, TSteamError*)
typeinfo for arg::counted_ptr<Grid::IResourceList>
Grid::CEngineLoopbackConnection::RequestEmailAddressVerificationEmail(TSteamError*)
common::CNamedArgs::ReadArgsLine(char const*)
CryptoPP::PKCS_SignaturePaddingScheme::MaxUnpaddedLength(unsigned int) const
Grid::CAccount::CImpl::GetSubscriptionGameState(unsigned int)
common::CThreadSafeAutoSeededRandomPoolSingleton::Instance()
BSL::CTime::Millisecond()
Grid::CFs::CEndOfFileException::~CEndOfFileException()
Grid::CCacheServerSessionMgr::CancelPendingCalls()
Grid::CPipeComm::CreatePipe()
std::_Rb_tree<int, std::pair<int const, LicenseInfo_t>, std::_Select1st<std::pair<int const, LicenseInfo_t>>, std::less<int>, std::allocator<std::pair<int const, LicenseInfo_t>>>::~_Rb_tree()
CryptoPP::HexEncoder::HexEncoder(CryptoPP::BufferedTransformation*, bool)
Grid::ICommandState::GetObjectFromHandle(unsigned int)
CryptoPP::ModularRoot(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&)
Grid::CBadCallHandleException::CBadCallHandleException()
Grid::CClientConnection::HandleTellFile64()
typeinfo name for Grid::CFs::CCannotWriteNonUserConfigFile
vtable for ObjScopeGuardImpl0<Grid::CVTSIPAddressCache, void (Grid::IServerAddressCache::*)()>
Grid::CClientConnection::HandleGetc()
common::CBlobRegistry::WatchdogThreadFun()
typeinfo for Grid::CAccountUserPasswordRecord
typeinfo for Grid::CCSERServerAddressCache
Grid::CEngineConnection::GetAppIds(unsigned int*, unsigned int, TSteamError*)
non-virtual thunk to CryptoPP::RandomPool::~RandomPool()
void std::_Destroy_aux<false>::__destroy<TPreloaderInfo*>(TPreloaderInfo*, TPreloaderInfo*)
vtable for ScopeGuardImpl1<int (*)(int), int>
std::deque<Grid::ICommandState*, std::allocator<Grid::ICommandState*>>::erase(std::_Deque_iterator<Grid::ICommandState*, Grid::ICommandState*&, Grid::ICommandState**>)
CryptoPP::BufferedTransformation::TransferTo(CryptoPP::BufferedTransformation&, unsigned long)
common::CMultiFieldBlob::CFieldNameNotNumeriCBlobException::Clone() const
typeinfo name for common::CLogGroup
CryptoPP::SHA::~SHA()
ObjScopeGuardImpl1<Grid::CSClient::CConnectionPool, void (Grid::CSClient::CConnectionPool::*)(common::CThreadSafeCountedPtr<Grid::CSClient::CConnection> const&), common::CThreadSafeCountedPtr<Grid::CSClient::CConnection>>::~ObjScopeGuardImpl1()
typeinfo name for ObjScopeGuardImpl1<Grid::CSClient::CConnection, void (Grid::CSClient::CConnection::*)(unsigned int), unsigned int>
Grid::CDiscountRecord::CValidateFieldsException::Clone() const
CryptoPP::ModularArithmetic::MultiplicativeInverse(CryptoPP::Integer const&) const
vtable for Grid::CEngineDisconnectException
common::ShutdownHasCompleted(int, common::CWSABUFWrapper&)
Grid::InternalSteamEnumerateAppVersion(unsigned int, unsigned int, unsigned int, TSteamAppVersion*, TSteamError*)
Grid::CSClient::CConnection::SessionExistsForAppId(unsigned int)
typeinfo name for Grid::CFs::CUnknownException
Grid::CCacheQueueManager::AddItem(std::string const&, unsigned long long, unsigned long long, unsigned int, unsigned char*, bool, Grid::ContentPriority::ERequestLevel, bool, common::CWin32Event*, unsigned int, unsigned long long)
Grid::ICache::GetContentServerInfo(unsigned int*, unsigned int*)
Grid::CEngineLoopbackConnection::WasBlobRegistryDeleted(int*, TSteamError*)
Grid::CFs::CBadArgException::Clone() const
CmdAdaptor<ScopeGuardImpl1<int (*)(_IO_FILE*), _IO_FILE*>>::~CmdAdaptor()
Grid::CFs::CBadArgException::~CBadArgException()
Grid::CCacheFileFixedDirectoryEntry::~CCacheFileFixedDirectoryEntry()
Grid::CSClient::CService::FindSession(unsigned int)
arg::grin_ptr<common::CConfigDatabase::TImpl>::my_copy_ftn(common::CConfigDatabase::TImpl const*)
Grid::CBadLaunchConfigException::~CBadLaunchConfigException()
Grid::CMustBeOnlineException::~CMustBeOnlineException()
ScopeGuardImpl1<int (*)(char*), char*>::~ScopeGuardImpl1()
common::LockGuard<common::CFastThreadMutex>::~LockGuard()
Grid::ICache::CCacheNeedsRepairException::CCacheNeedsRepairException()
typeinfo for ObjScopeGuardImpl0<Grid::CCachePreLoader::CImpl, void (Grid::CCachePreLoader::CImpl::*)()>
__register_frame_table
common::CThreadSafeCountedPtr<Grid::CBinaryLogFile>::~CThreadSafeCountedPtr()
Grid::CFileHandleList::~CFileHandleList()
Grid::ICommandState::s_pCommandThreadPool
ObjScopeGuardImpl0<common::CMultiFieldBlob, void (common::CMultiFieldBlob::*)()>::~ObjScopeGuardImpl0()
std::vector<unsigned int, std::allocator<unsigned int>>::~vector()
Grid::CFs::FindFirst(unsigned int, char const*, ESteamFindFilter, TSteamElemInfo64*, unsigned int*)
common::ICloneableException::~ICloneableException()
Grid::CCacheFileFixedFsTree::CCacheFileFixedFsTree(unsigned char*, unsigned int, long)
CryptoPP::ByteQueue::~ByteQueue()
vtable for common::CThreadLocalPtr<std::string>
typeinfo for Grid::CBufferTable
typeinfo name for Grid::CAccountPaymentCardReceiptRecord
Grid::CResourceListFile::CResourceListFile(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::string const&, std::string const&, Grid::ContentPriority::ERequestLevel)
CryptoPP::RandomPool::Put(unsigned char)
Grid::CAccount::DisableSteamBridgeInterface()
Grid::CMutexGuard::CTimeoutException::~CTimeoutException()
Grid::CAppStatus::BAppInitialized(unsigned int)
virtual thunk to CryptoPP::EncryptorTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~EncryptorTemplate()
typeinfo for arg::generic_reference
Grid::CPipeComm::PeekData(void*, unsigned int)
vtable for CryptoPP::MessageQueue
typeinfo for common::ICloneableException
CryptoPP::ModularArithmetic::Zero() const
VTT for CryptoPP::HexEncoder
typeinfo name for CryptoPP::EuclideanDomainOf<CryptoPP::Integer>
Grid::CClientConnection::HandleNumAppsRunning()
Grid::CSClient::CLoginFSM::CSendSessionLoginRequestState::TransitionIntoState(Grid::CSClient::IProtocolFSM&) const
ScopeGuardImpl1<void (*)(Grid::IReturnBuffer*), Grid::CReturnBufferItem<unsigned int>*>::~ScopeGuardImpl1()
common::CMultiFieldBlob::GetSerializedVersion(unsigned int*) const
Grid::CSClient::CReadFileChecksumTableFSM::CRecvDataChunkHeaderState::~CRecvDataChunkHeaderState()
CryptoPP::CryptoSystemBaseTemplate<CryptoPP::OAEP<CryptoPP::SHA, CryptoPP::P1363_MGF1<CryptoPP::SHA>, &CryptoPP::OAEP_P_DEFAULT, 0u>, CryptoPP::RSAFunction>::~CryptoSystemBaseTemplate()
typeinfo for Grid::CCannotCreateCacheFileException
common::CConfigDatabase::Get(std::string const&, std::string*)
Grid::CFsTable::CImpl::TClientInfo::TClientInfo()
ScopeGuardImpl1<void (*)(Grid::CPipeComm*), Grid::CPipeComm*>::ExecuteNowIfNotDismissed() const
typeinfo for CryptoPP::Exception
Grid::CCacheGroup::TCacheGroupEntry* std::__uninitialized_copy<false>::uninitialized_copy<Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*>(Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*, Grid::CCacheGroup::TCacheGroupEntry*)
std::_Rb_tree<std::string, std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>, std::_Select1st<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>>::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::map<unsigned int, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, common::CThreadSafeCountedPtr<Grid::CFsTable::CImpl::TPreloader>>>>>>*)
Grid::CAccount::CImpl::UpdatePreloadersIfNecessary(common::CCommandStatusControl*)
vtable for Grid::CCacheQueueManager
Grid::CFs::CConfigException::CConfigException()
Grid::CResourceListNodes::CResourceListNodes(common::CThreadSafeCountedPtr<Grid::CCacheGroup> const&, std::string const&, std::vector<Grid::CCacheGroup::TFileIndex, std::allocator<Grid::CCacheGroup::TFileIndex>>&, Grid::ContentPriority::ERequestLevel)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>, std::_Select1st<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo>>>::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<unsigned int const, Grid::CFsTable::CImpl::TClientInfo> const&)
Grid::CCacheOneFileFixedBlock::CImpl::AdjustCacheSize(unsigned int)
SteamPrintFile
pthread_cond_signal@@GLIBC_2.3.2
SteamPauseCachePreloading
open@@GLIBC_2.0
pthread_mutex_destroy@@GLIBC_2.0
_ZNSo3putEc@@GLIBCXX_3.4
fchmod@@GLIBC_2.0
_ZNSsixEj@@GLIBCXX_3.4
chmod@@GLIBC_2.0
SteamAbortOngoingUserIDTicketValidation
pthread_getspecific@@GLIBC_2.0
rewind@@GLIBC_2.0
_Znwj@@GLIBCXX_3.4
strcat@@GLIBC_2.0
__cxa_finalize@@GLIBC_2.1.3
pthread_attr_setstacksize@@GLIBC_2.1
fread@@GLIBC_2.0
_ZNSirsERj@@GLIBCXX_3.4
semget@@GLIBC_2.0
SteamCleanup
fileno@@GLIBC_2.0
semop@@GLIBC_2.0
alphasort64@@GLIBC_2.2
SteamGetAppUpdateStats
SteamGetFileAttributeFlags
_ZNSs6resizeEjc@@GLIBCXX_3.4
pthread_attr_init@@GLIBC_2.1
SteamRefreshAccountInfo2
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4
SteamUnmountAppFilesystem
SteamWaitForResources
socket@@GLIBC_2.0
SteamDefragCaches
CleanupFIFOs
sscanf@@GLIBC_2.0
sendfile64@@GLIBC_2.3
__strtoul_internal@@GLIBC_2.0
dlopen@@GLIBC_2.1
_ZTVSt9basic_iosIcSt11char_traitsIcEE@@GLIBCXX_3.4
putc@@GLIBC_2.0
access@@GLIBC_2.0
open64@@GLIBC_2.2
setenv@@GLIBC_2.0
_ZNSs12_M_leak_hardEv@@GLIBCXX_3.4
_ZNSs7replaceEjjPKcj@@GLIBCXX_3.4
SteamIsFileNeededByApp
_ZNKSs7compareEPKc@@GLIBCXX_3.4
_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@@GLIBCXX_3.4
getc@@GLIBC_2.0
mkdir@@GLIBC_2.0
_ZNSolsEm@@GLIBCXX_3.4
_edata
_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
SteamProcessOngoingUserIDTicketValidation
_ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4
SteamSubscribe
SteamMountFilesystem
strstr@@GLIBC_2.0
_ZTTSt19basic_istringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
scandir@@GLIBC_2.0
_ZSt9terminatev@@GLIBCXX_3.4
semctl@@GLIBC_2.2
_ZNSt8ios_baseC2Ev@@GLIBCXX_3.4
SteamGetTotalUpdateStats
_ZTVSt18basic_stringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
setsockopt@@GLIBC_2.0
SteamStat64
SteamWasBlobRegistryDeleted
_ZNKSs7compareEjjPKc@@GLIBCXX_3.4
pthread_key_create@@GLIBC_2.0
SteamRefreshAccountInfo
SteamRemoveAppDependency
SteamFindServersGetErrorString
_ZNSt8ios_baseD2Ev@@GLIBCXX_3.4
SteamLoadCacheFromDir
select@@GLIBC_2.0
strdup@@GLIBC_2.0
realpath@@GLIBC_2.3
strncasecmp@@GLIBC_2.0
pthread_cond_broadcast@@GLIBC_2.3.2
pthread_cancel@@GLIBC_2.0
sleep@@GLIBC_2.0
gethostname@@GLIBC_2.0
_ZSt17__throw_bad_allocv@@GLIBCXX_3.4
_ZNKSs12find_last_ofEPKcjj@@GLIBCXX_3.4
symlink@@GLIBC_2.0
SteamGetCacheDefaultDirectory
SteamForgetAllHints
_ZNSi4peekEv@@GLIBCXX_3.4
SteamEnumerateAppVersion
_ZNSi5seekgExSt12_Ios_Seekdir@@GLIBCXX_3.4
connect@@GLIBC_2.0
SteamLogResourceLoadStarted
_ZNSs6assignEPKcj@@GLIBCXX_3.4
__cxa_begin_catch@@CXXABI_1.3
_ZNSs6resizeEj@@GLIBCXX_3.4
SteamCreateAccount
SteamOpenFile
SteamLogin
_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
calloc@@GLIBC_2.0
SteamCreateCachePreloaders
SteamFindServersNumServers
environ@@GLIBC_2.0
SteamStartLoadingCache
SteamGetContentServerInfo
clock_gettime@@GLIBC_2.2
SteamGetCurrentCellID
SteamIsSubscribed
SteamIsLoggedIn
getpid@@GLIBC_2.0
getuid@@GLIBC_2.0
ferror@@GLIBC_2.0
SteamLogout
__cxa_allocate_exception@@CXXABI_1.3
_ZNSs5beginEv@@GLIBCXX_3.4
SteamGetSponsorUrl
__strtol_internal@@GLIBC_2.0
fputc@@GLIBC_2.0
fgets@@GLIBC_2.0
SteamStartValidatingNewValveCDKey
setvbuf@@GLIBC_2.0
fwrite@@GLIBC_2.0
strcasestr@@GLIBC_2.1
pthread_mutexattr_settype@@GLIBC_2.1
dl_iterate_phdr@@GLIBC_2.2.4
memcpy@@GLIBC_2.0
_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4
SteamSetAppCacheSize
write@@GLIBC_2.0
malloc@@GLIBC_2.0
SteamMoveApp
SteamIsSecureComputer
SteamForceCellId
SteamGetAppCacheSize
SteamOpenFileEx
strlen@@GLIBC_2.0
fopen64@@GLIBC_2.1
_ZNSsC1ERKSs@@GLIBCXX_3.4
SteamGetAppDependencies
munmap@@GLIBC_2.0
pthread_setspecific@@GLIBC_2.0
usleep@@GLIBC_2.0
_ZNSi7getlineEPcic@@GLIBCXX_3.4
fprintf@@GLIBC_2.0
getcwd@@GLIBC_2.0
_ZNSs6insertEjPKcj@@GLIBCXX_3.4
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@@GLIBCXX_3.4
SteamLaunchApp
_ZNSsC1EjcRKSaIcE@@GLIBCXX_3.4
_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4
SteamGetAppDir
SteamClearError
_ZNSt9bad_allocD1Ev@@GLIBCXX_3.4
SteamGetAppStats
mount@@GLIBC_2.0
__cxa_guard_abort@@CXXABI_1.3
_ZTVSt15basic_streambufIcSt11char_traitsIcEE@@GLIBCXX_3.4
__cxa_guard_release@@CXXABI_1.3
__xstat@@GLIBC_2.0
_ZNSo9_M_insertIyEERSoT_@@GLIBCXX_3.4.9
__lxstat@@GLIBC_2.0
_ZNSo9_M_insertImEERSoT_@@GLIBCXX_3.4.9
_ZNSo5flushEv@@GLIBCXX_3.4
__cxa_atexit@@GLIBC_2.1.3
dlsym@@GLIBC_2.0
_ZNSt13runtime_errorC1ERKSs@@GLIBCXX_3.4
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
_ZSt19__throw_logic_errorPKc@@GLIBCXX_3.4
__cxa_free_exception@@CXXABI_1.3
SteamGetSubscriptionExtendedInfo
SteamGetc
_fini
strcmp@@GLIBC_2.0
_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@@GLIBCXX_3.4
utimes@@GLIBC_2.0
_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZNSt15_List_node_base7_M_hookEPS_@@GLIBCXX_3.4.14
toupper@@GLIBC_2.0
time@@GLIBC_2.0
_ZNSs7reserveEj@@GLIBCXX_3.4
_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_@@GLIBCXX_3.4
SteamRequestForgottenPasswordEmail
SteamBlockingCall
tolower@@GLIBC_2.0
SteamSetUser2
_Znaj@@GLIBCXX_3.4
putenv@@GLIBC_2.0
SteamEnumerateSubscriptionDiscountQualifier
fsync@@GLIBC_2.0
writev@@GLIBC_2.0
SteamGetSubscriptionPurchaseCountry
__errno_location@@GLIBC_2.0
strncpy@@GLIBC_2.0
SteamShutdownUserIDTicketValidator
send@@GLIBC_2.0
fflush@@GLIBC_2.0
_ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4
_ZNSt15_List_node_base11_M_transferEPS_S0_@@GLIBCXX_3.4.14
memcmp@@GLIBC_2.0
SteamShutdownEngine
chown@@GLIBC_2.1
SteamSetMaxStallCount
_ZSt2wsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_@@GLIBCXX_3.4
SteamGetLocalClientVersion
SteamShutdownSteamBridgeInterface
msync@@GLIBC_2.0
_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St8_Setbase@@GLIBCXX_3.4
SteamChangeForgottenPassword
strrchr@@GLIBC_2.0
SteamTellFile
SteamEnumerateAppIcon
InternalSteamShouldShutdownEngine2
SteamLoadFileToCache
getsockname@@GLIBC_2.0
_ZNSsaSERKSs@@GLIBCXX_3.4
SteamWaitForAppResources
SteamEnumerateSubscription
SteamInitializeUserIDTicketValidator
SteamWriteFile
fseek@@GLIBC_2.0
_ZNSs3endEv@@GLIBCXX_3.4
SteamGetCacheDecryptionKey
_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@@GLIBCXX_3.4
SteamLogResourceLoadFinished
getenv@@GLIBC_2.0
fputs@@GLIBC_2.0
_ZTVSt9bad_alloc@@GLIBCXX_3.4
SteamHintResourceNeed
SteamSetUser
_ZNSsC1Ev@@GLIBCXX_3.4
SteamEnumerateAppDependency
srand@@GLIBC_2.0
isalnum@@GLIBC_2.0
SteamLoadFileToApp
strchr@@GLIBC_2.0
_ZNSsC1ERKSsjj@@GLIBCXX_3.4
_ZdlPv@@GLIBCXX_3.4
rename@@GLIBC_2.0
SteamGetAccountStatus
pthread_create@@GLIBC_2.1
SteamWeakVerifyNewValveCDKey
_ZNKSs17find_first_not_ofEPKcjj@@GLIBCXX_3.4
chdir@@GLIBC_2.0
SteamDeleteAccount
SteamEnumerateAppLaunchOption
pthread_mutex_unlock@@GLIBC_2.0
_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
SteamRealPath
_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@@GLIBCXX_3.4
SteamEnumerateApp
_ZNKSs4findEPKcjj@@GLIBCXX_3.4
vsnprintf@@GLIBC_2.0
_ZNSt13runtime_errorD1Ev@@GLIBCXX_3.4
SteamStartValidatingUserIDTicket
InternalSteamNumClientsConnectedToEngine
_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev@@GLIBCXX_3.4
signal@@GLIBC_2.0
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
SteamFindApp
SteamIsFileNeededByCache
SteamOptionalCleanUpAfterClientHasDisconnected
gettimeofday@@GLIBC_2.0
_ZNSaIcED1Ev@@GLIBCXX_3.4
pthread_mutex_init@@GLIBC_2.0
fchown@@GLIBC_2.0
SteamProcessCall
ftello64@@GLIBC_2.1
_ZNSs6appendERKSs@@GLIBCXX_3.4
SteamGetEncryptedNewValveCDKey
_ZNSt9basic_iosIcSt11char_traitsIcEE4fillEc@@GLIBCXX_3.4
rand@@GLIBC_2.0
SteamIsFileImmediatelyAvailable
SteamNumAppsRunning
SteamRefreshLogin
SteamSetCacheDefaultDirectory
SteamGetOfflineStatus
_init
lseek64@@GLIBC_2.2
_ZNSs6appendEPKcj@@GLIBCXX_3.4
__dynamic_cast@@CXXABI_1.3
readdir64@@GLIBC_2.2
log@@GLIBC_2.0
_ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4
recvfrom@@GLIBC_2.0
_ZTVSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11
SteamGetEncryptedUserIDTicket
SteamChangePassword
SteamGetCachePercentFragmentation
pthread_mutex_lock@@GLIBC_2.0
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4
getsockopt@@GLIBC_2.0
SteamRequestAccountsByEmailAddressEmail
_ZNKSs5rfindEcj@@GLIBCXX_3.4
__fxstat64@@GLIBC_2.2
_Jv_RegisterClasses
SteamGetLocalFileCopy
_ZTVSt9exception@@GLIBCXX_3.4
SteamReadFile
utime@@GLIBC_2.0
SteamFindClose
pthread_cond_init@@GLIBC_2.3.2
SteamGetUser
SteamOpenTmpFile
SteamIsCacheLoadingEnabled
inet_addr@@GLIBC_2.0
free@@GLIBC_2.0
_ZTVSt19basic_istringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZNSt15_List_node_base9_M_unhookEv@@GLIBCXX_3.4.14
SteamIsAccountNameInUse
SteamStartEngine
_ZSt16__throw_bad_castv@@GLIBCXX_3.4
SteamSetNotificationCallback
SteamChangePersonalQA
__lxstat64@@GLIBC_2.2
_ZSt4cout@@GLIBCXX_3.4
CreateInterface
_ZTISt9bad_alloc@@GLIBCXX_3.4
__cxa_call_unexpected@@CXXABI_1.3
_ZdaPv@@GLIBCXX_3.4
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZNSs7replaceEjjRKSs@@GLIBCXX_3.4
pthread_mutexattr_init@@GLIBC_2.0
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i@@GLIBCXX_3.4.9
_ZNSs6assignERKSs@@GLIBCXX_3.4
pthread_mutexattr_destroy@@GLIBC_2.0
strncmp@@GLIBC_2.0
mbstowcs@@GLIBC_2.0
_ZNSolsEj@@GLIBCXX_3.4
SteamGetSubscriptionReceipt
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@@GLIBCXX_3.4
SteamVerifyPassword
_ZNSs7_M_leakEv@@GLIBCXX_3.4
strcasecmp@@GLIBC_2.0
_ZNSs5clearEv@@GLIBCXX_3.4
SteamPutc
SteamDecryptDataForThisMachine
_ZNKSs5c_strEv@@GLIBCXX_3.4
_end
fgetc@@GLIBC_2.0
SteamCloseFile
SteamOpenFile64
strcspn@@GLIBC_2.0
opendir@@GLIBC_2.0
tmpfile64@@GLIBC_2.1
SteamFlushFile
_ZNSt6localeD1Ev@@GLIBCXX_3.4
closedir@@GLIBC_2.0
SteamGetCacheFilePath
SteamGetSubscriptionIds
SteamFindServersIterateServer
_ZSt20__throw_out_of_rangePKc@@GLIBCXX_3.4
printf@@GLIBC_2.0
SteamInsertAppDependency
__cxa_rethrow@@CXXABI_1.3
CleanupSemaphores
SteamIsAppSubscribed
SteamFlushCache
strerror@@GLIBC_2.0
nanosleep@@GLIBC_2.0
_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
SteamGetUserType
SteamGetVersion
__xmknod@@GLIBC_2.0
_ZNKSs7compareEjjPKcj@@GLIBCXX_3.4
SteamGetAppDLCStatus
dlclose@@GLIBC_2.0
pthread_setschedparam@@GLIBC_2.0
__bss_start
pthread_cond_timedwait@@GLIBC_2.3.2
_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZTVSt13basic_filebufIcSt11char_traitsIcEE@@GLIBCXX_3.4
SteamChangeEmailAddress
SteamGetDepotParent
pthread_cond_wait@@GLIBC_2.3.2
_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4
feof@@GLIBC_2.0
puts@@GLIBC_2.0
SteamStartup
_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
SteamStopLoadingCache
SteamUninstall
_ZNSi4readEPci@@GLIBCXX_3.4
getrlimit64@@GLIBC_2.2
_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
SteamChangeAccountName
_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
getpwuid@@GLIBC_2.0
_ZNSsD1Ev@@GLIBCXX_3.4
lchown@@GLIBC_2.0
SteamFindFirst
_ZNKSsixEj@@GLIBCXX_3.4
SteamStartEngineEx
SteamSetAppVersion
SteamCheckAppOwnership
sendto@@GLIBC_2.0
_ZNSs4_Rep9_S_createEjjRKSaIcE@@GLIBCXX_3.4
SteamFindNext64
SteamChangeOfflineStatus
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode@@GLIBCXX_3.4
SteamUpdateAccountBillingInfo
link@@GLIBC_2.0
SteamMountAppFilesystem
_ZNKSs4sizeEv@@GLIBCXX_3.4
__cxa_end_catch@@CXXABI_1.3
_ZNSo9_M_insertIbEERSoT_@@GLIBCXX_3.4.9
memset@@GLIBC_2.0
_ZTTSt18basic_stringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj@@GLIBCXX_3.4
SteamGetNumAccountsWithEmailAddress
strspn@@GLIBC_2.0
__gxx_personality_v0@@CXXABI_1.3
pthread_self@@GLIBC_2.0
SteamWaitForAppReadyToLaunch
SteamGetAppUserDefinedInfo
SteamSeekFile64
SteamGetAppIds
SteamSizeFile64
readv@@GLIBC_2.0
recv@@GLIBC_2.0
remove@@GLIBC_2.0
shutdown@@GLIBC_2.0
SteamUnmountFilesystem
SteamRequestEmailAddressVerificationEmail
SteamUnsubscribe
SteamAbortCall
SteamIsUsingSdkContentServer
fcntl@@GLIBC_2.0
_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@@GLIBCXX_3.4
gmtime@@GLIBC_2.0
SteamRequestAccountsByCdKeyEmail
snprintf@@GLIBC_2.0
__cxa_throw@@CXXABI_1.3
pthread_mutex_trylock@@GLIBC_2.0
SteamGetEncryptionKeyToSendToNewClient
close@@GLIBC_2.0
_ZNSs4swapERSs@@GLIBCXX_3.4
_ZNSolsEi@@GLIBCXX_3.4
_ZNSi5tellgEv@@GLIBCXX_3.4
read@@GLIBC_2.0
_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@@GLIBCXX_3.4
SteamAckSubscriptionReceipt
abort@@GLIBC_2.0
_ZTVN10__cxxabiv121__vmi_class_type_infoE@@CXXABI_1.3
_ZNSi10_M_extractIjEERSiRT_@@GLIBCXX_3.4.9
clearerr@@GLIBC_2.0
strpbrk@@GLIBC_2.0
vfprintf@@GLIBC_2.0
__xstat64@@GLIBC_2.2
_ZNSaIcEC1Ev@@GLIBCXX_3.4
SteamEncryptDataForThisMachine
SteamGetAppUserDefinedRecord
pthread_once@@GLIBC_2.0
ftime@@GLIBC_2.0
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@@GLIBCXX_3.4
pow@@GLIBC_2.0
SteamSeekFile
fclose@@GLIBC_2.1
__environ@@GLIBC_2.0
_ZNSs14_M_replace_auxEjjjc@@GLIBCXX_3.4
SteamRefreshAccountInfoEx
SteamReleaseCacheFiles
SteamFindFirst64
__cxa_guard_acquire@@CXXABI_1.3
SteamSizeFile
SteamVerifyEmailAddress
memmove@@GLIBC_2.0
setrlimit64@@GLIBC_2.1
SteamTellFile64
SteamGetAppPurchaseCountry
freopen@@GLIBC_2.0
_ZNSs6appendEPKc@@GLIBCXX_3.4
SteamUpdateSubscriptionBillingInfo
SteamRefreshMinimumFootprintFiles
_ZNSo5writeEPKci@@GLIBCXX_3.4
_ZNSsC1EPKcjRKSaIcE@@GLIBCXX_3.4
_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKSsSt13_Ios_Openmode@@GLIBCXX_3.4
mkfifo@@GLIBC_2.0
rmdir@@GLIBC_2.0
SteamMiniDumpInit
ctime@@GLIBC_2.0
SteamLog
ftruncate64@@GLIBC_2.1
_ZNSt9exceptionD2Ev@@GLIBCXX_3.4
SteamGetSubscriptionStats
SteamGetCurrentEmailAddress
unlink@@GLIBC_2.0
_ZNSt12__basic_fileIcED1Ev@@GLIBCXX_3.4
SteamStat
SteamFindNext
gethostbyname@@GLIBC_2.0
ioctl@@GLIBC_2.0
_ZNSs9_M_mutateEjjj@@GLIBCXX_3.4
SteamResumeCachePreloading
kill@@GLIBC_2.0
_ZNSi7putbackEc@@GLIBCXX_3.4
_ZTISt9exception@@GLIBCXX_3.4
stderr@@GLIBC_2.0
_ZNKSs4findEcj@@GLIBCXX_3.4
pthread_attr_setdetachstate@@GLIBC_2.0
__gmon_start__
__cxa_bad_cast@@CXXABI_1.3
strcpy@@GLIBC_2.0
fseeko64@@GLIBC_2.1
SteamEnumerateSubscriptionDiscount
SteamSetvBuf
__cxa_pure_virtual@@CXXABI_1.3
SteamGenerateSuggestedAccountNames
pthread_cond_destroy@@GLIBC_2.3.2
_ZSt4cerr@@GLIBCXX_3.4
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4
_ZNKSs4copyEPcjj@@GLIBCXX_3.4
_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
mmap64@@GLIBC_2.1
SteamCreateLogContext
SteamRepairOrDecryptCaches
scandir64@@GLIBC_2.2
_ZTISt13runtime_error@@GLIBCXX_3.4
_ZNKSs7compareERKSs@@GLIBCXX_3.4
realloc@@GLIBC_2.0
_ZNSs6appendEjc@@GLIBCXX_3.4
fopen@@GLIBC_2.1
_ZNSt6localeC1Ev@@GLIBCXX_3.4
_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@@GLIBCXX_3.4
bind@@GLIBC_2.0
ftell@@GLIBC_2.0
GCC: (crosstool-NG 1.12.2) 4.5.3
GCC: (GNU) 4.2.4
GCC: (GNU) 4.2.4
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
GCC: (crosstool-NG-1.5.0) 4.4.1
