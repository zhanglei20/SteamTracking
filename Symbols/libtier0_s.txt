
 B CAdHocValidation::s_pFirst
 B g_VProfManager
 B g_VProfProfilesRunningCount
 B g_VProfile
 B g_bInException
 CFDictionaryGetTypeID
 CFDictionaryGetValueIfPresent
 CFGetTypeID
 CFPropertyListCreateFromXMLData
 CFRelease
 CFStringGetCString
 CFURLCreateDataAndPropertiesFromResource
 CFURLCreateWithFileSystemPath
 D g_ClockSpeed
 D g_ClockSpeedMicrosecondsMultiplier
 D g_ClockSpeedMillisecondsMultiplier
 D g_ClockSpeedSecondsMultiplier
 D g_pMemAllocSteam
 D typeinfo for CAdHocValidation
 D typeinfo for CAdHocValidation_SimpleCallback
 D typeinfo for SteamThreadTools::CThread
 D vtable for CAdHocValidation_SimpleCallback
 D vtable for SteamThreadTools::CThread
 R typeinfo name for CAdHocValidation
 R typeinfo name for CAdHocValidation_SimpleCallback
 R typeinfo name for SteamThreadTools::CThread
 R typeinfo name for SteamVProf::CVProfManager
 T AllocateCrashMemoryReserve
 T AreStackTrackingFiltersEnabledAtStart
 T AssertMsgHelper<false>::AssertFailed(char const*, unsigned int, char const*, ...)
 T AssertMsgHelper<true>::AssertFailed(char const*, unsigned int, char const*)
 T AssertMsgImplementationF
 T AssertMsgImplementationPreformatted
 T AssertMsgImplementationV
 T BBlockingGetMiniDumpLock
 T BGetLocalFQDN
 T BGetMiniDumpLock
 T BWritingFatalMiniDump
 T BWritingMiniDump
 T BWritingNonFatalMiniDump
 T CAdHocValidation::CAdHocValidation()
 T CAdHocValidation::StaticValidateAll(CValidator&)
 T CAdHocValidation::~CAdHocValidation()
 T CAdHocValidation_SimpleCallback::CAdHocValidation_SimpleCallback(void (*)(CValidator&))
 T CAdHocValidation_SimpleCallback::DoValidate(CValidator&) const
 T CStack::Print(void (*)(int, CStack::PrintFrame const*, void*), void*) const
 T CTier0::ValidateGlobals(CValidator&)
 T CVProfile_ExitScope
 T CValidator::AddValidationLock(SteamThreadTools::CThreadMutex*)
 T CValidator::BExcludeAllocationFromTracking(char const*, int)
 T CValidator::CValidator(int, bool, IMemBlockClaimedList*)
 T CValidator::ClaimArrayMemory(void const*)
 T CValidator::ClaimConnection(unsigned int)
 T CValidator::ClaimMemory(void const*)
 T CValidator::ClaimMemory_Aligned(void const*)
 T CValidator::ClaimOsFile(int)
 T CValidator::ClaimSocket(int)
 T CValidator::ClaimTrackedKey(CTrackItems*, void*, unsigned long*)
 T CValidator::ClaimUntrackedMemory(unsigned long)
 T CValidator::DiffAgainst(CValidator*)
 T CValidator::Finalize()
 T CValidator::FindObject(void*)
 T CValidator::IsClaimed(void const*) const
 T CValidator::Pop()
 T CValidator::Push(char const*, void*, char const*)
 T CValidator::RenderLeaks(unsigned long)
 T CValidator::RenderObjects(unsigned long)
 T CValidator::SetAllocSizeFilter(int)
 T CValidator::UnlockValidationLocks()
 T CValidator::Validate(CValidator&, char const*)
 T CValidator::~CValidator()
 T CallAssertFailedNotifyFunc
 T CallFlushLogFunc
 T CatchAndWriteMiniDump
 T CatchAndWriteMiniDumpEx
 T CatchAndWriteMiniDumpExForVoidPtrFn
 T CatchAndWriteMiniDumpExReturnsInt
 T CatchAndWriteMiniDumpForVoidPtrFn
 T ClearStackTrackingFilters
 T ClearWritingMiniDump
 T CrackSmokingCompiler
 T CreateSimpleProcess
 T DLog
 T DWarning
 T DeclareCurrentThreadIsMainThread
 T DoNewAssertDialog
 T EnableCrashingOnCrashes
 T EnsureValidBoolValue
 T Error
 T FreeCrashMemoryReserve
 T GetAvailableRAM
 T GetCPUInformation()
 T GetCRunTimeVersion
 T GetCrashHandlerFactory
 T GetInstalledRAM
 T GetLocalHostname
 T GetMiniDumpBuildID
 T GetMiniDumpDirectory
 T GetMiniDumpSteamID
 T GetNumberOfSpewAndLogGroups
 T GetNumberOfStackTrackingFilters
 T GetPortableSystemInformation
 T GetSpewAndLogLevel
 T GetSpewAndLogLevelByGroupIndex
 T GetSpewOutputFunc
 T GetStackTrackingFilter
 T HasStackTrackingFilters
 T InitPME
 T InitializeStackTrackingFilters
 T Is64BitOS
 T IsInAssert
 T IsInFatalAssert
 T IsLogActive
 T IsSpewActive
 T IsStackTrackingFiltered
 T IsValidBoolValue
 T Log
 T MiniDumpUnlock
 T Msg
 T Plat_AbsoluteTime
 T Plat_AbsoluteTimeToFloat
 T Plat_Alloc
 T Plat_AttachDebuggerToProcess
 T Plat_CommandLineParamExists
 T Plat_CommandLineParamValue
 T Plat_DefaultAllocErrorFn
 T Plat_FloatTime
 T Plat_Free
 T Plat_GetExecutablePath
 T Plat_GetExecutablePathUTF8
 T Plat_GetPOSIXClockSource
 T Plat_GetPackageName
 T Plat_GetProcessArgv
 T Plat_GetStackBackTrace
 T Plat_IsChromeOS
 T Plat_IsGamescope
 T Plat_IsInDebugSession
 T Plat_IsSteamConsoleMode
 T Plat_IsSteamDeck
 T Plat_IsSteamOS
 T Plat_IsSteamOS3
 T Plat_IsTesla
 T Plat_IsWSL
 T Plat_MSTime
 T Plat_MSTime64
 T Plat_OutputDebugString
 T Plat_OutputDebugStringRaw
 T Plat_Realloc
 T Plat_RelativeTickFrequency
 T Plat_RelativeTicks
 T Plat_SetAllocErrorFn
 T Plat_TickAddMicroSec
 T Plat_TickDiffMicroSec
 T Plat_TickDiffMilliSec
 T Plat_USTime
 T Plat_VirtualAccessFlags
 T Plat_VirtualAlloc
 T Plat_VirtualFree
 T Plat_VirtualProtect
 T Plat_asctime
 T Plat_ctime
 T Plat_daylight
 T Plat_gmtime
 T Plat_localtime
 T Plat_timegm
 T Plat_timezone
 T RealGetCallStack
 T RealPrintCallStack
 T RealPrintRawCallStack
 T ReleaseThreadHandle
 T RunTypeValidationTests
 T SecureRandomBytes
 T SetAssertDumpStack
 T SetAssertFailedNotifyFunc
 T SetFlushLogFunc
 T SetFullMemoryDumpOnCrash
 T SetInAssert
 T SetInFatalAssert
 T SetMiniDumpAppID
 T SetMiniDumpBuildID
 T SetMiniDumpCustomInfo
 T SetMiniDumpProcessNameOverride
 T SetMiniDumpSteamID
 T SetStackTrackingFilter
 T ShouldUseNewAssertDialog
 T ShutdownPME
 T SpewActivate
 T SpewAndLogActivate
 T SpewAndLogChangeIfStillDefault
 T SpewChangeIfStillDefault
 T SpewOutputFunc
 T SpewWrittenMiniDumps
 T SteamThreadTools::CThread::BHasValidThreadID() const
 T SteamThreadTools::CThread::CThread()
 T SteamThreadTools::CThread::GetCurrentCThread()
 T SteamThreadTools::CThread::GetName()
 T SteamThreadTools::CThread::GetPriority() const
 T SteamThreadTools::CThread::GetResult() const
 T SteamThreadTools::CThread::GetThreadProc()
 T SteamThreadTools::CThread::Init()
 T SteamThreadTools::CThread::IsAlive() const
 T SteamThreadTools::CThread::IsThreadRunning() const
 T SteamThreadTools::CThread::Join(unsigned int)
 T SteamThreadTools::CThread::OnExit()
 T SteamThreadTools::CThread::Resume()
 T SteamThreadTools::CThread::SetName(char const*)
 T SteamThreadTools::CThread::SetPriority(int)
 T SteamThreadTools::CThread::Sleep(unsigned int)
 T SteamThreadTools::CThread::Start(unsigned long)
 T SteamThreadTools::CThread::Stop(int)
 T SteamThreadTools::CThread::Suspend()
 T SteamThreadTools::CThread::Terminate(int)
 T SteamThreadTools::CThread::ThreadExceptionWrapper(void*)
 T SteamThreadTools::CThread::ThreadProc(void*)
 T SteamThreadTools::CThread::WaitForCreateComplete(SteamThreadTools::CThreadEvent*)
 T SteamThreadTools::CThread::Yield()
 T SteamThreadTools::CThread::~CThread()
 T SteamThreadTools::CThreadEvent::CThreadEvent(bool)
 T SteamThreadTools::CThreadEvent::CThreadEvent(char const*, bool, bool)
 T SteamThreadTools::CThreadEvent::Check()
 T SteamThreadTools::CThreadEvent::Reset()
 T SteamThreadTools::CThreadEvent::Set()
 T SteamThreadTools::CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool)
 T SteamThreadTools::CThreadFullMutex::IsCreator() const
 T SteamThreadTools::CThreadFullMutex::Release()
 T SteamThreadTools::CThreadLocalBase::BIsValid() const
 T SteamThreadTools::CThreadLocalBase::CThreadLocalBase()
 T SteamThreadTools::CThreadLocalBase::Get() const
 T SteamThreadTools::CThreadLocalBase::Set(void*)
 T SteamThreadTools::CThreadLocalBase::~CThreadLocalBase()
 T SteamThreadTools::CThreadMutex::CThreadMutex()
 T SteamThreadTools::CThreadMutex::~CThreadMutex()
 T SteamThreadTools::CThreadRWLock::LockForWrite()
 T SteamThreadTools::CThreadRWLock::UnlockWrite()
 T SteamThreadTools::CThreadRWLock::WaitForRead()
 T SteamThreadTools::CThreadSemaphore::CThreadSemaphore(long, long)
 T SteamThreadTools::CThreadSemaphore::Release(long)
 T SteamThreadTools::CThreadSpinLock::Lock(unsigned int) volatile
 T SteamThreadTools::CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
 T SteamThreadTools::CThreadSyncObject::AssertUseable()
 T SteamThreadTools::CThreadSyncObject::CThreadSyncObject()
 T SteamThreadTools::CThreadSyncObject::CloseSemaphoreInternal(int, bool, char const*)
 T SteamThreadTools::CThreadSyncObject::CreateAnonymousSyncObjectInternal(bool, bool)
 T SteamThreadTools::CThreadSyncObject::CreateSemaphoreInternal(char const*, long, bool, bool*)
 T SteamThreadTools::CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
 T SteamThreadTools::CThreadSyncObject::EnsureSemaphorePostedInternal(int)
 T SteamThreadTools::CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
 T SteamThreadTools::CThreadSyncObject::OpenSemaphoreInternal(char const*, bool)
 T SteamThreadTools::CThreadSyncObject::ReleaseSemaphoreInternal(int, long)
 T SteamThreadTools::CThreadSyncObject::SaveNameToFile(char const*)
 T SteamThreadTools::CThreadSyncObject::SignalThreadSyncObjectInternal()
 T SteamThreadTools::CThreadSyncObject::Wait(unsigned int)
 T SteamThreadTools::CThreadSyncObject::operator!() const
 T SteamThreadTools::CThreadSyncObject::~CThreadSyncObject()
 T SteamThreadTools::CreateSimpleThread(unsigned int (*)(void*), void*, unsigned int*, unsigned int)
 T SteamVProf::CVProfManager::AddProfileForThread(SteamVProf::CVProfile*, unsigned int, _opaque_pthread_t*)
 T SteamVProf::CVProfManager::BIsProfilePtrValid(SteamVProf::CVProfile*)
 T SteamVProf::CVProfManager::CVProfManager()
 T SteamVProf::CVProfManager::CleanupUnusedProfiles()
 T SteamVProf::CVProfManager::DumpAllThreadProfiles(int)
 T SteamVProf::CVProfManager::EnableDumpSpikes(int)
 T SteamVProf::CVProfManager::GetAllThreadProfiles(SteamVProf::CVProfileArray*)
 T SteamVProf::CVProfManager::StartProfilingAllThreads(float, int)
 T SteamVProf::CVProfManager::StopProfilingAllThreads()
 T SteamVProf::CVProfManager::Validate(CValidator&, char const*)
 T SteamVProf::CVProfManager::~CVProfManager()
 T SteamVProf::CVProfNode::CVProfNode(SteamVProf::CVProfile*, char const*, SteamVProf::CVProfNode*, EVProfBugdetGroup)
 T SteamVProf::CVProfNode::GetCurTimeLessChildren()
 T SteamVProf::CVProfNode::GetPrevTimeLessChildren()
 T SteamVProf::CVProfNode::GetSubNode(char const*, EVProfBugdetGroup)
 T SteamVProf::CVProfNode::GetTotalTimeLessChildren()
 T SteamVProf::CVProfNode::Pause()
 T SteamVProf::CVProfNode::Reset()
 T SteamVProf::CVProfNode::ResetPeak()
 T SteamVProf::CVProfNode::Resume()
 T SteamVProf::CVProfNode::SetCurFrameTime(unsigned long)
 T SteamVProf::CVProfNode::Validate(CValidator&, char const*)
 T SteamVProf::CVProfNode::~CVProfNode()
 T SteamVProf::CVProfile::AddBudgetGroupName(EVProfBugdetGroup, int, char const*)
 T SteamVProf::CVProfile::AllocVProfNode(SteamVProf::CVProfile*, char const*, SteamVProf::CVProfNode*, EVProfBugdetGroup)
 T SteamVProf::CVProfile::BProfileHasNodesOutsideBudgetGroup_Recursive(SteamVProf::CVProfNode*, int)
 T SteamVProf::CVProfile::BudgetGroupNameToBudgetGroupID(char const*) const
 T SteamVProf::CVProfile::CVProfile()
 T SteamVProf::CVProfile::CreateBudgetGroups()
 T SteamVProf::CVProfile::DestructAndFreeNodesExceptRoot()
 T SteamVProf::CVProfile::Dump(char const*, ...)
 T SteamVProf::CVProfile::DumpNodes(SteamVProf::CVProfNode*, SteamVProf::CVProfNode*, int, bool)
 T SteamVProf::CVProfile::DumpSingleNode(SteamVProf::CVProfNode*, SteamVProf::CVProfNode*, int, bool)
 T SteamVProf::CVProfile::DumpSorted(char const*, double, bool (*)(SteamVProf::TimeSums_t const&, SteamVProf::TimeSums_t const&), int)
 T SteamVProf::CVProfile::EnterScope(char const*, EVProfBugdetGroup, void*)
 T SteamVProf::CVProfile::ExitScope()
 T SteamVProf::CVProfile::FindNode(SteamVProf::CVProfNode*, char const*)
 T SteamVProf::CVProfile::GetBudgetGroupColor(EVProfBugdetGroup, int&, int&, int&, int&)
 T SteamVProf::CVProfile::GetBudgetGroupName(EVProfBugdetGroup) const
 T SteamVProf::CVProfile::GetFrameTimeOutsideBudgetGroup_Recursive(SteamVProf::CVProfNode*, EVProfBugdetGroup)
 T SteamVProf::CVProfile::GetThreadID()
 T SteamVProf::CVProfile::MarkFrame(char const*)
 T SteamVProf::CVProfile::OutputReport(int, char const*, int)
 T SteamVProf::CVProfile::Pause()
 T SteamVProf::CVProfile::RegisterCallbackHandler(SteamVProf::IVProfileCallbackHandler*)
 T SteamVProf::CVProfile::Reset()
 T SteamVProf::CVProfile::ResetPeaks()
 T SteamVProf::CVProfile::Resume()
 T SteamVProf::CVProfile::Start()
 T SteamVProf::CVProfile::Stop()
 T SteamVProf::CVProfile::SumTimes(SteamVProf::CVProfNode*, int)
 T SteamVProf::CVProfile::Term()
 T SteamVProf::CVProfile::UnregisterCallbackHandler(SteamVProf::IVProfileCallbackHandler*)
 T SteamVProf::CVProfile::Validate(CValidator&, char const*)
 T SteamVProf::CVProfile::~CVProfile()
 T SteamVProf::CVProfileArray::~CVProfileArray()
 T SteamVProf::CVProfileThreadEntry::CVProfileThreadEntry(SteamVProf::CVProfile*, unsigned int, _opaque_pthread_t*)
 T SteamVProf::CVProfileThreadEntry::DeleteProfile()
 T SteamVProf::CVProfileThreadEntry::DumpProfile(int)
 T SteamVProf::CVProfileThreadEntry::OnFrameCompleted()
 T SteamVProf::CVProfileThreadEntry::OnNewFrameEntered()
 T SteamVProf::CVProfileThreadEntry::SetDumpSpikesThreshold(int)
 T SteamVProf::CVProfileThreadEntry::StartProfiling(float, int)
 T SteamVProf::CVProfileThreadEntry::StopProfiling()
 T TSListBase_Init
 T TSListBase_Pop
 T TSListBase_Push
 T TSListBase_SwapList
 T TSListBase_UnsafePeek
 T TSQueueBase_Init
 T TSQueueBase_Pop
 T TSQueueBase_Push
 T TSQueueBase_UnsafeDummy
 T TSQueueBase_UnsafePeek
 T TSQueue_PopIntoFreeList
 T TSQueue_UnsafeDebugCheck
 T ThreadCloseProcess
 T ThreadFindProcessByName
 T ThreadGetCurrentHandle
 T ThreadGetCurrentId
 T ThreadGetCurrentProcessHandle
 T ThreadGetCurrentProcessId
 T ThreadGetCurrentRunningRef
 T ThreadGetPriority
 T ThreadGetProcessExitCode
 T ThreadGetProcessId
 T ThreadImplOneTimeInit
 T ThreadInMainThread
 T ThreadInterlockedAssignIf
 T ThreadInterlockedAssignIf128
 T ThreadInterlockedAssignIf64
 T ThreadInterlockedAssignPointerIf
 T ThreadInterlockedCompareExchange
 T ThreadInterlockedCompareExchange64
 T ThreadInterlockedCompareExchangePointer
 T ThreadInterlockedDecrement
 T ThreadInterlockedDecrement64
 T ThreadInterlockedExchange
 T ThreadInterlockedExchange64
 T ThreadInterlockedExchangeAdd
 T ThreadInterlockedExchangeAdd64
 T ThreadInterlockedExchangePointer
 T ThreadInterlockedIncrement
 T ThreadInterlockedIncrement64
 T ThreadIsProcessActive
 T ThreadIsProcessIdActive
 T ThreadIsThreadRunning
 T ThreadMicroSleepPOSIX
 T ThreadOpenProcess
 T ThreadResumeProcess
 T ThreadSetAffinity
 T ThreadSetBackgroundPriority
 T ThreadSetDebugName
 T ThreadSetPriority
 T ThreadShellExecute
 T ThreadShellExecuteNoWindow
 T ThreadSleep
 T ThreadSpinWaitForValue
 T ThreadSuspendProcess
 T ThreadTerminate
 T ThreadTerminateProcessCode
 T ThreadWaitForProcessExit
 T VProfInternalEnterScopeCurrentThread
 T VProfInternalGetProfileForCurrentThread
 T ValidateSpew
 T Warning
 T WriteMiniDump
 T _DMsg
 T _SpewMessageType
 T _SpewMessageTypeSourceFmt
 T _SpewMessageTypeSourceV
 T vtune
 _DefaultRuneLocale
 _NSGetArgc
 _NSGetArgv
 _NSGetExecutablePath
 _Unwind_Resume
 __CFConstantStringClassReference
 __bzero
 __chkstk_darwin
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_begin_catch
 __cxa_end_catch
 __cxa_free_exception
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_throw
 __divdi3
 __error
 __gxx_personality_v0
 __maskrune
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __stdoutp
 __tolower
 __udivdi3
 __umoddi3
 _exit
 asctime_r
 atoi
 backtrace
 backtrace_symbols
 bzero
 chdir
 ctime_r
 daylight
 dladdr
 dlclose
 dlopen
 dlsym
 dyld_stub_binder
 execv
 fflush
 fork
 fprintf
 fputc
 fputs
 fputs$UNIX2003
 free
 fwrite
 fwrite$UNIX2003
 getenv
 gethostbyname
 gethostname
 getpid
 gettimeofday
 gmtime_r
 host_page_size
 host_statistics
 kCFAllocatorDefault
 kill
 kill$UNIX2003
 localtime_r
 mach_continuous_time
 mach_host_self
 mach_timebase_info
 malloc
 malloc_size
 memcmp
 memcpy
 memmove
 mmap
 mmap$UNIX2003
 mprotect
 mprotect$UNIX2003
 munmap
 munmap$UNIX2003
 nanosleep
 nanosleep$UNIX2003
 open
 open$UNIX2003
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 posix_memalign
 printf
 pthread_attr_init
 pthread_attr_setstacksize
 pthread_cancel
 pthread_cancel$UNIX2003
 pthread_cond_broadcast
 pthread_cond_destroy
 pthread_cond_init
 pthread_cond_init$UNIX2003
 pthread_cond_signal
 pthread_cond_timedwait_relative_np
 pthread_cond_wait
 pthread_cond_wait$UNIX2003
 pthread_condattr_destroy
 pthread_condattr_init
 pthread_create
 pthread_equal
 pthread_getspecific
 pthread_join
 pthread_join$UNIX2003
 pthread_key_create
 pthread_key_delete
 pthread_kill
 pthread_mach_thread_np
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_trylock
 pthread_mutex_unlock
 pthread_mutexattr_destroy
 pthread_mutexattr_destroy$UNIX2003
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_self
 pthread_setschedparam
 pthread_setspecific
 read
 read$UNIX2003
 realloc
 sched_get_priority_max
 sched_get_priority_min
 sched_yield
 semctl
 semctl$UNIX2003
 semget
 semop
 setsid
 sigaction
 signal
 sigprocmask
 snprintf
 sscanf
 stat
 stat$INODE64
 std::__1::__basic_string_common<true>::__throw_length_error() const
 std::__1::__next_prime(unsigned long)
 std::__1::__vector_base_common<true>::__throw_length_error() const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 std::length_error::~length_error()
 std::logic_error::logic_error(char const*)
 std::terminate()
 strcasecmp
 strchr
 strcmp
 strcpy
 strerror
 strerror$UNIX2003
 strlen
 strncasecmp
 strncat
 strncpy
 strrchr
 strstr
 sysctl
 sysctlbyname
 sysctlnametomib
 system
 system$UNIX2003
 time
 timegm
 timezone
 timezone$UNIX2003
 typeinfo for int
 typeinfo for std::length_error
 usleep
 usleep$UNIX2003
 vfprintf
 vsnprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for std::length_error
 waitid
 waitid$UNIX2003
 waitpid
 waitpid$UNIX2003
